

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat May 30 22:39:27 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK3,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    17                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	maintext,global,class=CODE,split=1,delta=2
    22                           	psect	text1,local,class=CODE,merge=1,delta=2
    23                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text3,local,class=CODE,merge=1,delta=2
    25                           	psect	text4,local,class=CODE,merge=1,delta=2
    26                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text6,local,class=CODE,merge=1,delta=2
    28                           	psect	text7,local,class=CODE,merge=1,delta=2
    29                           	psect	text8,local,class=CODE,merge=1,delta=2
    30                           	psect	text9,local,class=CODE,merge=1,delta=2
    31                           	psect	text10,local,class=CODE,merge=1,delta=2
    32                           	psect	text11,local,class=CODE,merge=1,delta=2
    33                           	psect	text12,local,class=CODE,merge=1,delta=2
    34                           	psect	text13,local,class=CODE,merge=1,delta=2
    35                           	psect	text14,local,class=CODE,merge=1,delta=2
    36                           	psect	text15,local,class=CODE,merge=1,delta=2
    37                           	psect	text16,local,class=CODE,merge=1,delta=2
    38                           	psect	text17,local,class=CODE,merge=1,delta=2
    39                           	psect	text18,local,class=CODE,merge=1,delta=2
    40                           	psect	text19,local,class=CODE,merge=1,delta=2
    41                           	psect	text20,local,class=CODE,merge=1,delta=2
    42                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text23,local,class=CODE,merge=1,delta=2
    45                           	psect	text24,local,class=CODE,merge=1,delta=2
    46                           	psect	text25,local,class=CODE,merge=1,delta=2
    47                           	psect	text26,local,class=CODE,merge=1,delta=2
    48                           	psect	text27,local,class=CODE,merge=1,delta=2
    49                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    50                           	psect	text29,local,class=CODE,merge=1,delta=2
    51                           	psect	text30,local,class=CODE,merge=1,delta=2,group=1
    52                           	psect	text31,local,class=CODE,merge=1,delta=2,group=1
    53                           	psect	text32,local,class=CODE,merge=1,delta=2
    54                           	psect	text33,local,class=CODE,merge=1,delta=2
    55                           	psect	text34,local,class=CODE,merge=1,delta=2,group=1
    56                           	psect	text35,local,class=CODE,merge=1,delta=2,group=1
    57                           	psect	text36,local,class=CODE,merge=1,delta=2,group=1
    58                           	psect	text37,local,class=CODE,merge=1,delta=2,group=1
    59                           	psect	text38,local,class=CODE,merge=1,delta=2,group=1
    60                           	psect	text39,local,class=CODE,merge=1,delta=2
    61                           	psect	text40,local,class=CODE,merge=1,delta=2
    62                           	psect	text41,local,class=CODE,merge=1,delta=2
    63                           	psect	text42,local,class=CODE,merge=1,delta=2
    64                           	psect	intentry,global,class=CODE,delta=2
    65                           	psect	text43,local,class=CODE,merge=1,delta=2
    66                           	psect	text44,local,class=CODE,merge=1,delta=2
    67                           	psect	text45,local,class=CODE,merge=1,delta=2
    68                           	psect	text46,local,class=CODE,merge=1,delta=2
    69                           	psect	text47,local,class=CODE,merge=1,delta=2
    70                           	psect	text48,local,class=CODE,merge=1,delta=2
    71                           	psect	text49,local,class=CODE,merge=1,delta=2
    72                           	psect	text50,local,class=CODE,merge=1,delta=2,group=1
    73                           	dabs	1,0x7E,2
    74  0000                     
    75                           ; Version 2.10
    76                           ; Generated 31/07/2019 GMT
    77                           ; 
    78                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    79                           ; All rights reserved.
    80                           ; 
    81                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    82                           ; 
    83                           ; Redistribution and use in source and binary forms, with or without modification, are
    84                           ; permitted provided that the following conditions are met:
    85                           ; 
    86                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    87                           ;        conditions and the following disclaimer.
    88                           ; 
    89                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    90                           ;        of conditions and the following disclaimer in the documentation and/or other
    91                           ;        materials provided with the distribution.
    92                           ; 
    93                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    94                           ;        software without specific prior written permission.
    95                           ; 
    96                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    97                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    98                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    99                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   100                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   101                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   102                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   103                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   104                           ; 
   105                           ; 
   106                           ; Code-generator required, PIC16F877A Definitions
   107                           ; 
   108                           ; SFR Addresses
   109  0000                     	;# 
   110  0001                     	;# 
   111  0002                     	;# 
   112  0003                     	;# 
   113  0004                     	;# 
   114  0005                     	;# 
   115  0006                     	;# 
   116  0007                     	;# 
   117  0008                     	;# 
   118  0009                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000D                     	;# 
   123  000E                     	;# 
   124  000E                     	;# 
   125  000F                     	;# 
   126  0010                     	;# 
   127  0011                     	;# 
   128  0012                     	;# 
   129  0013                     	;# 
   130  0014                     	;# 
   131  0015                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0017                     	;# 
   135  0018                     	;# 
   136  0019                     	;# 
   137  001A                     	;# 
   138  001B                     	;# 
   139  001B                     	;# 
   140  001C                     	;# 
   141  001D                     	;# 
   142  001E                     	;# 
   143  001F                     	;# 
   144  0081                     	;# 
   145  0085                     	;# 
   146  0086                     	;# 
   147  0087                     	;# 
   148  0088                     	;# 
   149  0089                     	;# 
   150  008C                     	;# 
   151  008D                     	;# 
   152  008E                     	;# 
   153  0091                     	;# 
   154  0092                     	;# 
   155  0093                     	;# 
   156  0094                     	;# 
   157  0098                     	;# 
   158  0099                     	;# 
   159  009C                     	;# 
   160  009D                     	;# 
   161  009E                     	;# 
   162  009F                     	;# 
   163  010C                     	;# 
   164  010D                     	;# 
   165  010E                     	;# 
   166  010F                     	;# 
   167  018C                     	;# 
   168  018D                     	;# 
   169  0000                     	;# 
   170  0001                     	;# 
   171  0002                     	;# 
   172  0003                     	;# 
   173  0004                     	;# 
   174  0005                     	;# 
   175  0006                     	;# 
   176  0007                     	;# 
   177  0008                     	;# 
   178  0009                     	;# 
   179  000A                     	;# 
   180  000B                     	;# 
   181  000C                     	;# 
   182  000D                     	;# 
   183  000E                     	;# 
   184  000E                     	;# 
   185  000F                     	;# 
   186  0010                     	;# 
   187  0011                     	;# 
   188  0012                     	;# 
   189  0013                     	;# 
   190  0014                     	;# 
   191  0015                     	;# 
   192  0015                     	;# 
   193  0016                     	;# 
   194  0017                     	;# 
   195  0018                     	;# 
   196  0019                     	;# 
   197  001A                     	;# 
   198  001B                     	;# 
   199  001B                     	;# 
   200  001C                     	;# 
   201  001D                     	;# 
   202  001E                     	;# 
   203  001F                     	;# 
   204  0081                     	;# 
   205  0085                     	;# 
   206  0086                     	;# 
   207  0087                     	;# 
   208  0088                     	;# 
   209  0089                     	;# 
   210  008C                     	;# 
   211  008D                     	;# 
   212  008E                     	;# 
   213  0091                     	;# 
   214  0092                     	;# 
   215  0093                     	;# 
   216  0094                     	;# 
   217  0098                     	;# 
   218  0099                     	;# 
   219  009C                     	;# 
   220  009D                     	;# 
   221  009E                     	;# 
   222  009F                     	;# 
   223  010C                     	;# 
   224  010D                     	;# 
   225  010E                     	;# 
   226  010F                     	;# 
   227  018C                     	;# 
   228  018D                     	;# 
   229  0000                     	;# 
   230  0001                     	;# 
   231  0002                     	;# 
   232  0003                     	;# 
   233  0004                     	;# 
   234  0005                     	;# 
   235  0006                     	;# 
   236  0007                     	;# 
   237  0008                     	;# 
   238  0009                     	;# 
   239  000A                     	;# 
   240  000B                     	;# 
   241  000C                     	;# 
   242  000D                     	;# 
   243  000E                     	;# 
   244  000E                     	;# 
   245  000F                     	;# 
   246  0010                     	;# 
   247  0011                     	;# 
   248  0012                     	;# 
   249  0013                     	;# 
   250  0014                     	;# 
   251  0015                     	;# 
   252  0015                     	;# 
   253  0016                     	;# 
   254  0017                     	;# 
   255  0018                     	;# 
   256  0019                     	;# 
   257  001A                     	;# 
   258  001B                     	;# 
   259  001B                     	;# 
   260  001C                     	;# 
   261  001D                     	;# 
   262  001E                     	;# 
   263  001F                     	;# 
   264  0081                     	;# 
   265  0085                     	;# 
   266  0086                     	;# 
   267  0087                     	;# 
   268  0088                     	;# 
   269  0089                     	;# 
   270  008C                     	;# 
   271  008D                     	;# 
   272  008E                     	;# 
   273  0091                     	;# 
   274  0092                     	;# 
   275  0093                     	;# 
   276  0094                     	;# 
   277  0098                     	;# 
   278  0099                     	;# 
   279  009C                     	;# 
   280  009D                     	;# 
   281  009E                     	;# 
   282  009F                     	;# 
   283  010C                     	;# 
   284  010D                     	;# 
   285  010E                     	;# 
   286  010F                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289  0000                     	;# 
   290  0001                     	;# 
   291  0002                     	;# 
   292  0003                     	;# 
   293  0004                     	;# 
   294  0005                     	;# 
   295  0006                     	;# 
   296  0007                     	;# 
   297  0008                     	;# 
   298  0009                     	;# 
   299  000A                     	;# 
   300  000B                     	;# 
   301  000C                     	;# 
   302  000D                     	;# 
   303  000E                     	;# 
   304  000E                     	;# 
   305  000F                     	;# 
   306  0010                     	;# 
   307  0011                     	;# 
   308  0012                     	;# 
   309  0013                     	;# 
   310  0014                     	;# 
   311  0015                     	;# 
   312  0015                     	;# 
   313  0016                     	;# 
   314  0017                     	;# 
   315  0018                     	;# 
   316  0019                     	;# 
   317  001A                     	;# 
   318  001B                     	;# 
   319  001B                     	;# 
   320  001C                     	;# 
   321  001D                     	;# 
   322  001E                     	;# 
   323  001F                     	;# 
   324  0081                     	;# 
   325  0085                     	;# 
   326  0086                     	;# 
   327  0087                     	;# 
   328  0088                     	;# 
   329  0089                     	;# 
   330  008C                     	;# 
   331  008D                     	;# 
   332  008E                     	;# 
   333  0091                     	;# 
   334  0092                     	;# 
   335  0093                     	;# 
   336  0094                     	;# 
   337  0098                     	;# 
   338  0099                     	;# 
   339  009C                     	;# 
   340  009D                     	;# 
   341  009E                     	;# 
   342  009F                     	;# 
   343  010C                     	;# 
   344  010D                     	;# 
   345  010E                     	;# 
   346  010F                     	;# 
   347  018C                     	;# 
   348  018D                     	;# 
   349  0000                     	;# 
   350  0001                     	;# 
   351  0002                     	;# 
   352  0003                     	;# 
   353  0004                     	;# 
   354  0005                     	;# 
   355  0006                     	;# 
   356  0007                     	;# 
   357  0008                     	;# 
   358  0009                     	;# 
   359  000A                     	;# 
   360  000B                     	;# 
   361  000C                     	;# 
   362  000D                     	;# 
   363  000E                     	;# 
   364  000E                     	;# 
   365  000F                     	;# 
   366  0010                     	;# 
   367  0011                     	;# 
   368  0012                     	;# 
   369  0013                     	;# 
   370  0014                     	;# 
   371  0015                     	;# 
   372  0015                     	;# 
   373  0016                     	;# 
   374  0017                     	;# 
   375  0018                     	;# 
   376  0019                     	;# 
   377  001A                     	;# 
   378  001B                     	;# 
   379  001B                     	;# 
   380  001C                     	;# 
   381  001D                     	;# 
   382  001E                     	;# 
   383  001F                     	;# 
   384  0081                     	;# 
   385  0085                     	;# 
   386  0086                     	;# 
   387  0087                     	;# 
   388  0088                     	;# 
   389  0089                     	;# 
   390  008C                     	;# 
   391  008D                     	;# 
   392  008E                     	;# 
   393  0091                     	;# 
   394  0092                     	;# 
   395  0093                     	;# 
   396  0094                     	;# 
   397  0098                     	;# 
   398  0099                     	;# 
   399  009C                     	;# 
   400  009D                     	;# 
   401  009E                     	;# 
   402  009F                     	;# 
   403  010C                     	;# 
   404  010D                     	;# 
   405  010E                     	;# 
   406  010F                     	;# 
   407  018C                     	;# 
   408  018D                     	;# 
   409                           
   410                           	psect	idataBANK0
   411  1000                     __pidataBANK0:	
   412                           
   413                           ;initializer for _PWM_freq
   414  1000  3488               	retlw	136
   415  1001  3413               	retlw	19
   416  1002  3400               	retlw	0
   417  1003  3400               	retlw	0
   418                           
   419                           	psect	idataBANK3
   420  1C77                     __pidataBANK3:	
   421                           
   422                           ;initializer for write_to_EPPROM@F1063
   423  1C77  3420               	retlw	32
   424  1C78  3454               	retlw	84
   425  1C79  3472               	retlw	114
   426  1C7A  3461               	retlw	97
   427  1C7B  3462               	retlw	98
   428  1C7C  3461               	retlw	97
   429  1C7D  346C               	retlw	108
   430  1C7E  3468               	retlw	104
   431  1C7F  346F               	retlw	111
   432  1C80  3420               	retlw	32
   433  1C81  3453               	retlw	83
   434  1C82  3441               	retlw	65
   435  1C83  3444               	retlw	68
   436  1C84  3420               	retlw	32
   437  1C85  340A               	retlw	10
   438  1C86  3420               	retlw	32
   439  1C87  3400               	retlw	0
   440  1C88  3400               	retlw	0
   441  1C89  3400               	retlw	0
   442  1C8A  3400               	retlw	0
   443  1C8B  3400               	retlw	0
   444  1C8C  3400               	retlw	0
   445  1C8D  3400               	retlw	0
   446  1C8E  3400               	retlw	0
   447  1C8F  3400               	retlw	0
   448  1C90  3400               	retlw	0
   449  1C91  3400               	retlw	0
   450  1C92  3400               	retlw	0
   451  1C93  3400               	retlw	0
   452  1C94  3400               	retlw	0
   453                           
   454                           	psect	strings
   455  0800                     __pstrings:	
   456  0800                     stringtab:	
   457  0800                     __stringtab:	
   458                           
   459                           ;	String table - string pointers are 1 byte each
   460  0800  1BFF               	btfsc	btemp+1,7
   461  0801  280A               	ljmp	stringcode
   462  0802  1383               	bcf	3,7
   463  0803  187F               	btfsc	btemp+1,0
   464  0804  1783               	bsf	3,7
   465  0805  0800               	movf	0,w
   466  0806  0A84               	incf	4,f
   467  0807  1903               	skipnz
   468  0808  0AFF               	incf	btemp+1,f
   469  0809  0008               	return
   470  080A                     stringcode:	
   471  080A                     stringdir:	
   472  080A  3008               	movlw	high stringdir
   473  080B  008A               	movwf	10
   474  080C  0804               	movf	4,w
   475  080D  0A84               	incf	4,f
   476  080E  0782               	addwf	2,f
   477  080F                     __stringbase:	
   478  080F  3400               	retlw	0
   479  0810                     __end_of__stringtab:	
   480  0810                     _dpowers:	
   481  0810  3401               	retlw	1
   482  0811  3400               	retlw	0
   483  0812  340A               	retlw	10
   484  0813  3400               	retlw	0
   485  0814  3464               	retlw	100
   486  0815  3400               	retlw	0
   487  0816  34E8               	retlw	232
   488  0817  3403               	retlw	3
   489  0818  3410               	retlw	16
   490  0819  3427               	retlw	39
   491  081A                     __end_of_dpowers:	
   492  081A                     teclado@linha:	
   493  081A  3401               	retlw	1
   494  081B  3402               	retlw	2
   495  081C  3404               	retlw	4
   496  081D  3400               	retlw	0
   497  081E                     __end_ofteclado@linha:	
   498  0013                     _SSPBUF	set	19
   499  0014                     _SSPCON	set	20
   500  001A                     _RCREG	set	26
   501  0019                     _TXREG	set	25
   502  001E                     _ADRESH	set	30
   503  001F                     _ADCON0	set	31
   504  0008                     _PORTD	set	8
   505  0010                     _T1CON	set	16
   506  0017                     _CCP1CON	set	23
   507  0006                     _PORTBbits	set	6
   508  0007                     _PORTCbits	set	7
   509  0008                     _PORTDbits	set	8
   510  0006                     _PORTB	set	6
   511  000E                     _TMR1L	set	14
   512  0001                     _TMR0	set	1
   513  0015                     _CCPR1L	set	21
   514  0065                     _RCIF	set	101
   515  00C4                     _CREN	set	196
   516  00C7                     _SPEN	set	199
   517  00FA                     _GO_nDONE	set	250
   518  005D                     _TMR0IE	set	93
   519  0080                     _TMR1ON	set	128
   520  0083                     _T1OSCEN	set	131
   521  0082                     _T1SYNC	set	130
   522  0081                     _TMR1CS	set	129
   523  005C                     _INTE	set	92
   524  005E                     _PEIE	set	94
   525  005F                     _GIE	set	95
   526  0059                     _INTF	set	89
   527  005A                     _T0IF	set	90
   528  005A                     _TMR0IF	set	90
   529  00BC                     _CCP1Y	set	188
   530  00BD                     _CCP1X	set	189
   531  0092                     _TMR2ON	set	146
   532  0091                     _T2CKPS1	set	145
   533  0090                     _T2CKPS0	set	144
   534  00BA                     _CCP1M2	set	186
   535  00BB                     _CCP1M3	set	187
   536  0094                     _SSPSTAT	set	148
   537  0093                     _SSPADD	set	147
   538  0091                     _SSPCON2	set	145
   539  0099                     _SPBRG	set	153
   540  009E                     _ADRESL	set	158
   541  009F                     _ADCON1	set	159
   542  0088                     _TRISDbits	set	136
   543  0086                     _TRISBbits	set	134
   544  0087                     _TRISCbits	set	135
   545  0085                     _TRISA	set	133
   546  0088                     _TRISD	set	136
   547  0086                     _TRISB	set	134
   548  0081                     _OPTION_REG	set	129
   549  0092                     _PR2	set	146
   550  048C                     _ACKEN	set	1164
   551  048D                     _ACKDT	set	1165
   552  048B                     _RCEN	set	1163
   553  048A                     _PEN	set	1162
   554  0488                     _SEN	set	1160
   555  043C                     _TRISC4	set	1084
   556  043B                     _TRISC3	set	1083
   557  04C1                     _TRMT	set	1217
   558  04C5                     _TXEN	set	1221
   559  043E                     _TRISC6	set	1086
   560  043F                     _TRISC7	set	1087
   561  04C4                     _SYNC	set	1220
   562  04C2                     _BRGH	set	1218
   563  043A                     _TRISC2	set	1082
   564  081E                     STR_1:	
   565  081E  347B               	retlw	123	;'{'
   566  081F  3427               	retlw	39	;'''
   567  0820  3474               	retlw	116	;'t'
   568  0821  3465               	retlw	101	;'e'
   569  0822  346D               	retlw	109	;'m'
   570  0823  3470               	retlw	112	;'p'
   571  0824  3465               	retlw	101	;'e'
   572  0825  3472               	retlw	114	;'r'
   573  0826  3461               	retlw	97	;'a'
   574  0827  3474               	retlw	116	;'t'
   575  0828  3475               	retlw	117	;'u'
   576  0829  3472               	retlw	114	;'r'
   577  082A  3461               	retlw	97	;'a'
   578  082B  3427               	retlw	39	;'''
   579  082C  3420               	retlw	32	;' '
   580  082D  343A               	retlw	58	;':'
   581  082E  3420               	retlw	32	;' '
   582  082F  3425               	retlw	37	;'%'
   583  0830  3464               	retlw	100	;'d'
   584  0831  3420               	retlw	32	;' '
   585  0832  342C               	retlw	44	;','
   586  0833  3420               	retlw	32	;' '
   587  0834  3427               	retlw	39	;'''
   588  0835  3468               	retlw	104	;'h'
   589  0836  3475               	retlw	117	;'u'
   590  0837  346D               	retlw	109	;'m'
   591  0838  3469               	retlw	105	;'i'
   592  0839  3464               	retlw	100	;'d'
   593  083A  3461               	retlw	97	;'a'
   594  083B  3464               	retlw	100	;'d'
   595  083C  3465               	retlw	101	;'e'
   596  083D  3427               	retlw	39	;'''
   597  083E  3420               	retlw	32	;' '
   598  083F  343A               	retlw	58	;':'
   599  0840  3420               	retlw	32	;' '
   600  0841  3425               	retlw	37	;'%'
   601  0842  3464               	retlw	100	;'d'
   602  0843  3420               	retlw	32	;' '
   603  0844  342C               	retlw	44	;','
   604  0845  3420               	retlw	32	;' '
   605  0846  3427               	retlw	39	;'''
   606  0847  3476               	retlw	118	;'v'
   607  0848  3465               	retlw	101	;'e'
   608  0849  346C               	retlw	108	;'l'
   609  084A  346F               	retlw	111	;'o'
   610  084B  3463               	retlw	99	;'c'
   611  084C  3469               	retlw	105	;'i'
   612  084D  3464               	retlw	100	;'d'
   613  084E  3461               	retlw	97	;'a'
   614  084F  3464               	retlw	100	;'d'
   615  0850  3465               	retlw	101	;'e'
   616  0851  3427               	retlw	39	;'''
   617  0852  3420               	retlw	32	;' '
   618  0853  343A               	retlw	58	;':'
   619  0854  3420               	retlw	32	;' '
   620  0855  3425               	retlw	37	;'%'
   621  0856  3464               	retlw	100	;'d'
   622  0857  342C               	retlw	44	;','
   623  0858  3420               	retlw	32	;' '
   624  0859  3427               	retlw	39	;'''
   625  085A  3461               	retlw	97	;'a'
   626  085B  346C               	retlw	108	;'l'
   627  085C  3461               	retlw	97	;'a'
   628  085D  3472               	retlw	114	;'r'
   629  085E  346D               	retlw	109	;'m'
   630  085F  3427               	retlw	39	;'''
   631  0860  3420               	retlw	32	;' '
   632  0861  343A               	retlw	58	;':'
   633  0862  3420               	retlw	32	;' '
   634  0863  3425               	retlw	37	;'%'
   635  0864  3464               	retlw	100	;'d'
   636  0865  347D               	retlw	125	;'}'
   637  0866  3424               	retlw	36	;'$'
   638  0867  3400               	retlw	0
   639  0868                     STR_3:	
   640  0868  3431               	retlw	49	;'1'
   641  0869  3420               	retlw	32	;' '
   642  086A  3450               	retlw	80	;'P'
   643  086B  3465               	retlw	101	;'e'
   644  086C  3464               	retlw	100	;'d'
   645  086D  3469               	retlw	105	;'i'
   646  086E  3464               	retlw	100	;'d'
   647  086F  346F               	retlw	111	;'o'
   648  0870  3420               	retlw	32	;' '
   649  0871  3464               	retlw	100	;'d'
   650  0872  3465               	retlw	101	;'e'
   651  0873  3420               	retlw	32	;' '
   652  0874  3469               	retlw	105	;'i'
   653  0875  346E               	retlw	110	;'n'
   654  0876  3466               	retlw	102	;'f'
   655  0877  346F               	retlw	111	;'o'
   656  0878  3472               	retlw	114	;'r'
   657  0879  346D               	retlw	109	;'m'
   658  087A  3461               	retlw	97	;'a'
   659  087B  3463               	retlw	99	;'c'
   660  087C  3461               	retlw	97	;'a'
   661  087D  346F               	retlw	111	;'o'
   662  087E  3420               	retlw	32	;' '
   663  087F  340A               	retlw	10
   664  0880  3400               	retlw	0
   665  0881                     STR_18:	
   666  0881  3450               	retlw	80	;'P'
   667  0882  3461               	retlw	97	;'a'
   668  0883  3473               	retlw	115	;'s'
   669  0884  3473               	retlw	115	;'s'
   670  0885  3477               	retlw	119	;'w'
   671  0886  346F               	retlw	111	;'o'
   672  0887  3472               	retlw	114	;'r'
   673  0888  3464               	retlw	100	;'d'
   674  0889  3420               	retlw	32	;' '
   675  088A  3449               	retlw	73	;'I'
   676  088B  346E               	retlw	110	;'n'
   677  088C  3463               	retlw	99	;'c'
   678  088D  346F               	retlw	111	;'o'
   679  088E  3472               	retlw	114	;'r'
   680  088F  3472               	retlw	114	;'r'
   681  0890  3465               	retlw	101	;'e'
   682  0891  3474               	retlw	116	;'t'
   683  0892  3461               	retlw	97	;'a'
   684  0893  3400               	retlw	0
   685  0894                     STR_7:	
   686  0894  3430               	retlw	48	;'0'
   687  0895  3420               	retlw	32	;' '
   688  0896  3432               	retlw	50	;'2'
   689  0897  3420               	retlw	32	;' '
   690  0898  3474               	retlw	116	;'t'
   691  0899  3465               	retlw	101	;'e'
   692  089A  346D               	retlw	109	;'m'
   693  089B  3470               	retlw	112	;'p'
   694  089C  3465               	retlw	101	;'e'
   695  089D  3472               	retlw	114	;'r'
   696  089E  3461               	retlw	97	;'a'
   697  089F  3474               	retlw	116	;'t'
   698  08A0  3475               	retlw	117	;'u'
   699  08A1  3472               	retlw	114	;'r'
   700  08A2  3461               	retlw	97	;'a'
   701  08A3  3420               	retlw	32	;' '
   702  08A4  340A               	retlw	10
   703  08A5  3400               	retlw	0
   704  08A6                     STR_15:	
   705  08A6  3450               	retlw	80	;'P'
   706  08A7  3461               	retlw	97	;'a'
   707  08A8  3473               	retlw	115	;'s'
   708  08A9  3473               	retlw	115	;'s'
   709  08AA  3477               	retlw	119	;'w'
   710  08AB  346F               	retlw	111	;'o'
   711  08AC  3472               	retlw	114	;'r'
   712  08AD  3464               	retlw	100	;'d'
   713  08AE  3420               	retlw	32	;' '
   714  08AF  3443               	retlw	67	;'C'
   715  08B0  346F               	retlw	111	;'o'
   716  08B1  3472               	retlw	114	;'r'
   717  08B2  3472               	retlw	114	;'r'
   718  08B3  3465               	retlw	101	;'e'
   719  08B4  3474               	retlw	116	;'t'
   720  08B5  3461               	retlw	97	;'a'
   721  08B6  3400               	retlw	0
   722  08B7                     STR_12:	
   723  08B7  3449               	retlw	73	;'I'
   724  08B8  346E               	retlw	110	;'n'
   725  08B9  3473               	retlw	115	;'s'
   726  08BA  3465               	retlw	101	;'e'
   727  08BB  3472               	retlw	114	;'r'
   728  08BC  3469               	retlw	105	;'i'
   729  08BD  3472               	retlw	114	;'r'
   730  08BE  3420               	retlw	32	;' '
   731  08BF  3450               	retlw	80	;'P'
   732  08C0  3461               	retlw	97	;'a'
   733  08C1  3473               	retlw	115	;'s'
   734  08C2  3473               	retlw	115	;'s'
   735  08C3  3477               	retlw	119	;'w'
   736  08C4  346F               	retlw	111	;'o'
   737  08C5  3472               	retlw	114	;'r'
   738  08C6  3464               	retlw	100	;'d'
   739  08C7  3400               	retlw	0
   740  08C8                     STR_6:	
   741  08C8  3430               	retlw	48	;'0'
   742  08C9  3420               	retlw	32	;' '
   743  08CA  3431               	retlw	49	;'1'
   744  08CB  3420               	retlw	32	;' '
   745  08CC  3468               	retlw	104	;'h'
   746  08CD  3475               	retlw	117	;'u'
   747  08CE  346D               	retlw	109	;'m'
   748  08CF  3469               	retlw	105	;'i'
   749  08D0  346E               	retlw	110	;'n'
   750  08D1  3464               	retlw	100	;'d'
   751  08D2  3461               	retlw	97	;'a'
   752  08D3  3464               	retlw	100	;'d'
   753  08D4  3465               	retlw	101	;'e'
   754  08D5  3420               	retlw	32	;' '
   755  08D6  340A               	retlw	10
   756  08D7  3400               	retlw	0
   757  08D8                     STR_5:	
   758  08D8  3430               	retlw	48	;'0'
   759  08D9  3420               	retlw	32	;' '
   760  08DA  3430               	retlw	48	;'0'
   761  08DB  3420               	retlw	32	;' '
   762  08DC  3476               	retlw	118	;'v'
   763  08DD  3465               	retlw	101	;'e'
   764  08DE  346E               	retlw	110	;'n'
   765  08DF  3474               	retlw	116	;'t'
   766  08E0  346F               	retlw	111	;'o'
   767  08E1  3420               	retlw	32	;' '
   768  08E2  340A               	retlw	10
   769  08E3  3400               	retlw	0
   770  08E4                     STR_8:	
   771  08E4  3453               	retlw	83	;'S'
   772  08E5  346C               	retlw	108	;'l'
   773  08E6  3465               	retlw	101	;'e'
   774  08E7  3465               	retlw	101	;'e'
   775  08E8  3470               	retlw	112	;'p'
   776  08E9  3420               	retlw	32	;' '
   777  08EA  344D               	retlw	77	;'M'
   778  08EB  346F               	retlw	111	;'o'
   779  08EC  3464               	retlw	100	;'d'
   780  08ED  3465               	retlw	101	;'e'
   781  08EE  342E               	retlw	46	;'.'
   782  08EF  3400               	retlw	0
   783  08F0                     STR_10:	
   784  08F0  3457               	retlw	87	;'W'
   785  08F1  3461               	retlw	97	;'a'
   786  08F2  346B               	retlw	107	;'k'
   787  08F3  3469               	retlw	105	;'i'
   788  08F4  346E               	retlw	110	;'n'
   789  08F5  3467               	retlw	103	;'g'
   790  08F6  3420               	retlw	32	;' '
   791  08F7  3455               	retlw	85	;'U'
   792  08F8  3470               	retlw	112	;'p'
   793  08F9  3421               	retlw	33	;'!'
   794  08FA  3400               	retlw	0
   795  08FB                     STR_20:	
   796  08FB  3425               	retlw	37	;'%'
   797  08FC  3464               	retlw	100	;'d'
   798  08FD  3400               	retlw	0
   799  08A4                     
   800                           ; #config settings
   801  0000                     
   802                           	psect	cinit
   803  0015                     start_initialization:	
   804  0015                     __initialization:	
   805                           
   806                           ; Initialize objects allocated to BANK3
   807  0015  1783               	bsf	3,7	;select IRP bank2
   808  0016  30E3               	movlw	low (__pdataBANK3+30)
   809  0017  00FD               	movwf	btemp+-1
   810  0018  301C               	movlw	high __pidataBANK3
   811  0019  00FE               	movwf	btemp
   812  001A  3077               	movlw	low __pidataBANK3
   813  001B  00FF               	movwf	btemp+1
   814  001C  30C5               	movlw	low __pdataBANK3
   815  001D  0084               	movwf	4
   816  001E  160A  158A  2435  120A  118A  	fcall	init_ram0
   817                           
   818                           ; Initialize objects allocated to BANK0
   819  0023  1383               	bcf	3,7	;select IRP bank0
   820  0024  3055               	movlw	low (__pdataBANK0+4)
   821  0025  00FD               	movwf	btemp+-1
   822  0026  3010               	movlw	high __pidataBANK0
   823  0027  00FE               	movwf	btemp
   824  0028  3000               	movlw	low __pidataBANK0
   825  0029  00FF               	movwf	btemp+1
   826  002A  3051               	movlw	low __pdataBANK0
   827  002B  0084               	movwf	4
   828  002C  160A  158A  2435  120A  118A  	fcall	init_ram0
   829                           
   830                           ; Clear objects allocated to BANK3
   831  0031  1683               	bsf	3,5	;RP0=1, select bank3
   832  0032  1703               	bsf	3,6	;RP1=1, select bank3
   833  0033  01E3               	clrf	__pbssBANK3& (0+127)
   834  0034  01E4               	clrf	(__pbssBANK3+1)& (0+127)
   835  0035  01E5               	clrf	(__pbssBANK3+2)& (0+127)
   836  0036  01E6               	clrf	(__pbssBANK3+3)& (0+127)
   837                           
   838                           ; Clear objects allocated to BANK2
   839  0037  1783               	bsf	3,7	;select IRP bank2
   840  0038  3010               	movlw	low __pbssBANK2
   841  0039  0084               	movwf	4
   842  003A  3060               	movlw	low (__pbssBANK2+80)
   843  003B  160A  158A  23DD  120A  118A  	fcall	clear_ram0
   844                           
   845                           ; Clear objects allocated to BANK1
   846  0040  1683               	bsf	3,5	;RP0=1, select bank1
   847  0041  1303               	bcf	3,6	;RP1=0, select bank1
   848  0042  01EE               	clrf	__pbssBANK1& (0+127)
   849  0043  01EF               	clrf	(__pbssBANK1+1)& (0+127)
   850                           
   851                           ; Clear objects allocated to BANK0
   852  0044  1383               	bcf	3,7	;select IRP bank0
   853  0045  303F               	movlw	low __pbssBANK0
   854  0046  0084               	movwf	4
   855  0047  3051               	movlw	low (__pbssBANK0+18)
   856  0048  160A  158A  23DD  120A  118A  	fcall	clear_ram0
   857  004D                     end_of_initialization:	
   858                           ;End of C runtime variable initialization code
   859                           
   860  004D                     __end_of__initialization:	
   861  004D  0183               	clrf	3
   862  004E  120A  158A  2D81   	ljmp	_main	;jump to C main() function
   863                           
   864                           	psect	bssBANK0
   865  003F                     __pbssBANK0:	
   866  003F                     _Data_atual:	
   867  003F                     	ds	8
   868  0047                     _LAST_ALARM:	
   869  0047                     	ds	2
   870  0049                     _running:	
   871  0049                     	ds	2
   872  004B                     _count_minute:	
   873  004B                     	ds	2
   874  004D                     _count_timer_fan_speed:	
   875  004D                     	ds	2
   876  004F                     _fan_count:	
   877  004F                     	ds	2
   878                           
   879                           	psect	dataBANK0
   880  0051                     __pdataBANK0:	
   881  0051                     _PWM_freq:	
   882  0051                     	ds	4
   883                           
   884                           	psect	bssBANK1
   885  00EE                     __pbssBANK1:	
   886  00EE                     _fan_rpm:	
   887  00EE                     	ds	2
   888                           
   889                           	psect	bssBANK3
   890  01E3                     __pbssBANK3:	
   891  01E3                     main@F1074:	
   892  01E3                     	ds	4
   893                           
   894                           	psect	dataBANK3
   895  01C5                     __pdataBANK3:	
   896  01C5                     write_to_EPPROM@F1063:	
   897  01C5                     	ds	30
   898                           
   899                           	psect	bssBANK2
   900  0110                     __pbssBANK2:	
   901  0110                     _json:	
   902  0110                     	ds	80
   903                           
   904                           	psect	inittext
   905  1C31                     init_fetch0:	
   906                           ;	Called with low address in FSR and high address in W
   907                           
   908  1C31  087E               	movf	btemp,w
   909  1C32  008A               	movwf	10
   910  1C33  087F               	movf	btemp+1,w
   911  1C34  0082               	movwf	2
   912  1C35                     init_ram0:	
   913                           ;Called with:
   914                           ;	high address of idata address in btemp 
   915                           ;	low address of idata address in btemp+1 
   916                           ;	low address of data in FSR
   917                           ;	high address + 1 of data in btemp-1
   918                           
   919  1C35  160A  158A  2431  160A  158A  	fcall	init_fetch0
   920  1C3A  0080               	movwf	0
   921  1C3B  0A84               	incf	4,f
   922  1C3C  0804               	movf	4,w
   923  1C3D  067D               	xorwf	btemp+-1,w
   924  1C3E  1903               	btfsc	3,2
   925  1C3F  3400               	retlw	0
   926  1C40  0AFF               	incf	btemp+1,f
   927  1C41  1903               	btfsc	3,2
   928  1C42  0AFE               	incf	btemp,f
   929  1C43  2C35               	goto	init_ram0
   930                           
   931                           	psect	clrtext
   932  1BDD                     clear_ram0:	
   933                           ;	Called with FSR containing the base address, and
   934                           ;	W with the last address+1
   935                           
   936  1BDD  0064               	clrwdt	;clear the watchdog before getting into this loop
   937  1BDE                     clrloop0:	
   938  1BDE  0180               	clrf	0	;clear RAM location pointed to by FSR
   939  1BDF  0A84               	incf	4,f	;increment pointer
   940  1BE0  0604               	xorwf	4,w	;XOR with final address
   941  1BE1  1903               	btfsc	3,2	;have we reached the end yet?
   942  1BE2  3400               	retlw	0	;all done for this memory range, return
   943  1BE3  0604               	xorwf	4,w	;XOR again to restore value
   944  1BE4  2BDE               	goto	clrloop0	;do the next byte
   945                           
   946                           	psect	cstackBANK3
   947  0190                     __pcstackBANK3:	
   948  0190                     ___flmul@sign:	
   949                           
   950                           ; 1 bytes @ 0x0
   951  0190                     	ds	1
   952  0191                     ___flmul@aexp:	
   953                           
   954                           ; 1 bytes @ 0x1
   955  0191                     	ds	1
   956  0192                     ___flmul@grs:	
   957                           
   958                           ; 4 bytes @ 0x2
   959  0192                     	ds	4
   960  0196                     ___flmul@bexp:	
   961                           
   962                           ; 1 bytes @ 0x6
   963  0196                     	ds	1
   964  0197                     ___flmul@prod:	
   965                           
   966                           ; 4 bytes @ 0x7
   967  0197                     	ds	4
   968  019B                     ___flmul@temp:	
   969                           
   970                           ; 2 bytes @ 0xB
   971  019B                     	ds	2
   972  019D                     ?_PWM_Duty:	
   973  019D                     ?_get_temperatura:	
   974                           ; 1 bytes @ 0xD
   975                           
   976  019D                     PWM_Duty@duty:	
   977                           ; 2 bytes @ 0xD
   978                           
   979                           
   980                           ; 2 bytes @ 0xD
   981  019D                     	ds	2
   982  019F                     ??_PWM_Duty:	
   983  019F                     get_temperatura@a:	
   984                           ; 1 bytes @ 0xF
   985                           
   986                           
   987                           ; 2 bytes @ 0xF
   988  019F                     	ds	2
   989  01A1                     get_temperatura@b:	
   990                           
   991                           ; 2 bytes @ 0x11
   992  01A1                     	ds	2
   993  01A3                     ?_Aquisicao_Dados:	
   994  01A3                     move_the_fan@a:	
   995                           ; 8 bytes @ 0x13
   996                           
   997                           
   998                           ; 2 bytes @ 0x13
   999  01A3                     	ds	8
  1000  01AB                     ??_Aquisicao_Dados:	
  1001                           
  1002                           ; 1 bytes @ 0x1B
  1003  01AB                     	ds	4
  1004  01AF                     Aquisicao_Dados@aqui:	
  1005                           
  1006                           ; 8 bytes @ 0x1F
  1007  01AF                     	ds	8
  1008  01B7                     ??_main:	
  1009                           
  1010                           ; 1 bytes @ 0x27
  1011  01B7                     	ds	14
  1012                           
  1013                           	psect	cstackBANK2
  1014  0160                     __pcstackBANK2:	
  1015  0160                     main@password:	
  1016                           
  1017                           ; 4 bytes @ 0x0
  1018  0160                     	ds	4
  1019  0164                     main@password_int:	
  1020                           
  1021                           ; 2 bytes @ 0x4
  1022  0164                     	ds	2
  1023  0166                     main@pass_count:	
  1024                           
  1025                           ; 2 bytes @ 0x6
  1026  0166                     	ds	2
  1027  0168                     main@abc:	
  1028                           
  1029                           ; 1 bytes @ 0x8
  1030  0168                     	ds	1
  1031  0169                     main@calibracao:	
  1032                           
  1033                           ; 6 bytes @ 0x9
  1034  0169                     	ds	6
  1035                           
  1036                           	psect	cstackBANK1
  1037  00A0                     __pcstackBANK1:	
  1038  00A0                     ??_UART_Write_Text:	
  1039  00A0                     ??___lwdiv:	
  1040                           ; 1 bytes @ 0x0
  1041                           
  1042  00A0                     ?___lmul:	
  1043                           ; 1 bytes @ 0x0
  1044                           
  1045  00A0                     ?___aldiv:	
  1046                           ; 4 bytes @ 0x0
  1047                           
  1048  00A0                     teclado@tmp:	
  1049                           ; 4 bytes @ 0x0
  1050                           
  1051  00A0                     ADC_Read@channel:	
  1052                           ; 1 bytes @ 0x0
  1053                           
  1054  00A0                     strlen@s:	
  1055                           ; 1 bytes @ 0x0
  1056                           
  1057  00A0                     ___wmul@product:	
  1058                           ; 1 bytes @ 0x0
  1059                           
  1060  00A0                     __Umul8_16@product:	
  1061                           ; 2 bytes @ 0x0
  1062                           
  1063  00A0                     ___lmul@multiplier:	
  1064                           ; 2 bytes @ 0x0
  1065                           
  1066  00A0                     ___aldiv@divisor:	
  1067                           ; 4 bytes @ 0x0
  1068                           
  1069                           
  1070                           ; 4 bytes @ 0x0
  1071  00A0                     	ds	1
  1072  00A1                     ?_get_humidade:	
  1073  00A1                     ___lwdiv@counter:	
  1074                           ; 2 bytes @ 0x1
  1075                           
  1076  00A1                     strlen@cp:	
  1077                           ; 1 bytes @ 0x1
  1078                           
  1079  00A1                     teclado@to:	
  1080                           ; 1 bytes @ 0x1
  1081                           
  1082                           
  1083                           ; 2 bytes @ 0x1
  1084  00A1                     	ds	1
  1085  00A2                     ??_write_to_EPPROM:	
  1086  00A2                     UART_Read_Text@Output:	
  1087                           ; 1 bytes @ 0x2
  1088                           
  1089  00A2                     ___lwdiv@quotient:	
  1090                           ; 1 bytes @ 0x2
  1091                           
  1092  00A2                     __Umul8_16@word_mpld:	
  1093                           ; 2 bytes @ 0x2
  1094                           
  1095                           
  1096                           ; 2 bytes @ 0x2
  1097  00A2                     	ds	1
  1098  00A3                     teclado@ret:	
  1099  00A3                     get_humidade@a:	
  1100                           ; 1 bytes @ 0x3
  1101                           
  1102  00A3                     UART_Write_Text@i:	
  1103                           ; 2 bytes @ 0x3
  1104                           
  1105  00A3                     UART_Read_Text@i_462:	
  1106                           ; 2 bytes @ 0x3
  1107                           
  1108                           
  1109                           ; 2 bytes @ 0x3
  1110  00A3                     	ds	1
  1111  00A4                     ?___lwmod:	
  1112  00A4                     teclado@i:	
  1113                           ; 2 bytes @ 0x4
  1114                           
  1115  00A4                     __Umul8_16@multiplier:	
  1116                           ; 1 bytes @ 0x4
  1117                           
  1118  00A4                     ___lwmod@divisor:	
  1119                           ; 1 bytes @ 0x4
  1120                           
  1121  00A4                     ___lmul@multiplicand:	
  1122                           ; 2 bytes @ 0x4
  1123                           
  1124  00A4                     ___aldiv@dividend:	
  1125                           ; 4 bytes @ 0x4
  1126                           
  1127                           
  1128                           ; 4 bytes @ 0x4
  1129  00A4                     	ds	1
  1130  00A5                     ??_read_from_EPPROM:	
  1131                           
  1132                           ; 1 bytes @ 0x5
  1133  00A5                     	ds	1
  1134  00A6                     ___lwmod@dividend:	
  1135  00A6                     write_to_EPPROM@text1:	
  1136                           ; 2 bytes @ 0x6
  1137                           
  1138                           
  1139                           ; 30 bytes @ 0x6
  1140  00A6                     	ds	1
  1141  00A7                     read_from_EPPROM@data:	
  1142                           
  1143                           ; 10 bytes @ 0x7
  1144  00A7                     	ds	1
  1145  00A8                     ??___lwmod:	
  1146  00A8                     ___aldiv@counter:	
  1147                           ; 1 bytes @ 0x8
  1148                           
  1149  00A8                     ___lmul@product:	
  1150                           ; 1 bytes @ 0x8
  1151                           
  1152                           
  1153                           ; 4 bytes @ 0x8
  1154  00A8                     	ds	1
  1155  00A9                     ___aldiv@sign:	
  1156  00A9                     ___lwmod@counter:	
  1157                           ; 1 bytes @ 0x9
  1158                           
  1159                           
  1160                           ; 1 bytes @ 0x9
  1161  00A9                     	ds	1
  1162  00AA                     ?_sprintf:	
  1163  00AA                     sprintf@sp:	
  1164                           ; 2 bytes @ 0xA
  1165                           
  1166  00AA                     ___aldiv@quotient:	
  1167                           ; 2 bytes @ 0xA
  1168                           
  1169                           
  1170                           ; 4 bytes @ 0xA
  1171  00AA                     	ds	2
  1172  00AC                     ?___lldiv:	
  1173  00AC                     sprintf@f:	
  1174                           ; 4 bytes @ 0xC
  1175                           
  1176  00AC                     ___lldiv@divisor:	
  1177                           ; 1 bytes @ 0xC
  1178                           
  1179                           
  1180                           ; 4 bytes @ 0xC
  1181  00AC                     	ds	2
  1182  00AE                     ?_UART_Init:	
  1183  00AE                     ??_PWM_Initialize:	
  1184                           ; 1 bytes @ 0xE
  1185                           
  1186  00AE                     ?___xxtofl:	
  1187                           ; 1 bytes @ 0xE
  1188                           
  1189  00AE                     UART_Init@baudrate:	
  1190                           ; 4 bytes @ 0xE
  1191                           
  1192  00AE                     ___xxtofl@val:	
  1193                           ; 4 bytes @ 0xE
  1194                           
  1195                           
  1196                           ; 4 bytes @ 0xE
  1197  00AE                     	ds	2
  1198  00B0                     ___lldiv@dividend:	
  1199                           
  1200                           ; 4 bytes @ 0x10
  1201  00B0                     	ds	2
  1202  00B2                     ??_UART_Init:	
  1203  00B2                     ??___xxtofl:	
  1204                           ; 1 bytes @ 0x12
  1205                           
  1206                           
  1207                           ; 1 bytes @ 0x12
  1208  00B2                     	ds	2
  1209  00B4                     ___lldiv@quotient:	
  1210                           
  1211                           ; 4 bytes @ 0x14
  1212  00B4                     	ds	1
  1213  00B5                     ??_sprintf:	
  1214                           
  1215                           ; 1 bytes @ 0x15
  1216  00B5                     	ds	1
  1217  00B6                     ___xxtofl@sign:	
  1218                           
  1219                           ; 1 bytes @ 0x16
  1220  00B6                     	ds	1
  1221  00B7                     ___xxtofl@exp:	
  1222                           
  1223                           ; 1 bytes @ 0x17
  1224  00B7                     	ds	1
  1225  00B8                     sprintf@ap:	
  1226  00B8                     ___lldiv@counter:	
  1227                           ; 1 bytes @ 0x18
  1228                           
  1229  00B8                     ___xxtofl@arg:	
  1230                           ; 1 bytes @ 0x18
  1231                           
  1232                           
  1233                           ; 4 bytes @ 0x18
  1234  00B8                     	ds	1
  1235  00B9                     ?_I2C_init:	
  1236  00B9                     sprintf@flag:	
  1237                           ; 1 bytes @ 0x19
  1238                           
  1239  00B9                     I2C_init@feq_K:	
  1240                           ; 1 bytes @ 0x19
  1241                           
  1242                           
  1243                           ; 4 bytes @ 0x19
  1244  00B9                     	ds	1
  1245  00BA                     sprintf@prec:	
  1246                           
  1247                           ; 1 bytes @ 0x1A
  1248  00BA                     	ds	1
  1249  00BB                     sprintf@val:	
  1250                           
  1251                           ; 2 bytes @ 0x1B
  1252  00BB                     	ds	1
  1253  00BC                     ?___fldiv:	
  1254  00BC                     ___fldiv@a:	
  1255                           ; 4 bytes @ 0x1C
  1256                           
  1257                           
  1258                           ; 4 bytes @ 0x1C
  1259  00BC                     	ds	1
  1260  00BD                     ??_I2C_init:	
  1261  00BD                     sprintf@c:	
  1262                           ; 1 bytes @ 0x1D
  1263                           
  1264                           
  1265                           ; 1 bytes @ 0x1D
  1266  00BD                     	ds	1
  1267  00BE                     ?_UART_Write_Decimal:	
  1268  00BE                     ??_print_json:	
  1269                           ; 1 bytes @ 0x1E
  1270                           
  1271  00BE                     UART_Write_Decimal@Dec:	
  1272                           ; 1 bytes @ 0x1E
  1273                           
  1274                           
  1275                           ; 2 bytes @ 0x1E
  1276  00BE                     	ds	1
  1277  00BF                     ?_alarm_check:	
  1278  00BF                     alarm_check@calibracao:	
  1279                           ; 1 bytes @ 0x1F
  1280                           
  1281                           
  1282                           ; 6 bytes @ 0x1F
  1283  00BF                     	ds	1
  1284  00C0                     ??_UART_Write_Decimal:	
  1285  00C0                     ___fldiv@b:	
  1286                           ; 1 bytes @ 0x20
  1287                           
  1288                           
  1289                           ; 4 bytes @ 0x20
  1290  00C0                     	ds	1
  1291  00C1                     UART_Write_Decimal@string:	
  1292                           
  1293                           ; 10 bytes @ 0x21
  1294  00C1                     	ds	3
  1295  00C4                     ??___fldiv:	
  1296  00C4                     write_to_EPPROM@count_string:	
  1297                           ; 1 bytes @ 0x24
  1298                           
  1299                           
  1300                           ; 2 bytes @ 0x24
  1301  00C4                     	ds	1
  1302  00C5                     ??_alarm_check:	
  1303                           
  1304                           ; 1 bytes @ 0x25
  1305  00C5                     	ds	1
  1306  00C6                     write_to_EPPROM@epro_count:	
  1307  00C6                     alarm_check@magic:	
  1308                           ; 2 bytes @ 0x26
  1309                           
  1310                           
  1311                           ; 2 bytes @ 0x26
  1312  00C6                     	ds	3
  1313  00C9                     ___fldiv@rem:	
  1314                           
  1315                           ; 4 bytes @ 0x29
  1316  00C9                     	ds	2
  1317  00CB                     ?_read_from_MR:	
  1318  00CB                     read_from_MR@calibracao:	
  1319                           ; 6 bytes @ 0x2B
  1320                           
  1321                           
  1322                           ; 6 bytes @ 0x2B
  1323  00CB                     	ds	2
  1324  00CD                     ___fldiv@sign:	
  1325                           
  1326                           ; 1 bytes @ 0x2D
  1327  00CD                     	ds	1
  1328  00CE                     ___fldiv@new_exp:	
  1329                           
  1330                           ; 2 bytes @ 0x2E
  1331  00CE                     	ds	2
  1332  00D0                     ___fldiv@grs:	
  1333                           
  1334                           ; 4 bytes @ 0x30
  1335  00D0                     	ds	1
  1336  00D1                     ??_read_from_MR:	
  1337                           
  1338                           ; 1 bytes @ 0x31
  1339  00D1                     	ds	3
  1340  00D4                     ___fldiv@bexp:	
  1341                           
  1342                           ; 1 bytes @ 0x34
  1343  00D4                     	ds	1
  1344  00D5                     ___fldiv@aexp:	
  1345                           
  1346                           ; 1 bytes @ 0x35
  1347  00D5                     	ds	1
  1348  00D6                     ?___flmul:	
  1349  00D6                     ___flmul@b:	
  1350                           ; 4 bytes @ 0x36
  1351                           
  1352                           
  1353                           ; 4 bytes @ 0x36
  1354  00D6                     	ds	4
  1355  00DA                     ___flmul@a:	
  1356                           
  1357                           ; 4 bytes @ 0x3A
  1358  00DA                     	ds	4
  1359  00DE                     ??___flmul:	
  1360                           
  1361                           ; 1 bytes @ 0x3E
  1362  00DE                     	ds	1
  1363  00DF                     read_from_MR@output:	
  1364                           
  1365                           ; 8 bytes @ 0x3F
  1366  00DF                     	ds	4
  1367  00E3                     ?___fltol:	
  1368  00E3                     ___fltol@f1:	
  1369                           ; 4 bytes @ 0x43
  1370                           
  1371                           
  1372                           ; 4 bytes @ 0x43
  1373  00E3                     	ds	4
  1374  00E7                     ??___fltol:	
  1375  00E7                     read_from_MR@int_input:	
  1376                           ; 1 bytes @ 0x47
  1377                           
  1378                           
  1379                           ; 2 bytes @ 0x47
  1380  00E7                     	ds	5
  1381  00EC                     ___fltol@sign1:	
  1382                           
  1383                           ; 1 bytes @ 0x4C
  1384  00EC                     	ds	1
  1385  00ED                     ___fltol@exp1:	
  1386                           
  1387                           ; 1 bytes @ 0x4D
  1388  00ED                     	ds	1
  1389                           
  1390                           	psect	cstackCOMMON
  1391  0070                     __pcstackCOMMON:	
  1392  0070                     ?_I2C_Begin:	
  1393  0070                     ?_I2C_End:	
  1394                           ; 1 bytes @ 0x0
  1395                           
  1396  0070                     ?_ADC_Init:	
  1397                           ; 1 bytes @ 0x0
  1398                           
  1399  0070                     ?_UART_Write:	
  1400                           ; 1 bytes @ 0x0
  1401                           
  1402  0070                     ?_UART_Data_Ready:	
  1403                           ; 1 bytes @ 0x0
  1404                           
  1405  0070                     ?_PWM_Initialize:	
  1406                           ; 1 bytes @ 0x0
  1407                           
  1408  0070                     ?_print_json:	
  1409                           ; 1 bytes @ 0x0
  1410                           
  1411  0070                     ?_Interrupt_Time:	
  1412                           ; 1 bytes @ 0x0
  1413                           
  1414  0070                     ?_move_the_fan:	
  1415                           ; 1 bytes @ 0x0
  1416                           
  1417  0070                     ?_write_to_EPPROM:	
  1418                           ; 1 bytes @ 0x0
  1419                           
  1420  0070                     ?_read_from_EPPROM:	
  1421                           ; 1 bytes @ 0x0
  1422                           
  1423  0070                     ?_alarm:	
  1424                           ; 1 bytes @ 0x0
  1425                           
  1426  0070                     ?_UART_Read:	
  1427                           ; 1 bytes @ 0x0
  1428                           
  1429  0070                     ?_I2C_Hold:	
  1430                           ; 1 bytes @ 0x0
  1431                           
  1432  0070                     ?i1_print_json:	
  1433                           ; 1 bytes @ 0x0
  1434                           
  1435  0070                     ?i1_UART_Write:	
  1436                           ; 1 bytes @ 0x0
  1437                           
  1438  0070                     ??i1_UART_Write:	
  1439                           ; 1 bytes @ 0x0
  1440                           
  1441  0070                     ?_main:	
  1442                           ; 1 bytes @ 0x0
  1443                           
  1444  0070                     ?___awdiv:	
  1445                           ; 2 bytes @ 0x0
  1446                           
  1447  0070                     ?i1___lwdiv:	
  1448                           ; 2 bytes @ 0x0
  1449                           
  1450  0070                     i1UART_Write@data:	
  1451                           ; 2 bytes @ 0x0
  1452                           
  1453  0070                     ___awdiv@divisor:	
  1454                           ; 1 bytes @ 0x0
  1455                           
  1456  0070                     i1___lwdiv@divisor:	
  1457                           ; 2 bytes @ 0x0
  1458                           
  1459                           
  1460                           ; 2 bytes @ 0x0
  1461  0070                     	ds	1
  1462  0071                     ?i1_UART_Write_Text:	
  1463  0071                     i1UART_Write_Text@text:	
  1464                           ; 1 bytes @ 0x1
  1465                           
  1466                           
  1467                           ; 2 bytes @ 0x1
  1468  0071                     	ds	1
  1469  0072                     ___awdiv@dividend:	
  1470  0072                     i1___lwdiv@dividend:	
  1471                           ; 2 bytes @ 0x2
  1472                           
  1473                           
  1474                           ; 2 bytes @ 0x2
  1475  0072                     	ds	1
  1476  0073                     ??i1_UART_Write_Text:	
  1477                           
  1478                           ; 1 bytes @ 0x3
  1479  0073                     	ds	1
  1480  0074                     ??___awdiv:	
  1481  0074                     ??i1___lwdiv:	
  1482                           ; 1 bytes @ 0x4
  1483                           
  1484                           
  1485                           ; 1 bytes @ 0x4
  1486  0074                     	ds	1
  1487  0075                     ___awdiv@counter:	
  1488  0075                     i1___lwdiv@quotient:	
  1489                           ; 1 bytes @ 0x5
  1490                           
  1491                           
  1492                           ; 2 bytes @ 0x5
  1493  0075                     	ds	1
  1494  0076                     ___awdiv@sign:	
  1495  0076                     i1UART_Write_Text@i:	
  1496                           ; 1 bytes @ 0x6
  1497                           
  1498                           
  1499                           ; 2 bytes @ 0x6
  1500  0076                     	ds	1
  1501  0077                     i1___lwdiv@counter:	
  1502  0077                     ___awdiv@quotient:	
  1503                           ; 1 bytes @ 0x7
  1504                           
  1505                           
  1506                           ; 2 bytes @ 0x7
  1507  0077                     	ds	1
  1508  0078                     ?i1___lwmod:	
  1509  0078                     i1___lwmod@divisor:	
  1510                           ; 2 bytes @ 0x8
  1511                           
  1512                           
  1513                           ; 2 bytes @ 0x8
  1514  0078                     	ds	1
  1515  0079                     ?i1___wmul:	
  1516  0079                     i1___wmul@multiplier:	
  1517                           ; 2 bytes @ 0x9
  1518                           
  1519                           
  1520                           ; 2 bytes @ 0x9
  1521  0079                     	ds	1
  1522  007A                     i1___lwmod@dividend:	
  1523                           
  1524                           ; 2 bytes @ 0xA
  1525  007A                     	ds	1
  1526  007B                     i1___wmul@multiplicand:	
  1527                           
  1528                           ; 2 bytes @ 0xB
  1529  007B                     	ds	1
  1530  007C                     ??i1___lwmod:	
  1531                           
  1532                           ; 1 bytes @ 0xC
  1533  007C                     	ds	1
  1534  007D                     ??i1___wmul:	
  1535  007D                     i1___lwmod@counter:	
  1536                           ; 1 bytes @ 0xD
  1537                           
  1538                           
  1539                           ; 1 bytes @ 0xD
  1540  007D                     	ds	1
  1541                           
  1542                           	psect	cstackBANK0
  1543  0020                     __pcstackBANK0:	
  1544  0020                     ?i1_sprintf:	
  1545  0020                     i1sprintf@sp:	
  1546                           ; 2 bytes @ 0x0
  1547                           
  1548  0020                     i1___wmul@product:	
  1549                           ; 2 bytes @ 0x0
  1550                           
  1551                           
  1552                           ; 2 bytes @ 0x0
  1553  0020                     	ds	2
  1554  0022                     i1sprintf@f:	
  1555                           
  1556                           ; 1 bytes @ 0x2
  1557  0022                     	ds	9
  1558  002B                     ??i1_sprintf:	
  1559                           
  1560                           ; 1 bytes @ 0xB
  1561  002B                     	ds	3
  1562  002E                     i1sprintf@ap:	
  1563                           
  1564                           ; 1 bytes @ 0xE
  1565  002E                     	ds	1
  1566  002F                     i1sprintf@flag:	
  1567                           
  1568                           ; 1 bytes @ 0xF
  1569  002F                     	ds	1
  1570  0030                     i1sprintf@prec:	
  1571                           
  1572                           ; 1 bytes @ 0x10
  1573  0030                     	ds	1
  1574  0031                     i1sprintf@val:	
  1575                           
  1576                           ; 2 bytes @ 0x11
  1577  0031                     	ds	2
  1578  0033                     i1sprintf@c:	
  1579                           
  1580                           ; 1 bytes @ 0x13
  1581  0033                     	ds	1
  1582  0034                     ??i1_print_json:	
  1583                           
  1584                           ; 1 bytes @ 0x14
  1585  0034                     	ds	1
  1586  0035                     ??_Interrupt_Time:	
  1587                           
  1588                           ; 1 bytes @ 0x15
  1589  0035                     	ds	6
  1590  003B                     ?_UART_Read_Text:	
  1591  003B                     ??_I2C_Begin:	
  1592                           ; 1 bytes @ 0x1B
  1593                           
  1594  003B                     ?_I2C_Write:	
  1595                           ; 1 bytes @ 0x1B
  1596                           
  1597  003B                     ??_I2C_End:	
  1598                           ; 1 bytes @ 0x1B
  1599                           
  1600  003B                     ??_ADC_Init:	
  1601                           ; 1 bytes @ 0x1B
  1602                           
  1603  003B                     ??_UART_Write:	
  1604                           ; 1 bytes @ 0x1B
  1605                           
  1606  003B                     ??_UART_Data_Ready:	
  1607                           ; 1 bytes @ 0x1B
  1608                           
  1609  003B                     ?_teclado:	
  1610                           ; 1 bytes @ 0x1B
  1611                           
  1612  003B                     ??_UART_Read:	
  1613                           ; 1 bytes @ 0x1B
  1614                           
  1615  003B                     ??_I2C_Hold:	
  1616                           ; 1 bytes @ 0x1B
  1617                           
  1618  003B                     ??___lmul:	
  1619                           ; 1 bytes @ 0x1B
  1620                           
  1621  003B                     ??___aldiv:	
  1622                           ; 1 bytes @ 0x1B
  1623                           
  1624  003B                     ?_ADC_Read:	
  1625                           ; 1 bytes @ 0x1B
  1626                           
  1627  003B                     ?_strlen:	
  1628                           ; 2 bytes @ 0x1B
  1629                           
  1630  003B                     ?_I2C_Read:	
  1631                           ; 2 bytes @ 0x1B
  1632                           
  1633  003B                     ?__Umul8_16:	
  1634                           ; 2 bytes @ 0x1B
  1635                           
  1636  003B                     ?___wmul:	
  1637                           ; 2 bytes @ 0x1B
  1638                           
  1639  003B                     ?___lwdiv:	
  1640                           ; 2 bytes @ 0x1B
  1641                           
  1642  003B                     UART_Write@data:	
  1643                           ; 2 bytes @ 0x1B
  1644                           
  1645  003B                     __Umul8_16@multiplicand:	
  1646                           ; 1 bytes @ 0x1B
  1647                           
  1648  003B                     teclado@timeout:	
  1649                           ; 1 bytes @ 0x1B
  1650                           
  1651  003B                     UART_Read_Text@length:	
  1652                           ; 2 bytes @ 0x1B
  1653                           
  1654  003B                     I2C_Write@data:	
  1655                           ; 2 bytes @ 0x1B
  1656                           
  1657  003B                     I2C_Read@ack:	
  1658                           ; 2 bytes @ 0x1B
  1659                           
  1660  003B                     ___wmul@multiplier:	
  1661                           ; 2 bytes @ 0x1B
  1662                           
  1663  003B                     ___lwdiv@divisor:	
  1664                           ; 2 bytes @ 0x1B
  1665                           
  1666                           
  1667                           ; 2 bytes @ 0x1B
  1668  003B                     	ds	1
  1669  003C                     ?_UART_Write_Text:	
  1670  003C                     ??___lldiv:	
  1671                           ; 1 bytes @ 0x1C
  1672                           
  1673  003C                     UART_Init@x:	
  1674                           ; 1 bytes @ 0x1C
  1675                           
  1676  003C                     UART_Write_Text@text:	
  1677                           ; 2 bytes @ 0x1C
  1678                           
  1679                           
  1680                           ; 2 bytes @ 0x1C
  1681  003C                     	ds	1
  1682  003D                     ??_ADC_Read:	
  1683  003D                     ??_UART_Read_Text:	
  1684                           ; 1 bytes @ 0x1D
  1685                           
  1686  003D                     ??_strlen:	
  1687                           ; 1 bytes @ 0x1D
  1688                           
  1689  003D                     ??_I2C_Write:	
  1690                           ; 1 bytes @ 0x1D
  1691                           
  1692  003D                     ??_I2C_Read:	
  1693                           ; 1 bytes @ 0x1D
  1694                           
  1695  003D                     ??__Umul8_16:	
  1696                           ; 1 bytes @ 0x1D
  1697                           
  1698  003D                     ??_teclado:	
  1699                           ; 1 bytes @ 0x1D
  1700                           
  1701  003D                     ___wmul@multiplicand:	
  1702                           ; 1 bytes @ 0x1D
  1703                           
  1704  003D                     ___lwdiv@dividend:	
  1705                           ; 2 bytes @ 0x1D
  1706                           
  1707                           
  1708                           ; 2 bytes @ 0x1D
  1709  003D                     	ds	2
  1710  003F                     ??_get_temperatura:	
  1711  003F                     ??_get_humidade:	
  1712                           ; 1 bytes @ 0x1F
  1713                           
  1714  003F                     ??_move_the_fan:	
  1715                           ; 1 bytes @ 0x1F
  1716                           
  1717  003F                     ??_alarm:	
  1718                           ; 1 bytes @ 0x1F
  1719                           
  1720  003F                     ??___wmul:	
  1721                           ; 1 bytes @ 0x1F
  1722                           
  1723                           
  1724                           	psect	maintext
  1725  0D81                     __pmaintext:	
  1726                           ; 1 bytes @ 0x1F
  1727 ;;
  1728 ;;Main: autosize = 0, tempsize = 14, incstack = 0, save=0
  1729 ;;
  1730 ;; *************** function _main *****************
  1731 ;; Defined at:
  1732 ;;		line 335 in file "main.c"
  1733 ;; Parameters:    Size  Location     Type
  1734 ;;		None
  1735 ;; Auto vars:     Size  Location     Type
  1736 ;;  abc             1    8[BANK2 ] unsigned char 
  1737 ;;  calibracao      6    9[BANK2 ] struct .
  1738 ;;  password        4    0[BANK2 ] unsigned char [4]
  1739 ;;  pass_count      2    6[BANK2 ] int 
  1740 ;;  password_int    2    4[BANK2 ] int 
  1741 ;; Return value:  Size  Location     Type
  1742 ;;                  2  233[None  ] int 
  1743 ;; Registers used:
  1744 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1745 ;; Tracked objects:
  1746 ;;		On entry : B00/0
  1747 ;;		On exit  : 0/0
  1748 ;;		Unchanged: 0/0
  1749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1750 ;;      Params:         0       0       0       0       0
  1751 ;;      Locals:         0       0       0       0      15
  1752 ;;      Temps:          0       0       0      14       0
  1753 ;;      Totals:         0       0       0      14      15
  1754 ;;Total ram usage:       29 bytes
  1755 ;; Hardware stack levels required when called:    9
  1756 ;; This function calls:
  1757 ;;		_ADC_Init
  1758 ;;		_Aquisicao_Dados
  1759 ;;		_I2C_init
  1760 ;;		_PWM_Initialize
  1761 ;;		_UART_Data_Ready
  1762 ;;		_UART_Init
  1763 ;;		_UART_Write
  1764 ;;		_UART_Write_Text
  1765 ;;		___wmul
  1766 ;;		_alarm_check
  1767 ;;		_move_the_fan
  1768 ;;		_read_from_EPPROM
  1769 ;;		_read_from_MR
  1770 ;;		_teclado
  1771 ;;		_write_to_EPPROM
  1772 ;; This function is called by:
  1773 ;;		Startup code after reset
  1774 ;; This function uses a non-reentrant model
  1775 ;;
  1776                           
  1777                           
  1778                           ;psect for function _main
  1779  0D81                     _main:	
  1780  0D81                     l4726:	
  1781                           ;incstack = 0
  1782 ;; hardware stack exceeded
  1783                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1784                           
  1785                           
  1786                           ;main.c: 337:   int password_int = 0;
  1787  0D81  3000               	movlw	0
  1788  0D82  1683               	bsf	3,5	;RP0=1, select bank1
  1789  0D83  1303               	bcf	3,6	;RP1=0, select bank1
  1790  0D84  00B1               	movwf	(UART_Init@baudrate+3)^(0+128)
  1791  0D85  3000               	movlw	0
  1792  0D86  00B0               	movwf	(UART_Init@baudrate+2)^(0+128)
  1793  0D87  3025               	movlw	37
  1794  0D88  00AF               	movwf	(UART_Init@baudrate+1)^(0+128)
  1795  0D89  3080               	movlw	128
  1796  0D8A  00AE               	movwf	UART_Init@baudrate^(0+128)
  1797  0D8B  160A  118A  2715  120A  158A  	fcall	_UART_Init
  1798                           
  1799                           ;main.c: 338:   int pass_count = 0;
  1800  0D90  3000               	movlw	0
  1801  0D91  1683               	bsf	3,5	;RP0=1, select bank1
  1802  0D92  1303               	bcf	3,6	;RP1=0, select bank1
  1803  0D93  00BC               	movwf	(I2C_init@feq_K+3)^(0+128)
  1804  0D94  3000               	movlw	0
  1805  0D95  00BB               	movwf	(I2C_init@feq_K+2)^(0+128)
  1806  0D96  3000               	movlw	0
  1807  0D97  00BA               	movwf	(I2C_init@feq_K+1)^(0+128)
  1808  0D98  30FA               	movlw	250
  1809  0D99  00B9               	movwf	I2C_init@feq_K^(0+128)
  1810  0D9A  160A  158A  2761  120A  158A  	fcall	_I2C_init
  1811                           
  1812                           ;main.c: 339: 
  1813  0D9F  160A  158A  23E5  120A  158A  	fcall	_ADC_Init
  1814                           
  1815                           ;main.c: 340:   Data_atual.alarm=0;
  1816  0DA4  120A  118A  27B1  120A  158A  	fcall	_PWM_Initialize
  1817  0DA9                     l4728:	
  1818                           
  1819                           ;main.c: 343:   calibracao.rajada_vento = 2400;
  1820  0DA9  178B               	bsf	11,7	;volatile
  1821  0DAA                     l4730:	
  1822                           
  1823                           ;main.c: 344:   calibracao.humidade_incendio = 500;
  1824  0DAA  170B               	bsf	11,6	;volatile
  1825  0DAB                     l4732:	
  1826                           
  1827                           ;main.c: 345:   calibracao.temperatuta_incendio = 40;
  1828  0DAB  160B               	bsf	11,4	;volatile
  1829  0DAC                     l4734:	
  1830                           
  1831                           ;main.c: 348:   UART_Write_Text("Inserir Password");
  1832  0DAC  300F               	movlw	15
  1833  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  1834  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  1835  0DAF  0097               	movwf	23	;volatile
  1836  0DB0                     l4736:	
  1837                           
  1838                           ;main.c: 349:   UART_Write_Text("\n");
  1839  0DB0  3021               	movlw	33
  1840  0DB1  1683               	bsf	3,5	;RP0=1, select bank1
  1841  0DB2  1303               	bcf	3,6	;RP1=0, select bank1
  1842  0DB3  0092               	movwf	18	;volatile
  1843  0DB4                     l4738:	
  1844                           
  1845                           ;main.c: 350: 
  1846  0DB4  3032               	movlw	50
  1847  0DB5  1283               	bcf	3,5	;RP0=0, select bank0
  1848  0DB6  1303               	bcf	3,6	;RP1=0, select bank0
  1849  0DB7  0095               	movwf	21	;volatile
  1850  0DB8                     l4740:	
  1851                           
  1852                           ;main.c: 351:   while(password_int!=1234)
  1853  0DB8  1512               	bsf	18,2	;volatile
  1854  0DB9                     l4742:	
  1855                           
  1856                           ;main.c: 355:     {
  1857  0DB9  0190               	clrf	16	;volatile
  1858  0DBA                     l4744:	
  1859                           
  1860                           ;main.c: 356:       TRISBbits.TRISB0 = 0;
  1861  0DBA  1490               	bsf	16,1	;volatile
  1862  0DBB                     l4746:	
  1863                           
  1864                           ;main.c: 357:       TRISD=0x0F;
  1865  0DBB  1110               	bcf	16,2	;volatile
  1866  0DBC                     l4748:	
  1867                           
  1868                           ;main.c: 358:       unsigned char abc = teclado(1500)+0x30;
  1869  0DBC  1590               	bsf	16,3	;volatile
  1870  0DBD                     l4750:	
  1871                           
  1872                           ;main.c: 359:       TRISD=0x00;
  1873  0DBD  1410               	bsf	16,0	;volatile
  1874  0DBE                     l4752:	
  1875                           
  1876                           ;main.c: 363:         UART_Write(abc);
  1877  0DBE  3007               	movlw	7
  1878  0DBF  1683               	bsf	3,5	;RP0=1, select bank1
  1879  0DC0  1303               	bcf	3,6	;RP1=0, select bank1
  1880  0DC1  0081               	movwf	1	;volatile
  1881  0DC2                     l4754:	
  1882                           
  1883                           ;main.c: 364:         password[pass_count]=abc;
  1884  0DC2  168B               	bsf	11,5	;volatile
  1885  0DC3                     l4756:	
  1886                           
  1887                           ;main.c: 365:         pass_count++;
  1888  0DC3  30D9               	movlw	217
  1889  0DC4  1283               	bcf	3,5	;RP0=0, select bank0
  1890  0DC5  1303               	bcf	3,6	;RP1=0, select bank0
  1891  0DC6  0081               	movwf	1	;volatile
  1892  0DC7                     l4758:	
  1893                           
  1894                           ;main.c: 366:       }
  1895  0DC7  168B               	bsf	11,5	;volatile
  1896  0DC8                     l4760:	
  1897                           
  1898                           ;main.c: 369: 
  1899  0DC8  30FF               	movlw	255
  1900  0DC9  0086               	movwf	6	;volatile
  1901  0DCA                     l4762:	
  1902                           
  1903                           ;main.c: 370:     if(password_int==1234)
  1904  0DCA  1683               	bsf	3,5	;RP0=1, select bank1
  1905  0DCB  1303               	bcf	3,6	;RP1=0, select bank1
  1906  0DCC  0186               	clrf	6	;volatile
  1907  0DCD                     l4764:	
  1908                           
  1909                           ;main.c: 371:     {
  1910  0DCD  30FF               	movlw	255
  1911  0DCE  0088               	movwf	8	;volatile
  1912  0DCF                     l4766:	
  1913                           
  1914                           ;main.c: 372:       UART_Write_Text("\n");
  1915  0DCF  30FF               	movlw	255
  1916  0DD0  1283               	bcf	3,5	;RP0=0, select bank0
  1917  0DD1  1303               	bcf	3,6	;RP1=0, select bank0
  1918  0DD2  0088               	movwf	8	;volatile
  1919  0DD3                     l4768:	
  1920                           
  1921                           ;main.c: 373:       UART_Write_Text("Password Correta");
  1922  0DD3  30FF               	movlw	255
  1923  0DD4  1683               	bsf	3,5	;RP0=1, select bank1
  1924  0DD5  1303               	bcf	3,6	;RP1=0, select bank1
  1925  0DD6  0088               	movwf	8	;volatile
  1926  0DD7                     l4770:	
  1927                           
  1928                           ;main.c: 375:     }else{
  1929  0DD7  30FF               	movlw	255
  1930  0DD8  0085               	movwf	5	;volatile
  1931  0DD9                     l4772:	
  1932                           
  1933                           ;main.c: 377:       UART_Write_Text("Password Incorreta");
  1934  0DD9  1407               	bsf	7,0	;volatile
  1935  0DDA                     l4774:	
  1936                           
  1937                           ;main.c: 378:       UART_Write_Text("\n");
  1938  0DDA  1087               	bcf	7,1	;volatile
  1939  0DDB                     l4776:	
  1940                           
  1941                           ;main.c: 379:     }
  1942  0DDB  1107               	bcf	7,2	;volatile
  1943  0DDC                     l4778:	
  1944                           
  1945                           ;main.c: 380:   }
  1946  0DDC  1287               	bcf	7,5	;volatile
  1947  0DDD                     l4780:	
  1948                           
  1949                           ;main.c: 382:   write_to_EPPROM();
  1950  0DDD  1406               	bsf	6,0	;volatile
  1951  0DDE                     l4782:	
  1952                           
  1953                           ;main.c: 383:   read_from_EPPROM();
  1954  0DDE  1386               	bcf	6,7	;volatile
  1955  0DDF                     l4784:	
  1956                           
  1957                           ;main.c: 385:   running=1;
  1958  0DDF  3000               	movlw	0
  1959  0DE0  1283               	bcf	3,5	;RP0=0, select bank2
  1960  0DE1  1703               	bsf	3,6	;RP1=1, select bank2
  1961  0DE2  00E3               	movwf	(main@password+3)^(0+256)
  1962  0DE3  3000               	movlw	0
  1963  0DE4  00E2               	movwf	(main@password+2)^(0+256)
  1964  0DE5  3000               	movlw	0
  1965  0DE6  00E1               	movwf	(main@password+1)^(0+256)
  1966  0DE7  3000               	movlw	0
  1967  0DE8  00E0               	movwf	main@password^(0+256)
  1968  0DE9                     l4786:	
  1969                           
  1970                           ;main.c: 386: 
  1971  0DE9  01E4               	clrf	main@password_int^(0+256)
  1972  0DEA  01E5               	clrf	(main@password_int+1)^(0+256)
  1973  0DEB                     l4788:	
  1974  0DEB                     l4790:	
  1975                           
  1976                           ;main.c: 389:   PORTDbits.RD0 = 0;
  1977  0DEB  1283               	bcf	3,5	;RP0=0, select bank0
  1978  0DEC  1303               	bcf	3,6	;RP1=0, select bank0
  1979  0DED  01C5               	clrf	_Data_atual+6
  1980  0DEE  01C6               	clrf	_Data_atual+7
  1981  0DEF                     l4792:	
  1982                           
  1983                           ;main.c: 391:   while(1);main.c: 392:   {
  1984  0DEF  3060               	movlw	96
  1985  0DF0  1283               	bcf	3,5	;RP0=0, select bank2
  1986  0DF1  1703               	bsf	3,6	;RP1=1, select bank2
  1987  0DF2  00E9               	movwf	main@calibracao^(0+256)
  1988  0DF3  3009               	movlw	9
  1989  0DF4  00EA               	movwf	(main@calibracao^(0+256)+1)
  1990  0DF5                     l4794:	
  1991                           
  1992                           ;main.c: 393:     while (running==1)
  1993  0DF5  30F4               	movlw	244
  1994  0DF6  00EB               	movwf	(main@calibracao^(0+256)+2)
  1995  0DF7  3001               	movlw	1
  1996  0DF8  00EC               	movwf	(main@calibracao^(0+256)+3)
  1997  0DF9                     l4796:	
  1998                           
  1999                           ;main.c: 394:     {
  2000  0DF9  3028               	movlw	40
  2001  0DFA  00ED               	movwf	(main@calibracao^(0+256)+4)
  2002  0DFB  3000               	movlw	0
  2003  0DFC  00EE               	movwf	(main@calibracao^(0+256)+5)
  2004  0DFD                     l4798:	
  2005                           
  2006                           ;main.c: 397: 
  2007  0DFD  30A8               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  2008  0DFE  1283               	bcf	3,5	;RP0=0, select bank0
  2009  0DFF  1303               	bcf	3,6	;RP1=0, select bank0
  2010  0E00  00BC               	movwf	UART_Write_Text@text
  2011  0E01  3080               	movlw	128
  2012  0E02  00BD               	movwf	UART_Write_Text@text+1
  2013  0E03  160A  118A  20FD  120A  158A  	fcall	_UART_Write_Text
  2014  0E08                     l4800:	
  2015                           
  2016                           ;main.c: 398:       if(UART_Data_Ready())
  2017  0E08  3095               	movlw	(low (((STR_7+16)-__stringbase)| (0+32768)))& (0+255)
  2018  0E09  1283               	bcf	3,5	;RP0=0, select bank0
  2019  0E0A  1303               	bcf	3,6	;RP1=0, select bank0
  2020  0E0B  00BC               	movwf	UART_Write_Text@text
  2021  0E0C  3080               	movlw	128
  2022  0E0D  00BD               	movwf	UART_Write_Text@text+1
  2023  0E0E  160A  118A  20FD  120A  158A  	fcall	_UART_Write_Text
  2024                           
  2025                           ;main.c: 400: 
  2026  0E13  2F46               	goto	l4830
  2027  0E14                     l4802:	
  2028                           
  2029                           ;main.c: 401:       alarm_check(calibracao);;main.c: 402: 
  2030  0E14  01E6               	clrf	main@pass_count^(0+256)
  2031  0E15  01E7               	clrf	(main@pass_count+1)^(0+256)
  2032                           
  2033                           ;main.c: 403:       if (!PORTBbits.RB3)
  2034  0E16  2E59               	goto	l4820
  2035  0E17                     l239:	
  2036                           
  2037                           ;main.c: 404:       {;main.c: 405:         PORTCbits.RC5=1;
  2038  0E17  1683               	bsf	3,5	;RP0=1, select bank1
  2039  0E18  1303               	bcf	3,6	;RP1=0, select bank1
  2040  0E19  1006               	bcf	6,0	;volatile
  2041  0E1A                     l4804:	
  2042                           
  2043                           ;main.c: 406:       }else{
  2044  0E1A  300F               	movlw	15
  2045  0E1B  0088               	movwf	8	;volatile
  2046  0E1C                     l4806:	
  2047                           
  2048                           ;main.c: 407:         PORTCbits.RC5=0;
  2049  0E1C  30DC               	movlw	220
  2050  0E1D  1283               	bcf	3,5	;RP0=0, select bank0
  2051  0E1E  1303               	bcf	3,6	;RP1=0, select bank0
  2052  0E1F  00BB               	movwf	teclado@timeout
  2053  0E20  3005               	movlw	5
  2054  0E21  00BC               	movwf	teclado@timeout+1
  2055  0E22  120A  158A  2463  120A  158A  	fcall	_teclado
  2056  0E27  3E30               	addlw	48
  2057  0E28  1683               	bsf	3,5	;RP0=1, select bank3
  2058  0E29  1703               	bsf	3,6	;RP1=1, select bank3
  2059  0E2A  00B7               	movwf	??_main^(0+384)
  2060  0E2B  0837               	movf	??_main^(0+384),w
  2061  0E2C  1283               	bcf	3,5	;RP0=0, select bank2
  2062  0E2D  1703               	bsf	3,6	;RP1=1, select bank2
  2063  0E2E  00E8               	movwf	main@abc^(0+256)
  2064  0E2F                     l4808:	
  2065                           
  2066                           ;main.c: 408:       }
  2067  0E2F  1683               	bsf	3,5	;RP0=1, select bank1
  2068  0E30  1303               	bcf	3,6	;RP1=0, select bank1
  2069  0E31  0188               	clrf	8	;volatile
  2070  0E32                     l4810:	
  2071                           
  2072                           ;main.c: 409: 
  2073  0E32  1406               	bsf	6,0	;volatile
  2074  0E33                     l4812:	
  2075                           
  2076                           ;main.c: 410:     _delay((unsigned long)((100)*(4000000/4000.0)));
  2077  0E33  302F               	movlw	47
  2078  0E34  1283               	bcf	3,5	;RP0=0, select bank2
  2079  0E35  1703               	bsf	3,6	;RP1=1, select bank2
  2080  0E36  0668               	xorwf	main@abc^(0+256),w
  2081  0E37  1903               	btfsc	3,2
  2082  0E38  2E3A               	goto	u7091
  2083  0E39  2E3B               	goto	u7090
  2084  0E3A                     u7091:	
  2085  0E3A  2E59               	goto	l4820
  2086  0E3B                     u7090:	
  2087  0E3B                     l4814:	
  2088                           
  2089                           ;main.c: 411:     };main.c: 412:   }
  2090  0E3B  0868               	movf	main@abc^(0+256),w
  2091  0E3C  160A  158A  2423  120A  158A  	fcall	_UART_Write
  2092  0E41                     l4816:	
  2093                           
  2094                           ;main.c: 413: }
  2095  0E41  1283               	bcf	3,5	;RP0=0, select bank2
  2096  0E42  1703               	bsf	3,6	;RP1=1, select bank2
  2097  0E43  0868               	movf	main@abc^(0+256),w
  2098  0E44  1683               	bsf	3,5	;RP0=1, select bank3
  2099  0E45  1703               	bsf	3,6	;RP1=1, select bank3
  2100  0E46  00B7               	movwf	??_main^(0+384)
  2101  0E47  1283               	bcf	3,5	;RP0=0, select bank2
  2102  0E48  1703               	bsf	3,6	;RP1=1, select bank2
  2103  0E49  0866               	movf	main@pass_count^(0+256),w
  2104  0E4A  3E60               	addlw	(low (main@password| (0+256)))& (0+255)
  2105  0E4B  0084               	movwf	4
  2106  0E4C  1683               	bsf	3,5	;RP0=1, select bank3
  2107  0E4D  1703               	bsf	3,6	;RP1=1, select bank3
  2108  0E4E  0837               	movf	??_main^(0+384),w
  2109  0E4F  1783               	bsf	3,7	;select IRP bank2
  2110  0E50  0080               	movwf	0
  2111  0E51                     l4818:	
  2112  0E51  3001               	movlw	1
  2113  0E52  1283               	bcf	3,5	;RP0=0, select bank2
  2114  0E53  1703               	bsf	3,6	;RP1=1, select bank2
  2115  0E54  07E6               	addwf	main@pass_count^(0+256),f
  2116  0E55  1803               	skipnc
  2117  0E56  0AE7               	incf	(main@pass_count+1)^(0+256),f
  2118  0E57  3000               	movlw	0
  2119  0E58  07E7               	addwf	(main@pass_count+1)^(0+256),f
  2120  0E59                     l4820:	
  2121                           
  2122                           ;main.c: 403:       if (!PORTBbits.RB3)
  2123  0E59  0867               	movf	(main@pass_count+1)^(0+256),w
  2124  0E5A  3A80               	xorlw	128
  2125  0E5B  00FF               	movwf	btemp+1
  2126  0E5C  3080               	movlw	128
  2127  0E5D  027F               	subwf	btemp+1,w
  2128  0E5E  1D03               	skipz
  2129  0E5F  2E62               	goto	u7105
  2130  0E60  3004               	movlw	4
  2131  0E61  0266               	subwf	main@pass_count^(0+256),w
  2132  0E62                     u7105:	
  2133  0E62  1C03               	skipc
  2134  0E63  2E65               	goto	u7101
  2135  0E64  2E66               	goto	u7100
  2136  0E65                     u7101:	
  2137  0E65  2E17               	goto	l239
  2138  0E66                     u7100:	
  2139  0E66                     l4822:	
  2140  0E66  1283               	bcf	3,5	;RP0=0, select bank2
  2141  0E67  1703               	bsf	3,6	;RP1=1, select bank2
  2142  0E68  0860               	movf	main@password^(0+256),w
  2143  0E69  1683               	bsf	3,5	;RP0=1, select bank3
  2144  0E6A  1703               	bsf	3,6	;RP1=1, select bank3
  2145  0E6B  00B7               	movwf	??_main^(0+384)
  2146  0E6C  01B8               	clrf	(??_main^(0+384)+1)
  2147  0E6D  0837               	movf	??_main^(0+384),w
  2148  0E6E  1283               	bcf	3,5	;RP0=0, select bank0
  2149  0E6F  1303               	bcf	3,6	;RP1=0, select bank0
  2150  0E70  00BB               	movwf	___wmul@multiplier
  2151  0E71  1683               	bsf	3,5	;RP0=1, select bank3
  2152  0E72  1703               	bsf	3,6	;RP1=1, select bank3
  2153  0E73  0838               	movf	(??_main+1)^(0+384),w
  2154  0E74  1283               	bcf	3,5	;RP0=0, select bank0
  2155  0E75  1303               	bcf	3,6	;RP1=0, select bank0
  2156  0E76  00BC               	movwf	___wmul@multiplier+1
  2157  0E77  30E8               	movlw	232
  2158  0E78  00BD               	movwf	___wmul@multiplicand
  2159  0E79  3003               	movlw	3
  2160  0E7A  00BE               	movwf	___wmul@multiplicand+1
  2161  0E7B  160A  158A  25FB  120A  158A  	fcall	___wmul
  2162  0E80  1283               	bcf	3,5	;RP0=0, select bank0
  2163  0E81  1303               	bcf	3,6	;RP1=0, select bank0
  2164  0E82  083B               	movf	?___wmul,w
  2165  0E83  1683               	bsf	3,5	;RP0=1, select bank3
  2166  0E84  1703               	bsf	3,6	;RP1=1, select bank3
  2167  0E85  00B9               	movwf	(??_main+2)^(0+384)
  2168  0E86  1283               	bcf	3,5	;RP0=0, select bank0
  2169  0E87  1303               	bcf	3,6	;RP1=0, select bank0
  2170  0E88  083C               	movf	?___wmul+1,w
  2171  0E89  1683               	bsf	3,5	;RP0=1, select bank3
  2172  0E8A  1703               	bsf	3,6	;RP1=1, select bank3
  2173  0E8B  00BA               	movwf	((??_main+2)^(0+384)+1)
  2174  0E8C  1283               	bcf	3,5	;RP0=0, select bank2
  2175  0E8D  1703               	bsf	3,6	;RP1=1, select bank2
  2176  0E8E  0861               	movf	(main@password^(0+256)+1),w
  2177  0E8F  1683               	bsf	3,5	;RP0=1, select bank3
  2178  0E90  1703               	bsf	3,6	;RP1=1, select bank3
  2179  0E91  00BB               	movwf	(??_main+4)^(0+384)
  2180  0E92  01BC               	clrf	((??_main+4)^(0+384)+1)
  2181  0E93  083B               	movf	(??_main+4)^(0+384),w
  2182  0E94  1283               	bcf	3,5	;RP0=0, select bank0
  2183  0E95  1303               	bcf	3,6	;RP1=0, select bank0
  2184  0E96  00BB               	movwf	___wmul@multiplier
  2185  0E97  1683               	bsf	3,5	;RP0=1, select bank3
  2186  0E98  1703               	bsf	3,6	;RP1=1, select bank3
  2187  0E99  083C               	movf	(??_main+5)^(0+384),w
  2188  0E9A  1283               	bcf	3,5	;RP0=0, select bank0
  2189  0E9B  1303               	bcf	3,6	;RP1=0, select bank0
  2190  0E9C  00BC               	movwf	___wmul@multiplier+1
  2191  0E9D  3064               	movlw	100
  2192  0E9E  00BD               	movwf	___wmul@multiplicand
  2193  0E9F  3000               	movlw	0
  2194  0EA0  00BE               	movwf	___wmul@multiplicand+1
  2195  0EA1  160A  158A  25FB  120A  158A  	fcall	___wmul
  2196  0EA6  1283               	bcf	3,5	;RP0=0, select bank0
  2197  0EA7  1303               	bcf	3,6	;RP1=0, select bank0
  2198  0EA8  083B               	movf	?___wmul,w
  2199  0EA9  1683               	bsf	3,5	;RP0=1, select bank3
  2200  0EAA  1703               	bsf	3,6	;RP1=1, select bank3
  2201  0EAB  0739               	addwf	(??_main+2)^(0+384),w
  2202  0EAC  00BD               	movwf	(??_main+6)^(0+384)
  2203  0EAD  1283               	bcf	3,5	;RP0=0, select bank0
  2204  0EAE  1303               	bcf	3,6	;RP1=0, select bank0
  2205  0EAF  083C               	movf	?___wmul+1,w
  2206  0EB0  1803               	skipnc
  2207  0EB1  0A3C               	incf	?___wmul+1,w
  2208  0EB2  1683               	bsf	3,5	;RP0=1, select bank3
  2209  0EB3  1703               	bsf	3,6	;RP1=1, select bank3
  2210  0EB4  073A               	addwf	(??_main+3)^(0+384),w
  2211  0EB5  00BE               	movwf	(??_main+7)^(0+384)
  2212  0EB6  1283               	bcf	3,5	;RP0=0, select bank2
  2213  0EB7  1703               	bsf	3,6	;RP1=1, select bank2
  2214  0EB8  0862               	movf	(main@password^(0+256)+2),w
  2215  0EB9  1683               	bsf	3,5	;RP0=1, select bank3
  2216  0EBA  1703               	bsf	3,6	;RP1=1, select bank3
  2217  0EBB  00BF               	movwf	(??_main+8)^(0+384)
  2218  0EBC  01C0               	clrf	((??_main+8)^(0+384)+1)
  2219  0EBD  083F               	movf	(??_main+8)^(0+384),w
  2220  0EBE  1283               	bcf	3,5	;RP0=0, select bank0
  2221  0EBF  1303               	bcf	3,6	;RP1=0, select bank0
  2222  0EC0  00BB               	movwf	___wmul@multiplier
  2223  0EC1  1683               	bsf	3,5	;RP0=1, select bank3
  2224  0EC2  1703               	bsf	3,6	;RP1=1, select bank3
  2225  0EC3  0840               	movf	(??_main+9)^(0+384),w
  2226  0EC4  1283               	bcf	3,5	;RP0=0, select bank0
  2227  0EC5  1303               	bcf	3,6	;RP1=0, select bank0
  2228  0EC6  00BC               	movwf	___wmul@multiplier+1
  2229  0EC7  300A               	movlw	10
  2230  0EC8  00BD               	movwf	___wmul@multiplicand
  2231  0EC9  3000               	movlw	0
  2232  0ECA  00BE               	movwf	___wmul@multiplicand+1
  2233  0ECB  160A  158A  25FB  120A  158A  	fcall	___wmul
  2234  0ED0  1283               	bcf	3,5	;RP0=0, select bank0
  2235  0ED1  1303               	bcf	3,6	;RP1=0, select bank0
  2236  0ED2  083B               	movf	?___wmul,w
  2237  0ED3  1683               	bsf	3,5	;RP0=1, select bank3
  2238  0ED4  1703               	bsf	3,6	;RP1=1, select bank3
  2239  0ED5  073D               	addwf	(??_main+6)^(0+384),w
  2240  0ED6  00C1               	movwf	(??_main+10)^(0+384)
  2241  0ED7  1283               	bcf	3,5	;RP0=0, select bank0
  2242  0ED8  1303               	bcf	3,6	;RP1=0, select bank0
  2243  0ED9  083C               	movf	?___wmul+1,w
  2244  0EDA  1803               	skipnc
  2245  0EDB  0A3C               	incf	?___wmul+1,w
  2246  0EDC  1683               	bsf	3,5	;RP0=1, select bank3
  2247  0EDD  1703               	bsf	3,6	;RP1=1, select bank3
  2248  0EDE  073E               	addwf	(??_main+7)^(0+384),w
  2249  0EDF  00C2               	movwf	(??_main+11)^(0+384)
  2250  0EE0  1283               	bcf	3,5	;RP0=0, select bank2
  2251  0EE1  1703               	bsf	3,6	;RP1=1, select bank2
  2252  0EE2  0863               	movf	(main@password^(0+256)+3),w
  2253  0EE3  1683               	bsf	3,5	;RP0=1, select bank3
  2254  0EE4  1703               	bsf	3,6	;RP1=1, select bank3
  2255  0EE5  0741               	addwf	(??_main+10)^(0+384),w
  2256  0EE6  00C3               	movwf	(??_main+12)^(0+384)
  2257  0EE7  3000               	movlw	0
  2258  0EE8  1803               	skipnc
  2259  0EE9  3001               	movlw	1
  2260  0EEA  0742               	addwf	(??_main+11)^(0+384),w
  2261  0EEB  00C4               	movwf	(??_main+13)^(0+384)
  2262  0EEC  0843               	movf	(??_main+12)^(0+384),w
  2263  0EED  3EB0               	addlw	176
  2264  0EEE  1283               	bcf	3,5	;RP0=0, select bank2
  2265  0EEF  1703               	bsf	3,6	;RP1=1, select bank2
  2266  0EF0  00E4               	movwf	main@password_int^(0+256)
  2267  0EF1  1683               	bsf	3,5	;RP0=1, select bank3
  2268  0EF2  1703               	bsf	3,6	;RP1=1, select bank3
  2269  0EF3  0844               	movf	(??_main+13)^(0+384),w
  2270  0EF4  1803               	skipnc
  2271  0EF5  3E01               	addlw	1
  2272  0EF6  3E2F               	addlw	47
  2273  0EF7  1283               	bcf	3,5	;RP0=0, select bank2
  2274  0EF8  1703               	bsf	3,6	;RP1=1, select bank2
  2275  0EF9  00E5               	movwf	(main@password_int+1)^(0+256)
  2276  0EFA                     l4824:	
  2277  0EFA  30D2               	movlw	210
  2278  0EFB  0664               	xorwf	main@password_int^(0+256),w
  2279  0EFC  3004               	movlw	4
  2280  0EFD  1903               	skipnz
  2281  0EFE  0665               	xorwf	(main@password_int+1)^(0+256),w
  2282  0EFF  1D03               	btfss	3,2
  2283  0F00  2F02               	goto	u7111
  2284  0F01  2F03               	goto	u7110
  2285  0F02                     u7111:	
  2286  0F02  2F25               	goto	l4828
  2287  0F03                     u7110:	
  2288  0F03                     l4826:	
  2289  0F03  3095               	movlw	(low (((STR_7+16)-__stringbase)| (0+32768)))& (0+255)
  2290  0F04  1283               	bcf	3,5	;RP0=0, select bank0
  2291  0F05  1303               	bcf	3,6	;RP1=0, select bank0
  2292  0F06  00BC               	movwf	UART_Write_Text@text
  2293  0F07  3080               	movlw	128
  2294  0F08  00BD               	movwf	UART_Write_Text@text+1
  2295  0F09  160A  118A  20FD  120A  158A  	fcall	_UART_Write_Text
  2296  0F0E  3097               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  2297  0F0F  1283               	bcf	3,5	;RP0=0, select bank0
  2298  0F10  1303               	bcf	3,6	;RP1=0, select bank0
  2299  0F11  00BC               	movwf	UART_Write_Text@text
  2300  0F12  3080               	movlw	128
  2301  0F13  00BD               	movwf	UART_Write_Text@text+1
  2302  0F14  160A  118A  20FD  120A  158A  	fcall	_UART_Write_Text
  2303  0F19  3095               	movlw	(low (((STR_7+16)-__stringbase)| (0+32768)))& (0+255)
  2304  0F1A  1283               	bcf	3,5	;RP0=0, select bank0
  2305  0F1B  1303               	bcf	3,6	;RP1=0, select bank0
  2306  0F1C  00BC               	movwf	UART_Write_Text@text
  2307  0F1D  3080               	movlw	128
  2308  0F1E  00BD               	movwf	UART_Write_Text@text+1
  2309  0F1F  160A  118A  20FD  120A  158A  	fcall	_UART_Write_Text
  2310  0F24  2F46               	goto	l4830
  2311  0F25                     l4828:	
  2312  0F25  3095               	movlw	(low (((STR_7+16)-__stringbase)| (0+32768)))& (0+255)
  2313  0F26  1283               	bcf	3,5	;RP0=0, select bank0
  2314  0F27  1303               	bcf	3,6	;RP1=0, select bank0
  2315  0F28  00BC               	movwf	UART_Write_Text@text
  2316  0F29  3080               	movlw	128
  2317  0F2A  00BD               	movwf	UART_Write_Text@text+1
  2318  0F2B  160A  118A  20FD  120A  158A  	fcall	_UART_Write_Text
  2319  0F30  3072               	movlw	(low ((STR_18-__stringbase)| (0+32768)))& (0+255)
  2320  0F31  1283               	bcf	3,5	;RP0=0, select bank0
  2321  0F32  1303               	bcf	3,6	;RP1=0, select bank0
  2322  0F33  00BC               	movwf	UART_Write_Text@text
  2323  0F34  3080               	movlw	128
  2324  0F35  00BD               	movwf	UART_Write_Text@text+1
  2325  0F36  160A  118A  20FD  120A  158A  	fcall	_UART_Write_Text
  2326  0F3B  3095               	movlw	(low (((STR_7+16)-__stringbase)| (0+32768)))& (0+255)
  2327  0F3C  1283               	bcf	3,5	;RP0=0, select bank0
  2328  0F3D  1303               	bcf	3,6	;RP1=0, select bank0
  2329  0F3E  00BC               	movwf	UART_Write_Text@text
  2330  0F3F  3080               	movlw	128
  2331  0F40  00BD               	movwf	UART_Write_Text@text+1
  2332  0F41  160A  118A  20FD  120A  158A  	fcall	_UART_Write_Text
  2333  0F46                     l4830:	
  2334                           
  2335                           ;main.c: 400: 
  2336  0F46  30D2               	movlw	210
  2337  0F47  1283               	bcf	3,5	;RP0=0, select bank2
  2338  0F48  1703               	bsf	3,6	;RP1=1, select bank2
  2339  0F49  0664               	xorwf	main@password_int^(0+256),w
  2340  0F4A  3004               	movlw	4
  2341  0F4B  1903               	skipnz
  2342  0F4C  0665               	xorwf	(main@password_int+1)^(0+256),w
  2343  0F4D  1D03               	btfss	3,2
  2344  0F4E  2F50               	goto	u7121
  2345  0F4F  2F51               	goto	u7120
  2346  0F50                     u7121:	
  2347  0F50  2E14               	goto	l4802
  2348  0F51                     u7120:	
  2349  0F51                     l4832:	
  2350  0F51  160A  118A  2331  120A  158A  	fcall	_write_to_EPPROM
  2351  0F56                     l4834:	
  2352  0F56  120A  158A  2101  120A  158A  	fcall	_read_from_EPPROM
  2353  0F5B                     l4836:	
  2354  0F5B  3001               	movlw	1
  2355  0F5C  1283               	bcf	3,5	;RP0=0, select bank0
  2356  0F5D  1303               	bcf	3,6	;RP1=0, select bank0
  2357  0F5E  00C9               	movwf	_running
  2358  0F5F  3000               	movlw	0
  2359  0F60  00CA               	movwf	_running+1
  2360  0F61                     l4838:	
  2361  0F61  1683               	bsf	3,5	;RP0=1, select bank1
  2362  0F62  1303               	bcf	3,6	;RP1=0, select bank1
  2363  0F63  1586               	bsf	6,3	;volatile
  2364  0F64                     l4840:	
  2365  0F64  1008               	bcf	8,0	;volatile
  2366  0F65                     l4842:	
  2367  0F65  1283               	bcf	3,5	;RP0=0, select bank0
  2368  0F66  1303               	bcf	3,6	;RP1=0, select bank0
  2369  0F67  1008               	bcf	8,0	;volatile
  2370  0F68  2FF4               	goto	l4858
  2371  0F69                     l4844:	
  2372  0F69  160A  158A  26E1  120A  158A  	fcall	_Aquisicao_Dados
  2373  0F6E  303F               	movlw	_Data_atual& (0+255)
  2374  0F6F  0084               	movwf	4
  2375  0F70  1683               	bsf	3,5	;RP0=1, select bank3
  2376  0F71  1703               	bsf	3,6	;RP1=1, select bank3
  2377  0F72  30A3               	movlw	low ?_Aquisicao_Dados
  2378  0F73  00B7               	movwf	??_main^(0+384)
  2379  0F74  0804               	movf	4,w
  2380  0F75  00B8               	movwf	(??_main^(0+384)+1)
  2381  0F76  3008               	movlw	8
  2382  0F77  00B9               	movwf	(??_main^(0+384)+2)
  2383  0F78                     u7130:	
  2384  0F78  0837               	movf	??_main^(0+384),w
  2385  0F79  0084               	movwf	4
  2386  0F7A  1783               	bsf	3,7	;select IRP bank3
  2387  0F7B  0800               	movf	0,w
  2388  0F7C  00BA               	movwf	(??_main^(0+384)+3)
  2389  0F7D  0AB7               	incf	??_main^(0+384),f
  2390  0F7E  0838               	movf	(??_main^(0+384)+1),w
  2391  0F7F  0084               	movwf	4
  2392  0F80  1383               	bcf	3,7	;select IRP bank0
  2393  0F81  083A               	movf	(??_main^(0+384)+3),w
  2394  0F82  0080               	movwf	0
  2395  0F83  0AB8               	incf	(??_main^(0+384)+1),f
  2396  0F84  0BB9               	decfsz	(??_main^(0+384)+2),f
  2397  0F85  2F78               	goto	u7130
  2398  0F86                     l4846:	
  2399  0F86  160A  158A  245B  120A  158A  	fcall	_move_the_fan
  2400  0F8B                     l4848:	
  2401  0F8B  160A  158A  23CF  120A  158A  	fcall	_UART_Data_Ready
  2402  0F90  3A00               	xorlw	0
  2403  0F91  1903               	skipnz
  2404  0F92  2F94               	goto	u7141
  2405  0F93  2F95               	goto	u7140
  2406  0F94                     u7141:	
  2407  0F94  2FC6               	goto	l248
  2408  0F95                     u7140:	
  2409  0F95                     l4850:	
  2410  0F95  30CB               	movlw	read_from_MR@calibracao& (0+255)
  2411  0F96  0084               	movwf	4
  2412  0F97  1283               	bcf	3,5	;RP0=0, select bank2
  2413  0F98  1703               	bsf	3,6	;RP1=1, select bank2
  2414  0F99  0869               	movf	main@calibracao^(0+256),w
  2415  0F9A  1383               	bcf	3,7	;select IRP bank1
  2416  0F9B  0080               	movwf	0
  2417  0F9C  0A84               	incf	4,f
  2418  0F9D  086A               	movf	(main@calibracao^(0+256)+1),w
  2419  0F9E  0080               	movwf	0
  2420  0F9F  0A84               	incf	4,f
  2421  0FA0  086B               	movf	(main@calibracao^(0+256)+2),w
  2422  0FA1  0080               	movwf	0
  2423  0FA2  0A84               	incf	4,f
  2424  0FA3  086C               	movf	(main@calibracao^(0+256)+3),w
  2425  0FA4  0080               	movwf	0
  2426  0FA5  0A84               	incf	4,f
  2427  0FA6  086D               	movf	(main@calibracao^(0+256)+4),w
  2428  0FA7  0080               	movwf	0
  2429  0FA8  0A84               	incf	4,f
  2430  0FA9  086E               	movf	(main@calibracao^(0+256)+5),w
  2431  0FAA  0080               	movwf	0
  2432  0FAB  120A  158A  234D  120A  158A  	fcall	_read_from_MR
  2433  0FB0  3069               	movlw	main@calibracao& (0+255)
  2434  0FB1  0084               	movwf	4
  2435  0FB2  1683               	bsf	3,5	;RP0=1, select bank1
  2436  0FB3  1303               	bcf	3,6	;RP1=0, select bank1
  2437  0FB4  084B               	movf	?_read_from_MR^(0+128),w
  2438  0FB5  1783               	bsf	3,7	;select IRP bank2
  2439  0FB6  0080               	movwf	0
  2440  0FB7  0A84               	incf	4,f
  2441  0FB8  084C               	movf	(?_read_from_MR^(0+128)+1),w
  2442  0FB9  0080               	movwf	0
  2443  0FBA  0A84               	incf	4,f
  2444  0FBB  084D               	movf	(?_read_from_MR^(0+128)+2),w
  2445  0FBC  0080               	movwf	0
  2446  0FBD  0A84               	incf	4,f
  2447  0FBE  084E               	movf	(?_read_from_MR^(0+128)+3),w
  2448  0FBF  0080               	movwf	0
  2449  0FC0  0A84               	incf	4,f
  2450  0FC1  084F               	movf	(?_read_from_MR^(0+128)+4),w
  2451  0FC2  0080               	movwf	0
  2452  0FC3  0A84               	incf	4,f
  2453  0FC4  0850               	movf	(?_read_from_MR^(0+128)+5),w
  2454  0FC5  0080               	movwf	0
  2455  0FC6                     l248:	
  2456  0FC6  30BF               	movlw	alarm_check@calibracao& (0+255)
  2457  0FC7  0084               	movwf	4
  2458  0FC8  1283               	bcf	3,5	;RP0=0, select bank2
  2459  0FC9  1703               	bsf	3,6	;RP1=1, select bank2
  2460  0FCA  0869               	movf	main@calibracao^(0+256),w
  2461  0FCB  1383               	bcf	3,7	;select IRP bank1
  2462  0FCC  0080               	movwf	0
  2463  0FCD  0A84               	incf	4,f
  2464  0FCE  086A               	movf	(main@calibracao^(0+256)+1),w
  2465  0FCF  0080               	movwf	0
  2466  0FD0  0A84               	incf	4,f
  2467  0FD1  086B               	movf	(main@calibracao^(0+256)+2),w
  2468  0FD2  0080               	movwf	0
  2469  0FD3  0A84               	incf	4,f
  2470  0FD4  086C               	movf	(main@calibracao^(0+256)+3),w
  2471  0FD5  0080               	movwf	0
  2472  0FD6  0A84               	incf	4,f
  2473  0FD7  086D               	movf	(main@calibracao^(0+256)+4),w
  2474  0FD8  0080               	movwf	0
  2475  0FD9  0A84               	incf	4,f
  2476  0FDA  086E               	movf	(main@calibracao^(0+256)+5),w
  2477  0FDB  0080               	movwf	0
  2478  0FDC  160A  118A  23AE  120A  158A  	fcall	_alarm_check
  2479  0FE1                     l4852:	
  2480  0FE1  1283               	bcf	3,5	;RP0=0, select bank0
  2481  0FE2  1303               	bcf	3,6	;RP1=0, select bank0
  2482  0FE3  1986               	btfsc	6,3	;volatile
  2483  0FE4  2FE6               	goto	u7151
  2484  0FE5  2FE7               	goto	u7150
  2485  0FE6                     u7151:	
  2486  0FE6  2FE9               	goto	l249
  2487  0FE7                     u7150:	
  2488  0FE7                     l4854:	
  2489  0FE7  1687               	bsf	7,5	;volatile
  2490  0FE8  2FEA               	goto	l4856
  2491  0FE9                     l249:	
  2492  0FE9  1287               	bcf	7,5	;volatile
  2493  0FEA                     l4856:	
  2494  0FEA  3082               	movlw	130
  2495  0FEB  1683               	bsf	3,5	;RP0=1, select bank3
  2496  0FEC  1703               	bsf	3,6	;RP1=1, select bank3
  2497  0FED  00B8               	movwf	(??_main^(0+384)+1)
  2498  0FEE  30DD               	movlw	221
  2499  0FEF  00B7               	movwf	??_main^(0+384)
  2500  0FF0                     u7177:	
  2501  0FF0  0BB7               	decfsz	??_main^(0+384),f
  2502  0FF1  2FF0               	goto	u7177
  2503  0FF2  0BB8               	decfsz	(??_main^(0+384)+1),f
  2504  0FF3  2FF0               	goto	u7177
  2505  0FF4                     l4858:	
  2506  0FF4  1283               	bcf	3,5	;RP0=0, select bank0
  2507  0FF5  1303               	bcf	3,6	;RP1=0, select bank0
  2508  0FF6  0349               	decf	_running,w
  2509  0FF7  044A               	iorwf	_running+1,w
  2510  0FF8  1903               	btfsc	3,2
  2511  0FF9  2FFB               	goto	u7161
  2512  0FFA  2FFC               	goto	u7160
  2513  0FFB                     u7161:	
  2514  0FFB  2F69               	goto	l4844
  2515  0FFC                     u7160:	
  2516  0FFC  2FF4               	goto	l4858
  2517  0FFD  120A  118A  2812   	ljmp	start
  2518  1000                     __end_of_main:	
  2519                           
  2520                           	psect	text1
  2521  1331                     __ptext1:	
  2522 ;; *************** function _write_to_EPPROM *****************
  2523 ;; Defined at:
  2524 ;;		line 268 in file "main.c"
  2525 ;; Parameters:    Size  Location     Type
  2526 ;;		None
  2527 ;; Auto vars:     Size  Location     Type
  2528 ;;  text1          30    6[BANK1 ] unsigned char [30]
  2529 ;;  epro_count      2   38[BANK1 ] int 
  2530 ;;  count_string    2   36[BANK1 ] int 
  2531 ;; Return value:  Size  Location     Type
  2532 ;;                  1    wreg      void 
  2533 ;; Registers used:
  2534 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2535 ;; Tracked objects:
  2536 ;;		On entry : 0/0
  2537 ;;		On exit  : 0/0
  2538 ;;		Unchanged: 0/0
  2539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2540 ;;      Params:         0       0       0       0       0
  2541 ;;      Locals:         0       0      34       0       0
  2542 ;;      Temps:          0       0       4       0       0
  2543 ;;      Totals:         0       0      38       0       0
  2544 ;;Total ram usage:       38 bytes
  2545 ;; Hardware stack levels used:    1
  2546 ;; Hardware stack levels required when called:    6
  2547 ;; This function calls:
  2548 ;;		_I2C_Begin
  2549 ;;		_I2C_End
  2550 ;;		_I2C_Write
  2551 ;;		_strlen
  2552 ;; This function is called by:
  2553 ;;		_main
  2554 ;; This function uses a non-reentrant model
  2555 ;;
  2556                           
  2557                           
  2558                           ;psect for function _write_to_EPPROM
  2559  1331                     _write_to_EPPROM:	
  2560  1331                     l4594:	
  2561                           ;incstack = 0
  2562                           ; Regs used in _write_to_EPPROM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2563                           
  2564                           
  2565                           ;main.c: 270: {
  2566  1331  30A6               	movlw	write_to_EPPROM@text1& (0+255)
  2567  1332  0084               	movwf	4
  2568  1333  30C5               	movlw	low write_to_EPPROM@F1063
  2569  1334  1683               	bsf	3,5	;RP0=1, select bank1
  2570  1335  1303               	bcf	3,6	;RP1=0, select bank1
  2571  1336  00A2               	movwf	??_write_to_EPPROM^(0+128)
  2572  1337  0804               	movf	4,w
  2573  1338  00A3               	movwf	(??_write_to_EPPROM^(0+128)+1)
  2574  1339  301E               	movlw	30
  2575  133A  00A4               	movwf	(??_write_to_EPPROM^(0+128)+2)
  2576  133B                     u6880:	
  2577  133B  0822               	movf	??_write_to_EPPROM^(0+128),w
  2578  133C  0084               	movwf	4
  2579  133D  1783               	bsf	3,7	;select IRP bank3
  2580  133E  0800               	movf	0,w
  2581  133F  00A5               	movwf	(??_write_to_EPPROM^(0+128)+3)
  2582  1340  0AA2               	incf	??_write_to_EPPROM^(0+128),f
  2583  1341  0823               	movf	(??_write_to_EPPROM^(0+128)+1),w
  2584  1342  0084               	movwf	4
  2585  1343  1383               	bcf	3,7	;select IRP bank1
  2586  1344  0825               	movf	(??_write_to_EPPROM^(0+128)+3),w
  2587  1345  0080               	movwf	0
  2588  1346  0AA3               	incf	(??_write_to_EPPROM^(0+128)+1),f
  2589  1347  0BA4               	decfsz	(??_write_to_EPPROM^(0+128)+2),f
  2590  1348  2B3B               	goto	u6880
  2591  1349                     l4596:	
  2592                           
  2593                           ;main.c: 271:   int magic = Data_atual.velocidade;
  2594  1349  30A6               	movlw	(low (write_to_EPPROM@text1| 0))& (0+255)
  2595  134A  160A  158A  24D9  160A  118A  	fcall	_strlen
  2596  134F  1283               	bcf	3,5	;RP0=0, select bank0
  2597  1350  1303               	bcf	3,6	;RP1=0, select bank0
  2598  1351  083C               	movf	?_strlen+1,w
  2599  1352  1683               	bsf	3,5	;RP0=1, select bank1
  2600  1353  1303               	bcf	3,6	;RP1=0, select bank1
  2601  1354  00C5               	movwf	(write_to_EPPROM@count_string+1)^(0+128)
  2602  1355  1283               	bcf	3,5	;RP0=0, select bank0
  2603  1356  1303               	bcf	3,6	;RP1=0, select bank0
  2604  1357  083B               	movf	?_strlen,w
  2605  1358  1683               	bsf	3,5	;RP0=1, select bank1
  2606  1359  1303               	bcf	3,6	;RP1=0, select bank1
  2607  135A  00C4               	movwf	write_to_EPPROM@count_string^(0+128)
  2608  135B                     l4598:	
  2609                           
  2610                           ;main.c: 272:   if(Data_atual.huminade<calibracao.humidade_incendio && Data_atual.temper
      +                          atura>calibracao.temperatuta_incendio && Data_atual.velocidade>calibracao.rajada_vento)
  2611  135B  01C6               	clrf	write_to_EPPROM@epro_count^(0+128)
  2612  135C  01C7               	clrf	(write_to_EPPROM@epro_count+1)^(0+128)
  2613  135D                     l4600:	
  2614                           
  2615                           ;main.c: 274:     Data_atual.alarm=1;
  2616  135D  160A  158A  23EE  160A  118A  	fcall	_I2C_Begin
  2617  1362                     l4602:	
  2618                           
  2619                           ;main.c: 275:     alarm();
  2620  1362  30A0               	movlw	160
  2621  1363  1283               	bcf	3,5	;RP0=0, select bank0
  2622  1364  1303               	bcf	3,6	;RP1=0, select bank0
  2623  1365  00BB               	movwf	I2C_Write@data
  2624  1366  3000               	movlw	0
  2625  1367  00BC               	movwf	I2C_Write@data+1
  2626  1368  160A  158A  2400  160A  118A  	fcall	_I2C_Write
  2627  136D                     l4604:	
  2628                           
  2629                           ;main.c: 276:   }else if(Data_atual.velocidade>magic){
  2630  136D  3000               	movlw	0
  2631  136E  1283               	bcf	3,5	;RP0=0, select bank0
  2632  136F  1303               	bcf	3,6	;RP1=0, select bank0
  2633  1370  00BB               	movwf	I2C_Write@data
  2634  1371  00BC               	movwf	I2C_Write@data+1
  2635  1372  160A  158A  2400  160A  118A  	fcall	_I2C_Write
  2636                           
  2637                           ;main.c: 278:     alarm();
  2638  1377  2B98               	goto	l4610
  2639  1378                     l4606:	
  2640                           
  2641                           ;main.c: 279:   }else{;main.c: 280:     Data_atual.alarm=0;
  2642  1378  1683               	bsf	3,5	;RP0=1, select bank1
  2643  1379  1303               	bcf	3,6	;RP1=0, select bank1
  2644  137A  0846               	movf	write_to_EPPROM@epro_count^(0+128),w
  2645  137B  3EA6               	addlw	(low (write_to_EPPROM@text1| 0))& (0+255)
  2646  137C  0084               	movwf	4
  2647  137D  1383               	bcf	3,7	;select IRP bank1
  2648  137E  0800               	movf	0,w
  2649  137F  00A2               	movwf	??_write_to_EPPROM^(0+128)
  2650  1380  01A3               	clrf	(??_write_to_EPPROM^(0+128)+1)
  2651  1381  0822               	movf	??_write_to_EPPROM^(0+128),w
  2652  1382  1283               	bcf	3,5	;RP0=0, select bank0
  2653  1383  1303               	bcf	3,6	;RP1=0, select bank0
  2654  1384  00BB               	movwf	I2C_Write@data
  2655  1385  1683               	bsf	3,5	;RP0=1, select bank1
  2656  1386  1303               	bcf	3,6	;RP1=0, select bank1
  2657  1387  0823               	movf	(??_write_to_EPPROM+1)^(0+128),w
  2658  1388  1283               	bcf	3,5	;RP0=0, select bank0
  2659  1389  1303               	bcf	3,6	;RP1=0, select bank0
  2660  138A  00BC               	movwf	I2C_Write@data+1
  2661  138B  160A  158A  2400  160A  118A  	fcall	_I2C_Write
  2662  1390                     l4608:	
  2663                           
  2664                           ;main.c: 281:     alarm();
  2665  1390  3001               	movlw	1
  2666  1391  1683               	bsf	3,5	;RP0=1, select bank1
  2667  1392  1303               	bcf	3,6	;RP1=0, select bank1
  2668  1393  07C6               	addwf	write_to_EPPROM@epro_count^(0+128),f
  2669  1394  1803               	skipnc
  2670  1395  0AC7               	incf	(write_to_EPPROM@epro_count+1)^(0+128),f
  2671  1396  3000               	movlw	0
  2672  1397  07C7               	addwf	(write_to_EPPROM@epro_count+1)^(0+128),f
  2673  1398                     l4610:	
  2674                           
  2675                           ;main.c: 278:     alarm();
  2676  1398  1683               	bsf	3,5	;RP0=1, select bank1
  2677  1399  1303               	bcf	3,6	;RP1=0, select bank1
  2678  139A  0847               	movf	(write_to_EPPROM@epro_count+1)^(0+128),w
  2679  139B  3A80               	xorlw	128
  2680  139C  00A2               	movwf	??_write_to_EPPROM^(0+128)
  2681  139D  0845               	movf	(write_to_EPPROM@count_string+1)^(0+128),w
  2682  139E  3A80               	xorlw	128
  2683  139F  0222               	subwf	??_write_to_EPPROM^(0+128),w
  2684  13A0  1D03               	skipz
  2685  13A1  2BA4               	goto	u6895
  2686  13A2  0844               	movf	write_to_EPPROM@count_string^(0+128),w
  2687  13A3  0246               	subwf	write_to_EPPROM@epro_count^(0+128),w
  2688  13A4                     u6895:	
  2689  13A4  1C03               	skipc
  2690  13A5  2BA7               	goto	u6891
  2691  13A6  2BA8               	goto	u6890
  2692  13A7                     u6891:	
  2693  13A7  2B78               	goto	l4606
  2694  13A8                     u6890:	
  2695  13A8                     l4612:	
  2696                           
  2697                           ;main.c: 283: }
  2698  13A8  160A  158A  23F7  160A  118A  	fcall	_I2C_End
  2699  13AD                     l211:	
  2700  13AD  0008               	return
  2701  13AE                     __end_of_write_to_EPPROM:	
  2702                           
  2703                           	psect	text2
  2704  1CD9                     __ptext2:	
  2705 ;; *************** function _strlen *****************
  2706 ;; Defined at:
  2707 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strlen.c"
  2708 ;; Parameters:    Size  Location     Type
  2709 ;;  s               1    wreg     PTR const unsigned char 
  2710 ;;		 -> write_to_EPPROM@text1(30), 
  2711 ;; Auto vars:     Size  Location     Type
  2712 ;;  s               1    0[BANK1 ] PTR const unsigned char 
  2713 ;;		 -> write_to_EPPROM@text1(30), 
  2714 ;;  cp              1    1[BANK1 ] PTR const unsigned char 
  2715 ;;		 -> write_to_EPPROM@text1(30), 
  2716 ;; Return value:  Size  Location     Type
  2717 ;;                  2   27[BANK0 ] unsigned int 
  2718 ;; Registers used:
  2719 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2720 ;; Tracked objects:
  2721 ;;		On entry : 0/0
  2722 ;;		On exit  : 0/0
  2723 ;;		Unchanged: 0/0
  2724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2725 ;;      Params:         0       2       0       0       0
  2726 ;;      Locals:         0       0       2       0       0
  2727 ;;      Temps:          0       1       0       0       0
  2728 ;;      Totals:         0       3       2       0       0
  2729 ;;Total ram usage:        5 bytes
  2730 ;; Hardware stack levels used:    1
  2731 ;; Hardware stack levels required when called:    4
  2732 ;; This function calls:
  2733 ;;		Nothing
  2734 ;; This function is called by:
  2735 ;;		_write_to_EPPROM
  2736 ;; This function uses a non-reentrant model
  2737 ;;
  2738                           
  2739                           
  2740                           ;psect for function _strlen
  2741  1CD9                     _strlen:	
  2742                           
  2743                           ;incstack = 0
  2744                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  2745                           ;strlen@s stored from wreg
  2746  1CD9  1683               	bsf	3,5	;RP0=1, select bank1
  2747  1CDA  1303               	bcf	3,6	;RP1=0, select bank1
  2748  1CDB  00A0               	movwf	strlen@s^(0+128)
  2749  1CDC                     l4332:	
  2750  1CDC  0820               	movf	strlen@s^(0+128),w
  2751  1CDD  1283               	bcf	3,5	;RP0=0, select bank0
  2752  1CDE  1303               	bcf	3,6	;RP1=0, select bank0
  2753  1CDF  00BD               	movwf	??_strlen
  2754  1CE0  083D               	movf	??_strlen,w
  2755  1CE1  1683               	bsf	3,5	;RP0=1, select bank1
  2756  1CE2  1303               	bcf	3,6	;RP1=0, select bank1
  2757  1CE3  00A1               	movwf	strlen@cp^(0+128)
  2758  1CE4  2CED               	goto	l4336
  2759  1CE5                     l4334:	
  2760  1CE5  3001               	movlw	1
  2761  1CE6  1283               	bcf	3,5	;RP0=0, select bank0
  2762  1CE7  1303               	bcf	3,6	;RP1=0, select bank0
  2763  1CE8  00BD               	movwf	??_strlen
  2764  1CE9  083D               	movf	??_strlen,w
  2765  1CEA  1683               	bsf	3,5	;RP0=1, select bank1
  2766  1CEB  1303               	bcf	3,6	;RP1=0, select bank1
  2767  1CEC  07A1               	addwf	strlen@cp^(0+128),f
  2768  1CED                     l4336:	
  2769  1CED  0821               	movf	strlen@cp^(0+128),w
  2770  1CEE  0084               	movwf	4
  2771  1CEF  1383               	bcf	3,7	;select IRP bank0
  2772  1CF0  0800               	movf	0,w
  2773  1CF1  1D03               	btfss	3,2
  2774  1CF2  2CF4               	goto	u6391
  2775  1CF3  2CF5               	goto	u6390
  2776  1CF4                     u6391:	
  2777  1CF4  2CE5               	goto	l4334
  2778  1CF5                     u6390:	
  2779  1CF5                     l4338:	
  2780  1CF5  0820               	movf	strlen@s^(0+128),w
  2781  1CF6  0221               	subwf	strlen@cp^(0+128),w
  2782  1CF7  1283               	bcf	3,5	;RP0=0, select bank0
  2783  1CF8  1303               	bcf	3,6	;RP1=0, select bank0
  2784  1CF9  00BB               	movwf	?_strlen
  2785  1CFA  01BC               	clrf	?_strlen+1
  2786  1CFB  1BBB               	btfsc	?_strlen,7
  2787  1CFC  03BC               	decf	?_strlen+1,f
  2788  1CFD                     l946:	
  2789  1CFD  0008               	return
  2790  1CFE                     __end_of_strlen:	
  2791                           
  2792                           	psect	text3
  2793  0C63                     __ptext3:	
  2794 ;; *************** function _teclado *****************
  2795 ;; Defined at:
  2796 ;;		line 187 in file "main.c"
  2797 ;; Parameters:    Size  Location     Type
  2798 ;;  timeout         2   27[BANK0 ] unsigned int 
  2799 ;; Auto vars:     Size  Location     Type
  2800 ;;  to              2    1[BANK1 ] unsigned int 
  2801 ;;  i               1    4[BANK1 ] unsigned char 
  2802 ;;  ret             1    3[BANK1 ] unsigned char 
  2803 ;;  tmp             1    0[BANK1 ] unsigned char 
  2804 ;; Return value:  Size  Location     Type
  2805 ;;                  1    wreg      unsigned char 
  2806 ;; Registers used:
  2807 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2808 ;; Tracked objects:
  2809 ;;		On entry : 0/0
  2810 ;;		On exit  : 0/0
  2811 ;;		Unchanged: 0/0
  2812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2813 ;;      Params:         0       2       0       0       0
  2814 ;;      Locals:         0       0       5       0       0
  2815 ;;      Temps:          0       2       0       0       0
  2816 ;;      Totals:         0       4       5       0       0
  2817 ;;Total ram usage:        9 bytes
  2818 ;; Hardware stack levels used:    1
  2819 ;; Hardware stack levels required when called:    4
  2820 ;; This function calls:
  2821 ;;		Nothing
  2822 ;; This function is called by:
  2823 ;;		_main
  2824 ;; This function uses a non-reentrant model
  2825 ;;
  2826                           
  2827                           
  2828                           ;psect for function _teclado
  2829  0C63                     _teclado:	
  2830  0C63                     l4508:	
  2831                           ;incstack = 0
  2832                           ; Regs used in _teclado: [wreg-fsr0h+status,2+status,0+pclath]
  2833                           
  2834                           
  2835                           ;main.c: 187:               while(!PORTDbits.RD0);;main.c: 188:               ret= 10+i;
      +                          ;main.c: 189:               break;
  2836  0C63  1683               	bsf	3,5	;RP0=1, select bank1
  2837  0C64  1303               	bcf	3,6	;RP1=0, select bank1
  2838  0C65  01A1               	clrf	teclado@to^(0+128)
  2839  0C66  01A2               	clrf	(teclado@to+1)^(0+128)
  2840                           
  2841                           ;main.c: 190:           };main.c: 191:       }
  2842  0C67  01A3               	clrf	teclado@ret^(0+128)
  2843  0C68                     l4510:	
  2844                           
  2845                           ;main.c: 192:       PORTB &=linha[i];
  2846  0C68  1283               	bcf	3,5	;RP0=0, select bank0
  2847  0C69  1303               	bcf	3,6	;RP1=0, select bank0
  2848  0C6A  0806               	movf	6,w	;volatile
  2849  0C6B  00BD               	movwf	??_teclado
  2850  0C6C  083D               	movf	??_teclado,w
  2851  0C6D  1683               	bsf	3,5	;RP0=1, select bank1
  2852  0C6E  1303               	bcf	3,6	;RP1=0, select bank1
  2853  0C6F  00A0               	movwf	teclado@tmp^(0+128)
  2854                           
  2855                           ;main.c: 193:     };main.c: 196:   }
  2856  0C70  2D42               	goto	l166
  2857  0C71                     l4512:	
  2858                           
  2859                           ;main.c: 197: ;main.c: 198:   if(!ret)ret=255;
  2860  0C71  01A4               	clrf	teclado@i^(0+128)
  2861  0C72                     l4518:	
  2862                           
  2863                           ;main.c: 199:   if(ret == 11)ret=0;;main.c: 200:   PORTB=tmp;
  2864  0C72  0824               	movf	teclado@i^(0+128),w
  2865  0C73  3E0B               	addlw	low ((teclado@linha-__stringbase)| (0+32768))
  2866  0C74  0084               	movwf	4
  2867  0C75  120A  158A  200A  120A  158A  	fcall	stringdir
  2868  0C7A  3AFF               	xorlw	255
  2869  0C7B  1283               	bcf	3,5	;RP0=0, select bank0
  2870  0C7C  1303               	bcf	3,6	;RP1=0, select bank0
  2871  0C7D  00BD               	movwf	??_teclado
  2872  0C7E  083D               	movf	??_teclado,w
  2873  0C7F  0486               	iorwf	6,f	;volatile
  2874  0C80                     l4520:	
  2875                           
  2876                           ;main.c: 201:   return ret;
  2877  0C80  1988               	btfsc	8,3	;volatile
  2878  0C81  2C83               	goto	u6691
  2879  0C82  2C84               	goto	u6690
  2880  0C83                     u6691:	
  2881  0C83  2CA5               	goto	l170
  2882  0C84                     u6690:	
  2883  0C84                     l4522:	
  2884                           
  2885                           ;main.c: 202: };main.c: 203: 
  2886  0C84  301A               	movlw	26
  2887  0C85  1283               	bcf	3,5	;RP0=0, select bank0
  2888  0C86  1303               	bcf	3,6	;RP1=0, select bank0
  2889  0C87  00BE               	movwf	??_teclado+1
  2890  0C88  30F7               	movlw	247
  2891  0C89  00BD               	movwf	??_teclado
  2892  0C8A                     u7187:	
  2893  0C8A  0BBD               	decfsz	??_teclado,f
  2894  0C8B  2C8A               	goto	u7187
  2895  0C8C  0BBE               	decfsz	??_teclado+1,f
  2896  0C8D  2C8A               	goto	u7187
  2897  0C8E  2C8F               	nop2
  2898  0C8F                     l4524:	
  2899                           
  2900                           ;main.c: 204: void move_the_fan()
  2901  0C8F  1283               	bcf	3,5	;RP0=0, select bank0
  2902  0C90  1303               	bcf	3,6	;RP1=0, select bank0
  2903  0C91  1988               	btfsc	8,3	;volatile
  2904  0C92  2C94               	goto	u6701
  2905  0C93  2C95               	goto	u6700
  2906  0C94                     u6701:	
  2907  0C94  2CA5               	goto	l170
  2908  0C95                     u6700:	
  2909  0C95                     l172:	
  2910  0C95  1D88               	btfss	8,3	;volatile
  2911  0C96  2C98               	goto	u6711
  2912  0C97  2C99               	goto	u6710
  2913  0C98                     u6711:	
  2914  0C98  2C95               	goto	l172
  2915  0C99                     u6710:	
  2916  0C99                     l4528:	
  2917                           
  2918                           ;main.c: 207:   PWM_Duty(a);
  2919  0C99  1683               	bsf	3,5	;RP0=1, select bank1
  2920  0C9A  1303               	bcf	3,6	;RP1=0, select bank1
  2921  0C9B  0824               	movf	teclado@i^(0+128),w
  2922  0C9C  3E01               	addlw	1
  2923  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  2924  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  2925  0C9F  00BD               	movwf	??_teclado
  2926  0CA0  083D               	movf	??_teclado,w
  2927  0CA1  1683               	bsf	3,5	;RP0=1, select bank1
  2928  0CA2  1303               	bcf	3,6	;RP1=0, select bank1
  2929  0CA3  00A3               	movwf	teclado@ret^(0+128)
  2930                           
  2931                           ;main.c: 208: }
  2932  0CA4  2D2F               	goto	l4560
  2933  0CA5                     l170:	
  2934                           ;main.c: 210: Data_struct Aquisicao_Dados()
  2935                           
  2936                           
  2937                           ;main.c: 211: {
  2938  0CA5  1908               	btfsc	8,2	;volatile
  2939  0CA6  2CA8               	goto	u6721
  2940  0CA7  2CA9               	goto	u6720
  2941  0CA8                     u6721:	
  2942  0CA8  2CCA               	goto	l175
  2943  0CA9                     u6720:	
  2944  0CA9                     l4530:	
  2945                           
  2946                           ;main.c: 212:   Data_struct aqui;;main.c: 213:   aqui.huminade=get_humidade();
  2947  0CA9  301A               	movlw	26
  2948  0CAA  1283               	bcf	3,5	;RP0=0, select bank0
  2949  0CAB  1303               	bcf	3,6	;RP1=0, select bank0
  2950  0CAC  00BE               	movwf	??_teclado+1
  2951  0CAD  30F7               	movlw	247
  2952  0CAE  00BD               	movwf	??_teclado
  2953  0CAF                     u7197:	
  2954  0CAF  0BBD               	decfsz	??_teclado,f
  2955  0CB0  2CAF               	goto	u7197
  2956  0CB1  0BBE               	decfsz	??_teclado+1,f
  2957  0CB2  2CAF               	goto	u7197
  2958  0CB3  2CB4               	nop2
  2959  0CB4                     l4532:	
  2960                           
  2961                           ;main.c: 214:   aqui.temperatura=get_temperatura();
  2962  0CB4  1283               	bcf	3,5	;RP0=0, select bank0
  2963  0CB5  1303               	bcf	3,6	;RP1=0, select bank0
  2964  0CB6  1908               	btfsc	8,2	;volatile
  2965  0CB7  2CB9               	goto	u6731
  2966  0CB8  2CBA               	goto	u6730
  2967  0CB9                     u6731:	
  2968  0CB9  2CCA               	goto	l175
  2969  0CBA                     u6730:	
  2970  0CBA                     l177:	
  2971  0CBA  1D08               	btfss	8,2	;volatile
  2972  0CBB  2CBD               	goto	u6741
  2973  0CBC  2CBE               	goto	u6740
  2974  0CBD                     u6741:	
  2975  0CBD  2CBA               	goto	l177
  2976  0CBE                     u6740:	
  2977  0CBE                     l4536:	
  2978                           
  2979                           ;main.c: 217: }
  2980  0CBE  1683               	bsf	3,5	;RP0=1, select bank1
  2981  0CBF  1303               	bcf	3,6	;RP1=0, select bank1
  2982  0CC0  0824               	movf	teclado@i^(0+128),w
  2983  0CC1  3E04               	addlw	4
  2984  0CC2  1283               	bcf	3,5	;RP0=0, select bank0
  2985  0CC3  1303               	bcf	3,6	;RP1=0, select bank0
  2986  0CC4  00BD               	movwf	??_teclado
  2987  0CC5  083D               	movf	??_teclado,w
  2988  0CC6  1683               	bsf	3,5	;RP0=1, select bank1
  2989  0CC7  1303               	bcf	3,6	;RP1=0, select bank1
  2990  0CC8  00A3               	movwf	teclado@ret^(0+128)
  2991                           
  2992                           ;main.c: 218: 
  2993  0CC9  2D2F               	goto	l4560
  2994  0CCA                     l175:	
  2995                           ;main.c: 220: {
  2996                           
  2997                           
  2998                           ;main.c: 221:   char text1[30] =" Trabalho SAD \n \0";
  2999  0CCA  1888               	btfsc	8,1	;volatile
  3000  0CCB  2CCD               	goto	u6751
  3001  0CCC  2CCE               	goto	u6750
  3002  0CCD                     u6751:	
  3003  0CCD  2CEF               	goto	l180
  3004  0CCE                     u6750:	
  3005  0CCE                     l4538:	
  3006                           
  3007                           ;main.c: 222:   int count_string = strlen(text1);;main.c: 223:   int epro_count=0;
  3008  0CCE  301A               	movlw	26
  3009  0CCF  1283               	bcf	3,5	;RP0=0, select bank0
  3010  0CD0  1303               	bcf	3,6	;RP1=0, select bank0
  3011  0CD1  00BE               	movwf	??_teclado+1
  3012  0CD2  30F7               	movlw	247
  3013  0CD3  00BD               	movwf	??_teclado
  3014  0CD4                     u7207:	
  3015  0CD4  0BBD               	decfsz	??_teclado,f
  3016  0CD5  2CD4               	goto	u7207
  3017  0CD6  0BBE               	decfsz	??_teclado+1,f
  3018  0CD7  2CD4               	goto	u7207
  3019  0CD8  2CD9               	nop2
  3020  0CD9                     l4540:	
  3021                           
  3022                           ;main.c: 224: 
  3023  0CD9  1283               	bcf	3,5	;RP0=0, select bank0
  3024  0CDA  1303               	bcf	3,6	;RP1=0, select bank0
  3025  0CDB  1888               	btfsc	8,1	;volatile
  3026  0CDC  2CDE               	goto	u6761
  3027  0CDD  2CDF               	goto	u6760
  3028  0CDE                     u6761:	
  3029  0CDE  2CEF               	goto	l180
  3030  0CDF                     u6760:	
  3031  0CDF                     l182:	
  3032  0CDF  1C88               	btfss	8,1	;volatile
  3033  0CE0  2CE2               	goto	u6771
  3034  0CE1  2CE3               	goto	u6770
  3035  0CE2                     u6771:	
  3036  0CE2  2CDF               	goto	l182
  3037  0CE3                     u6770:	
  3038  0CE3                     l4544:	
  3039                           
  3040                           ;main.c: 227:   I2C_Write(0);
  3041  0CE3  1683               	bsf	3,5	;RP0=1, select bank1
  3042  0CE4  1303               	bcf	3,6	;RP1=0, select bank1
  3043  0CE5  0824               	movf	teclado@i^(0+128),w
  3044  0CE6  3E07               	addlw	7
  3045  0CE7  1283               	bcf	3,5	;RP0=0, select bank0
  3046  0CE8  1303               	bcf	3,6	;RP1=0, select bank0
  3047  0CE9  00BD               	movwf	??_teclado
  3048  0CEA  083D               	movf	??_teclado,w
  3049  0CEB  1683               	bsf	3,5	;RP0=1, select bank1
  3050  0CEC  1303               	bcf	3,6	;RP1=0, select bank1
  3051  0CED  00A3               	movwf	teclado@ret^(0+128)
  3052                           
  3053                           ;main.c: 228: 
  3054  0CEE  2D2F               	goto	l4560
  3055  0CEF                     l180:	
  3056                           ;main.c: 230:   {
  3057                           
  3058                           
  3059                           ;main.c: 231:     I2C_Write(text1[epro_count]);
  3060  0CEF  1808               	btfsc	8,0	;volatile
  3061  0CF0  2CF2               	goto	u6781
  3062  0CF1  2CF3               	goto	u6780
  3063  0CF2                     u6781:	
  3064  0CF2  2D14               	goto	l4554
  3065  0CF3                     u6780:	
  3066  0CF3                     l4546:	
  3067                           
  3068                           ;main.c: 232:     epro_count++;;main.c: 233:   }
  3069  0CF3  301A               	movlw	26
  3070  0CF4  1283               	bcf	3,5	;RP0=0, select bank0
  3071  0CF5  1303               	bcf	3,6	;RP1=0, select bank0
  3072  0CF6  00BE               	movwf	??_teclado+1
  3073  0CF7  30F7               	movlw	247
  3074  0CF8  00BD               	movwf	??_teclado
  3075  0CF9                     u7217:	
  3076  0CF9  0BBD               	decfsz	??_teclado,f
  3077  0CFA  2CF9               	goto	u7217
  3078  0CFB  0BBE               	decfsz	??_teclado+1,f
  3079  0CFC  2CF9               	goto	u7217
  3080  0CFD  2CFE               	nop2
  3081  0CFE                     l4548:	
  3082                           
  3083                           ;main.c: 234:   I2C_End();
  3084  0CFE  1283               	bcf	3,5	;RP0=0, select bank0
  3085  0CFF  1303               	bcf	3,6	;RP1=0, select bank0
  3086  0D00  1808               	btfsc	8,0	;volatile
  3087  0D01  2D03               	goto	u6791
  3088  0D02  2D04               	goto	u6790
  3089  0D03                     u6791:	
  3090  0D03  2D14               	goto	l4554
  3091  0D04                     u6790:	
  3092  0D04                     l187:	
  3093  0D04  1C08               	btfss	8,0	;volatile
  3094  0D05  2D07               	goto	u6801
  3095  0D06  2D08               	goto	u6800
  3096  0D07                     u6801:	
  3097  0D07  2D04               	goto	l187
  3098  0D08                     u6800:	
  3099  0D08                     l4552:	
  3100                           
  3101                           ;main.c: 237: void read_from_EPPROM()
  3102  0D08  1683               	bsf	3,5	;RP0=1, select bank1
  3103  0D09  1303               	bcf	3,6	;RP1=0, select bank1
  3104  0D0A  0824               	movf	teclado@i^(0+128),w
  3105  0D0B  3E0A               	addlw	10
  3106  0D0C  1283               	bcf	3,5	;RP0=0, select bank0
  3107  0D0D  1303               	bcf	3,6	;RP1=0, select bank0
  3108  0D0E  00BD               	movwf	??_teclado
  3109  0D0F  083D               	movf	??_teclado,w
  3110  0D10  1683               	bsf	3,5	;RP0=1, select bank1
  3111  0D11  1303               	bcf	3,6	;RP1=0, select bank1
  3112  0D12  00A3               	movwf	teclado@ret^(0+128)
  3113                           
  3114                           ;main.c: 238: {
  3115  0D13  2D2F               	goto	l4560
  3116  0D14                     l4554:	
  3117                           
  3118                           ;main.c: 241:   I2C_Begin();
  3119  0D14  1683               	bsf	3,5	;RP0=1, select bank1
  3120  0D15  1303               	bcf	3,6	;RP1=0, select bank1
  3121  0D16  0824               	movf	teclado@i^(0+128),w
  3122  0D17  3E0B               	addlw	low ((teclado@linha-__stringbase)| (0+32768))
  3123  0D18  0084               	movwf	4
  3124  0D19  120A  158A  200A  120A  158A  	fcall	stringdir
  3125  0D1E  1283               	bcf	3,5	;RP0=0, select bank0
  3126  0D1F  1303               	bcf	3,6	;RP1=0, select bank0
  3127  0D20  00BD               	movwf	??_teclado
  3128  0D21  083D               	movf	??_teclado,w
  3129  0D22  0586               	andwf	6,f	;volatile
  3130  0D23                     l4556:	
  3131                           
  3132                           ;main.c: 242:   I2C_Write(160);
  3133  0D23  3001               	movlw	1
  3134  0D24  00BD               	movwf	??_teclado
  3135  0D25  083D               	movf	??_teclado,w
  3136  0D26  1683               	bsf	3,5	;RP0=1, select bank1
  3137  0D27  1303               	bcf	3,6	;RP1=0, select bank1
  3138  0D28  07A4               	addwf	teclado@i^(0+128),f
  3139  0D29                     l4558:	
  3140  0D29  3003               	movlw	3
  3141  0D2A  0224               	subwf	teclado@i^(0+128),w
  3142  0D2B  1C03               	skipc
  3143  0D2C  2D2E               	goto	u6811
  3144  0D2D  2D2F               	goto	u6810
  3145  0D2E                     u6811:	
  3146  0D2E  2C72               	goto	l4518
  3147  0D2F                     u6810:	
  3148  0D2F                     l4560:	
  3149                           
  3150                           ;main.c: 243: 
  3151  0D2F  3007               	movlw	7
  3152  0D30  1283               	bcf	3,5	;RP0=0, select bank0
  3153  0D31  1303               	bcf	3,6	;RP1=0, select bank0
  3154  0D32  00BE               	movwf	??_teclado+1
  3155  0D33  307C               	movlw	124
  3156  0D34  00BD               	movwf	??_teclado
  3157  0D35                     u7227:	
  3158  0D35  0BBD               	decfsz	??_teclado,f
  3159  0D36  2D35               	goto	u7227
  3160  0D37  0BBE               	decfsz	??_teclado+1,f
  3161  0D38  2D35               	goto	u7227
  3162  0D39  0000               	nop
  3163                           
  3164                           ;main.c: 244:   I2C_Write(1);
  3165  0D3A  3005               	movlw	5
  3166  0D3B  1683               	bsf	3,5	;RP0=1, select bank1
  3167  0D3C  1303               	bcf	3,6	;RP1=0, select bank1
  3168  0D3D  07A1               	addwf	teclado@to^(0+128),f
  3169  0D3E  1803               	skipnc
  3170  0D3F  0AA2               	incf	(teclado@to+1)^(0+128),f
  3171  0D40  3000               	movlw	0
  3172  0D41  07A2               	addwf	(teclado@to+1)^(0+128),f
  3173  0D42                     l166:	
  3174                           ;main.c: 245: 
  3175                           
  3176                           
  3177                           ;main.c: 196:   }
  3178  0D42  1283               	bcf	3,5	;RP0=0, select bank0
  3179  0D43  1303               	bcf	3,6	;RP1=0, select bank0
  3180  0D44  083C               	movf	teclado@timeout+1,w
  3181  0D45  1683               	bsf	3,5	;RP0=1, select bank1
  3182  0D46  1303               	bcf	3,6	;RP1=0, select bank1
  3183  0D47  0222               	subwf	(teclado@to+1)^(0+128),w
  3184  0D48  1D03               	skipz
  3185  0D49  2D50               	goto	u6825
  3186  0D4A  1283               	bcf	3,5	;RP0=0, select bank0
  3187  0D4B  1303               	bcf	3,6	;RP1=0, select bank0
  3188  0D4C  083B               	movf	teclado@timeout,w
  3189  0D4D  1683               	bsf	3,5	;RP0=1, select bank1
  3190  0D4E  1303               	bcf	3,6	;RP1=0, select bank1
  3191  0D4F  0221               	subwf	teclado@to^(0+128),w
  3192  0D50                     u6825:	
  3193  0D50  1C03               	skipc
  3194  0D51  2D53               	goto	u6821
  3195  0D52  2D54               	goto	u6820
  3196  0D53                     u6821:	
  3197  0D53  2D5C               	goto	l4564
  3198  0D54                     u6820:	
  3199  0D54                     l4562:	
  3200  0D54  1283               	bcf	3,5	;RP0=0, select bank0
  3201  0D55  1303               	bcf	3,6	;RP1=0, select bank0
  3202  0D56  083B               	movf	teclado@timeout,w
  3203  0D57  043C               	iorwf	teclado@timeout+1,w
  3204  0D58  1D03               	btfss	3,2
  3205  0D59  2D5B               	goto	u6831
  3206  0D5A  2D5C               	goto	u6830
  3207  0D5B                     u6831:	
  3208  0D5B  2D63               	goto	l4566
  3209  0D5C                     u6830:	
  3210  0D5C                     l4564:	
  3211  0D5C  1683               	bsf	3,5	;RP0=1, select bank1
  3212  0D5D  1303               	bcf	3,6	;RP1=0, select bank1
  3213  0D5E  0823               	movf	teclado@ret^(0+128),w
  3214  0D5F  1903               	btfsc	3,2
  3215  0D60  2D62               	goto	u6841
  3216  0D61  2D63               	goto	u6840
  3217  0D62                     u6841:	
  3218  0D62  2C71               	goto	l4512
  3219  0D63                     u6840:	
  3220  0D63                     l4566:	
  3221                           
  3222                           ;main.c: 247:   I2C_Write(160);
  3223  0D63  1683               	bsf	3,5	;RP0=1, select bank1
  3224  0D64  1303               	bcf	3,6	;RP1=0, select bank1
  3225  0D65  0823               	movf	teclado@ret^(0+128),w
  3226  0D66  1D03               	btfss	3,2
  3227  0D67  2D69               	goto	u6851
  3228  0D68  2D6A               	goto	u6850
  3229  0D69                     u6851:	
  3230  0D69  2D72               	goto	l4570
  3231  0D6A                     u6850:	
  3232  0D6A                     l4568:	
  3233  0D6A  30FF               	movlw	255
  3234  0D6B  1283               	bcf	3,5	;RP0=0, select bank0
  3235  0D6C  1303               	bcf	3,6	;RP1=0, select bank0
  3236  0D6D  00BD               	movwf	??_teclado
  3237  0D6E  083D               	movf	??_teclado,w
  3238  0D6F  1683               	bsf	3,5	;RP0=1, select bank1
  3239  0D70  1303               	bcf	3,6	;RP1=0, select bank1
  3240  0D71  00A3               	movwf	teclado@ret^(0+128)
  3241  0D72                     l4570:	
  3242                           
  3243                           ;main.c: 248: 
  3244  0D72  300B               	movlw	11
  3245  0D73  0623               	xorwf	teclado@ret^(0+128),w
  3246  0D74  1D03               	btfss	3,2
  3247  0D75  2D77               	goto	u6861
  3248  0D76  2D78               	goto	u6860
  3249  0D77                     u6861:	
  3250  0D77  2D79               	goto	l4574
  3251  0D78                     u6860:	
  3252  0D78                     l4572:	
  3253  0D78  01A3               	clrf	teclado@ret^(0+128)
  3254  0D79                     l4574:	
  3255                           
  3256                           ;main.c: 249:   I2C_Read(data[0]);
  3257  0D79  0820               	movf	teclado@tmp^(0+128),w
  3258  0D7A  1283               	bcf	3,5	;RP0=0, select bank0
  3259  0D7B  1303               	bcf	3,6	;RP1=0, select bank0
  3260  0D7C  0086               	movwf	6	;volatile
  3261  0D7D                     l4576:	
  3262                           
  3263                           ;main.c: 250:   I2C_End();
  3264  0D7D  1683               	bsf	3,5	;RP0=1, select bank1
  3265  0D7E  1303               	bcf	3,6	;RP1=0, select bank1
  3266  0D7F  0823               	movf	teclado@ret^(0+128),w
  3267  0D80                     l197:	
  3268  0D80  0008               	return
  3269  0D81                     __end_of_teclado:	
  3270                           
  3271                           	psect	text4
  3272  0B4D                     __ptext4:	
  3273 ;; *************** function _read_from_MR *****************
  3274 ;; Defined at:
  3275 ;;		line 109 in file "main.c"
  3276 ;; Parameters:    Size  Location     Type
  3277 ;;  calibracao      6   43[BANK1 ] struct .
  3278 ;; Auto vars:     Size  Location     Type
  3279 ;;  output          8   63[BANK1 ] unsigned char [8]
  3280 ;;  int_input       2   71[BANK1 ] int 
  3281 ;; Return value:  Size  Location     Type
  3282 ;;                  6   43[BANK1 ] struct .
  3283 ;; Registers used:
  3284 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3285 ;; Tracked objects:
  3286 ;;		On entry : 0/0
  3287 ;;		On exit  : 0/0
  3288 ;;		Unchanged: 0/0
  3289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3290 ;;      Params:         0       0       6       0       0
  3291 ;;      Locals:         0       0      10       0       0
  3292 ;;      Temps:          0       0      14       0       0
  3293 ;;      Totals:         0       0      30       0       0
  3294 ;;Total ram usage:       30 bytes
  3295 ;; Hardware stack levels used:    1
  3296 ;; Hardware stack levels required when called:    7
  3297 ;; This function calls:
  3298 ;;		_UART_Read_Text
  3299 ;;		_UART_Write_Decimal
  3300 ;;		_UART_Write_Text
  3301 ;;		___wmul
  3302 ;;		_print_json
  3303 ;; This function is called by:
  3304 ;;		_main
  3305 ;; This function uses a non-reentrant model
  3306 ;;
  3307                           
  3308                           
  3309                           ;psect for function _read_from_MR
  3310  0B4D                     _read_from_MR:	
  3311  0B4D                     l4462:	
  3312                           ;incstack = 0
  3313                           ; Regs used in _read_from_MR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3314                           
  3315  0B4D                     l4464:	
  3316                           
  3317                           ;main.c: 113:     if(count_minute==500)
  3318  0B4D  3008               	movlw	8
  3319  0B4E  1283               	bcf	3,5	;RP0=0, select bank0
  3320  0B4F  1303               	bcf	3,6	;RP1=0, select bank0
  3321  0B50  00BB               	movwf	UART_Read_Text@length
  3322  0B51  3000               	movlw	0
  3323  0B52  00BC               	movwf	UART_Read_Text@length+1
  3324  0B53  30DF               	movlw	(low (read_from_MR@output| 0))& (0+255)
  3325  0B54  160A  158A  258F  120A  158A  	fcall	_UART_Read_Text
  3326  0B59                     l4466:	
  3327                           
  3328                           ;main.c: 114:     {
  3329  0B59  1683               	bsf	3,5	;RP0=1, select bank1
  3330  0B5A  1303               	bcf	3,6	;RP1=0, select bank1
  3331  0B5B  01E6               	clrf	(read_from_MR@output^(0+128)+7)
  3332  0B5C                     l4468:	
  3333                           
  3334                           ;main.c: 115:       count_minute=0;
  3335  0B5C  300A               	movlw	10
  3336  0B5D  00D1               	movwf	??_read_from_MR^(0+128)
  3337  0B5E  0851               	movf	??_read_from_MR^(0+128),w
  3338  0B5F  00E5               	movwf	(read_from_MR@output^(0+128)+6)
  3339  0B60                     l4470:	
  3340                           
  3341                           ;main.c: 116:       if (running==1)
  3342  0B60  30DF               	movlw	(low (read_from_MR@output| 0))& (0+255)
  3343  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  3344  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  3345  0B63  00BC               	movwf	UART_Write_Text@text
  3346  0B64  3000               	movlw	0
  3347  0B65  00BD               	movwf	UART_Write_Text@text+1
  3348  0B66  160A  118A  20FD  120A  158A  	fcall	_UART_Write_Text
  3349  0B6B                     l4472:	
  3350                           
  3351                           ;main.c: 118:         print_json();
  3352  0B6B  3031               	movlw	49
  3353  0B6C  1683               	bsf	3,5	;RP0=1, select bank1
  3354  0B6D  1303               	bcf	3,6	;RP1=0, select bank1
  3355  0B6E  065F               	xorwf	read_from_MR@output^(0+128),w
  3356  0B6F  1D03               	btfss	3,2
  3357  0B70  2B72               	goto	u6681
  3358  0B71  2B73               	goto	u6680
  3359  0B72                     u6681:	
  3360  0B72  2B84               	goto	l4480
  3361  0B73                     u6680:	
  3362  0B73                     l4474:	
  3363                           
  3364                           ;main.c: 119:       };main.c: 120:     }
  3365  0B73  3059               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  3366  0B74  1283               	bcf	3,5	;RP0=0, select bank0
  3367  0B75  1303               	bcf	3,6	;RP1=0, select bank0
  3368  0B76  00BC               	movwf	UART_Write_Text@text
  3369  0B77  3080               	movlw	128
  3370  0B78  00BD               	movwf	UART_Write_Text@text+1
  3371  0B79  160A  118A  20FD  120A  158A  	fcall	_UART_Write_Text
  3372                           
  3373                           ;main.c: 121:   }
  3374  0B7E  160A  118A  2048  120A  158A  	fcall	_print_json
  3375  0B83                     l4476:	
  3376                           
  3377                           ;main.c: 122: 
  3378  0B83  2C62               	goto	l144
  3379  0B84                     l4480:	
  3380                           
  3381                           ;main.c: 124:     INTF=0;
  3382  0B84  0861               	movf	(read_from_MR@output^(0+128)+2),w
  3383  0B85  00D1               	movwf	??_read_from_MR^(0+128)
  3384  0B86  01D2               	clrf	(??_read_from_MR^(0+128)+1)
  3385  0B87  0851               	movf	??_read_from_MR^(0+128),w
  3386  0B88  1283               	bcf	3,5	;RP0=0, select bank0
  3387  0B89  1303               	bcf	3,6	;RP1=0, select bank0
  3388  0B8A  00BB               	movwf	___wmul@multiplier
  3389  0B8B  1683               	bsf	3,5	;RP0=1, select bank1
  3390  0B8C  1303               	bcf	3,6	;RP1=0, select bank1
  3391  0B8D  0852               	movf	(??_read_from_MR+1)^(0+128),w
  3392  0B8E  1283               	bcf	3,5	;RP0=0, select bank0
  3393  0B8F  1303               	bcf	3,6	;RP1=0, select bank0
  3394  0B90  00BC               	movwf	___wmul@multiplier+1
  3395  0B91  30E8               	movlw	232
  3396  0B92  00BD               	movwf	___wmul@multiplicand
  3397  0B93  3003               	movlw	3
  3398  0B94  00BE               	movwf	___wmul@multiplicand+1
  3399  0B95  160A  158A  25FB  120A  158A  	fcall	___wmul
  3400  0B9A  1283               	bcf	3,5	;RP0=0, select bank0
  3401  0B9B  1303               	bcf	3,6	;RP1=0, select bank0
  3402  0B9C  083B               	movf	?___wmul,w
  3403  0B9D  1683               	bsf	3,5	;RP0=1, select bank1
  3404  0B9E  1303               	bcf	3,6	;RP1=0, select bank1
  3405  0B9F  00D3               	movwf	(??_read_from_MR+2)^(0+128)
  3406  0BA0  1283               	bcf	3,5	;RP0=0, select bank0
  3407  0BA1  1303               	bcf	3,6	;RP1=0, select bank0
  3408  0BA2  083C               	movf	?___wmul+1,w
  3409  0BA3  1683               	bsf	3,5	;RP0=1, select bank1
  3410  0BA4  1303               	bcf	3,6	;RP1=0, select bank1
  3411  0BA5  00D4               	movwf	((??_read_from_MR+2)^(0+128)+1)
  3412  0BA6  0862               	movf	(read_from_MR@output^(0+128)+3),w
  3413  0BA7  00D5               	movwf	(??_read_from_MR+4)^(0+128)
  3414  0BA8  01D6               	clrf	((??_read_from_MR+4)^(0+128)+1)
  3415  0BA9  0855               	movf	(??_read_from_MR+4)^(0+128),w
  3416  0BAA  1283               	bcf	3,5	;RP0=0, select bank0
  3417  0BAB  1303               	bcf	3,6	;RP1=0, select bank0
  3418  0BAC  00BB               	movwf	___wmul@multiplier
  3419  0BAD  1683               	bsf	3,5	;RP0=1, select bank1
  3420  0BAE  1303               	bcf	3,6	;RP1=0, select bank1
  3421  0BAF  0856               	movf	(??_read_from_MR+5)^(0+128),w
  3422  0BB0  1283               	bcf	3,5	;RP0=0, select bank0
  3423  0BB1  1303               	bcf	3,6	;RP1=0, select bank0
  3424  0BB2  00BC               	movwf	___wmul@multiplier+1
  3425  0BB3  3064               	movlw	100
  3426  0BB4  00BD               	movwf	___wmul@multiplicand
  3427  0BB5  3000               	movlw	0
  3428  0BB6  00BE               	movwf	___wmul@multiplicand+1
  3429  0BB7  160A  158A  25FB  120A  158A  	fcall	___wmul
  3430  0BBC  1283               	bcf	3,5	;RP0=0, select bank0
  3431  0BBD  1303               	bcf	3,6	;RP1=0, select bank0
  3432  0BBE  083B               	movf	?___wmul,w
  3433  0BBF  1683               	bsf	3,5	;RP0=1, select bank1
  3434  0BC0  1303               	bcf	3,6	;RP1=0, select bank1
  3435  0BC1  0753               	addwf	(??_read_from_MR+2)^(0+128),w
  3436  0BC2  00D7               	movwf	(??_read_from_MR+6)^(0+128)
  3437  0BC3  1283               	bcf	3,5	;RP0=0, select bank0
  3438  0BC4  1303               	bcf	3,6	;RP1=0, select bank0
  3439  0BC5  083C               	movf	?___wmul+1,w
  3440  0BC6  1803               	skipnc
  3441  0BC7  0A3C               	incf	?___wmul+1,w
  3442  0BC8  1683               	bsf	3,5	;RP0=1, select bank1
  3443  0BC9  1303               	bcf	3,6	;RP1=0, select bank1
  3444  0BCA  0754               	addwf	(??_read_from_MR+3)^(0+128),w
  3445  0BCB  00D8               	movwf	(??_read_from_MR+7)^(0+128)
  3446  0BCC  0863               	movf	(read_from_MR@output^(0+128)+4),w
  3447  0BCD  00D9               	movwf	(??_read_from_MR+8)^(0+128)
  3448  0BCE  01DA               	clrf	((??_read_from_MR+8)^(0+128)+1)
  3449  0BCF  0859               	movf	(??_read_from_MR+8)^(0+128),w
  3450  0BD0  1283               	bcf	3,5	;RP0=0, select bank0
  3451  0BD1  1303               	bcf	3,6	;RP1=0, select bank0
  3452  0BD2  00BB               	movwf	___wmul@multiplier
  3453  0BD3  1683               	bsf	3,5	;RP0=1, select bank1
  3454  0BD4  1303               	bcf	3,6	;RP1=0, select bank1
  3455  0BD5  085A               	movf	(??_read_from_MR+9)^(0+128),w
  3456  0BD6  1283               	bcf	3,5	;RP0=0, select bank0
  3457  0BD7  1303               	bcf	3,6	;RP1=0, select bank0
  3458  0BD8  00BC               	movwf	___wmul@multiplier+1
  3459  0BD9  300A               	movlw	10
  3460  0BDA  00BD               	movwf	___wmul@multiplicand
  3461  0BDB  3000               	movlw	0
  3462  0BDC  00BE               	movwf	___wmul@multiplicand+1
  3463  0BDD  160A  158A  25FB  120A  158A  	fcall	___wmul
  3464  0BE2  1283               	bcf	3,5	;RP0=0, select bank0
  3465  0BE3  1303               	bcf	3,6	;RP1=0, select bank0
  3466  0BE4  083B               	movf	?___wmul,w
  3467  0BE5  1683               	bsf	3,5	;RP0=1, select bank1
  3468  0BE6  1303               	bcf	3,6	;RP1=0, select bank1
  3469  0BE7  0757               	addwf	(??_read_from_MR+6)^(0+128),w
  3470  0BE8  00DB               	movwf	(??_read_from_MR+10)^(0+128)
  3471  0BE9  1283               	bcf	3,5	;RP0=0, select bank0
  3472  0BEA  1303               	bcf	3,6	;RP1=0, select bank0
  3473  0BEB  083C               	movf	?___wmul+1,w
  3474  0BEC  1803               	skipnc
  3475  0BED  0A3C               	incf	?___wmul+1,w
  3476  0BEE  1683               	bsf	3,5	;RP0=1, select bank1
  3477  0BEF  1303               	bcf	3,6	;RP1=0, select bank1
  3478  0BF0  0758               	addwf	(??_read_from_MR+7)^(0+128),w
  3479  0BF1  00DC               	movwf	(??_read_from_MR+11)^(0+128)
  3480  0BF2  0864               	movf	(read_from_MR@output^(0+128)+5),w
  3481  0BF3  075B               	addwf	(??_read_from_MR+10)^(0+128),w
  3482  0BF4  00DD               	movwf	(??_read_from_MR+12)^(0+128)
  3483  0BF5  3000               	movlw	0
  3484  0BF6  1803               	skipnc
  3485  0BF7  3001               	movlw	1
  3486  0BF8  075C               	addwf	(??_read_from_MR+11)^(0+128),w
  3487  0BF9  00DE               	movwf	(??_read_from_MR+13)^(0+128)
  3488  0BFA  085D               	movf	(??_read_from_MR+12)^(0+128),w
  3489  0BFB  3EB0               	addlw	176
  3490  0BFC  00E7               	movwf	read_from_MR@int_input^(0+128)
  3491  0BFD  085E               	movf	(??_read_from_MR+13)^(0+128),w
  3492  0BFE  1803               	skipnc
  3493  0BFF  3E01               	addlw	1
  3494  0C00  3E2F               	addlw	47
  3495  0C01  00E8               	movwf	(read_from_MR@int_input+1)^(0+128)
  3496  0C02                     l4482:	
  3497                           
  3498                           ;main.c: 125:     if (running==1)
  3499  0C02  0868               	movf	(read_from_MR@int_input+1)^(0+128),w
  3500  0C03  00BF               	movwf	(UART_Write_Decimal@Dec+1)^(0+128)
  3501  0C04  0867               	movf	read_from_MR@int_input^(0+128),w
  3502  0C05  00BE               	movwf	UART_Write_Decimal@Dec^(0+128)
  3503  0C06  160A  158A  2495  120A  158A  	fcall	_UART_Write_Decimal
  3504  0C0B                     l4484:	
  3505                           
  3506                           ;main.c: 126:     {
  3507  0C0B  3095               	movlw	(low (((STR_7+16)-__stringbase)| (0+32768)))& (0+255)
  3508  0C0C  1283               	bcf	3,5	;RP0=0, select bank0
  3509  0C0D  1303               	bcf	3,6	;RP1=0, select bank0
  3510  0C0E  00BC               	movwf	UART_Write_Text@text
  3511  0C0F  3080               	movlw	128
  3512  0C10  00BD               	movwf	UART_Write_Text@text+1
  3513  0C11  160A  118A  20FD  120A  158A  	fcall	_UART_Write_Text
  3514                           
  3515                           ;main.c: 127:       running = 0;
  3516  0C16  2C4D               	goto	l4500
  3517  0C17                     l4486:	
  3518                           
  3519                           ;main.c: 130:     }else{
  3520  0C17  30C9               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  3521  0C18  1283               	bcf	3,5	;RP0=0, select bank0
  3522  0C19  1303               	bcf	3,6	;RP1=0, select bank0
  3523  0C1A  00BC               	movwf	UART_Write_Text@text
  3524  0C1B  3080               	movlw	128
  3525  0C1C  00BD               	movwf	UART_Write_Text@text+1
  3526  0C1D  160A  118A  20FD  120A  158A  	fcall	_UART_Write_Text
  3527  0C22                     l4488:	
  3528                           
  3529                           ;main.c: 131:       running = 1;
  3530  0C22  1683               	bsf	3,5	;RP0=1, select bank1
  3531  0C23  1303               	bcf	3,6	;RP1=0, select bank1
  3532  0C24  0868               	movf	(read_from_MR@int_input+1)^(0+128),w
  3533  0C25  00CC               	movwf	(read_from_MR@calibracao+1)^(0+128)
  3534  0C26  0867               	movf	read_from_MR@int_input^(0+128),w
  3535  0C27  00CB               	movwf	read_from_MR@calibracao^(0+128)
  3536                           
  3537                           ;main.c: 132:       UART_Write_Text("Waking Up!");
  3538  0C28  2B83               	goto	l4476
  3539  0C29                     l4490:	
  3540                           
  3541                           ;main.c: 134:     }
  3542  0C29  30B9               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  3543  0C2A  1283               	bcf	3,5	;RP0=0, select bank0
  3544  0C2B  1303               	bcf	3,6	;RP1=0, select bank0
  3545  0C2C  00BC               	movwf	UART_Write_Text@text
  3546  0C2D  3080               	movlw	128
  3547  0C2E  00BD               	movwf	UART_Write_Text@text+1
  3548  0C2F  160A  118A  20FD  120A  158A  	fcall	_UART_Write_Text
  3549  0C34                     l4492:	
  3550                           
  3551                           ;main.c: 135:   }
  3552  0C34  1683               	bsf	3,5	;RP0=1, select bank1
  3553  0C35  1303               	bcf	3,6	;RP1=0, select bank1
  3554  0C36  0868               	movf	(read_from_MR@int_input+1)^(0+128),w
  3555  0C37  00CE               	movwf	((read_from_MR@calibracao+1)^(0+128)+2)
  3556  0C38  0867               	movf	read_from_MR@int_input^(0+128),w
  3557  0C39  00CD               	movwf	(read_from_MR@calibracao^(0+128)+2)
  3558                           
  3559                           ;main.c: 136: }
  3560  0C3A  2B83               	goto	l4476
  3561  0C3B                     l4494:	
  3562                           
  3563                           ;main.c: 138: unsigned char teclado(unsigned int timeout)
  3564  0C3B  3085               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  3565  0C3C  1283               	bcf	3,5	;RP0=0, select bank0
  3566  0C3D  1303               	bcf	3,6	;RP1=0, select bank0
  3567  0C3E  00BC               	movwf	UART_Write_Text@text
  3568  0C3F  3080               	movlw	128
  3569  0C40  00BD               	movwf	UART_Write_Text@text+1
  3570  0C41  160A  118A  20FD  120A  158A  	fcall	_UART_Write_Text
  3571  0C46                     l4496:	
  3572                           
  3573                           ;main.c: 139: {
  3574  0C46  1683               	bsf	3,5	;RP0=1, select bank1
  3575  0C47  1303               	bcf	3,6	;RP1=0, select bank1
  3576  0C48  0868               	movf	(read_from_MR@int_input+1)^(0+128),w
  3577  0C49  00D0               	movwf	((read_from_MR@calibracao+1)^(0+128)+4)
  3578  0C4A  0867               	movf	read_from_MR@int_input^(0+128),w
  3579  0C4B  00CF               	movwf	(read_from_MR@calibracao^(0+128)+4)
  3580                           
  3581                           ;main.c: 140:   unsigned int to=0;
  3582  0C4C  2B83               	goto	l4476
  3583  0C4D                     l4500:	
  3584  0C4D  1683               	bsf	3,5	;RP0=1, select bank1
  3585  0C4E  1303               	bcf	3,6	;RP1=0, select bank1
  3586  0C4F  0860               	movf	(read_from_MR@output^(0+128)+1),w
  3587  0C50  00D1               	movwf	??_read_from_MR^(0+128)
  3588  0C51  01D2               	clrf	(??_read_from_MR^(0+128)+1)
  3589                           
  3590                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3591                           ; Switch size 1, requested type "simple"
  3592                           ; Number of cases is 1, Range of values is 0 to 0
  3593                           ; switch strategies available:
  3594                           ; Name         Instructions Cycles
  3595                           ; simple_byte            4     3 (average)
  3596                           ; direct_byte           11     8 (fixed)
  3597                           ; jumptable            260     6 (fixed)
  3598                           ;	Chosen strategy is simple_byte
  3599  0C52  0852               	movf	(??_read_from_MR+1)^(0+128),w
  3600  0C53  3A00               	xorlw	0	; case 0
  3601  0C54  1903               	skipnz
  3602  0C55  2C57               	goto	l4930
  3603  0C56  2B83               	goto	l4476
  3604  0C57                     l4930:	
  3605                           
  3606                           ; Switch size 1, requested type "simple"
  3607                           ; Number of cases is 3, Range of values is 48 to 50
  3608                           ; switch strategies available:
  3609                           ; Name         Instructions Cycles
  3610                           ; simple_byte           10     6 (average)
  3611                           ; direct_byte           20    11 (fixed)
  3612                           ; jumptable            263     9 (fixed)
  3613                           ;	Chosen strategy is simple_byte
  3614  0C57  0851               	movf	??_read_from_MR^(0+128),w
  3615  0C58  3A30               	xorlw	48	; case 48
  3616  0C59  1903               	skipnz
  3617  0C5A  2C17               	goto	l4486
  3618  0C5B  3A01               	xorlw	1	; case 49
  3619  0C5C  1903               	skipnz
  3620  0C5D  2C29               	goto	l4490
  3621  0C5E  3A03               	xorlw	3	; case 50
  3622  0C5F  1903               	skipnz
  3623  0C60  2C3B               	goto	l4494
  3624  0C61  2B83               	goto	l4476
  3625  0C62                     l144:	
  3626  0C62  0008               	return
  3627  0C63                     __end_of_read_from_MR:	
  3628                           
  3629                           	psect	text5
  3630  1DFB                     __ptext5:	
  3631 ;; *************** function ___wmul *****************
  3632 ;; Defined at:
  3633 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  3634 ;; Parameters:    Size  Location     Type
  3635 ;;  multiplier      2   27[BANK0 ] unsigned int 
  3636 ;;  multiplicand    2   29[BANK0 ] unsigned int 
  3637 ;; Auto vars:     Size  Location     Type
  3638 ;;  product         2    0[BANK1 ] unsigned int 
  3639 ;; Return value:  Size  Location     Type
  3640 ;;                  2   27[BANK0 ] unsigned int 
  3641 ;; Registers used:
  3642 ;;		wreg, status,2, status,0
  3643 ;; Tracked objects:
  3644 ;;		On entry : 0/0
  3645 ;;		On exit  : 0/0
  3646 ;;		Unchanged: 0/0
  3647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3648 ;;      Params:         0       4       0       0       0
  3649 ;;      Locals:         0       0       2       0       0
  3650 ;;      Temps:          0       0       0       0       0
  3651 ;;      Totals:         0       4       2       0       0
  3652 ;;Total ram usage:        6 bytes
  3653 ;; Hardware stack levels used:    1
  3654 ;; Hardware stack levels required when called:    4
  3655 ;; This function calls:
  3656 ;;		Nothing
  3657 ;; This function is called by:
  3658 ;;		_read_from_MR
  3659 ;;		_main
  3660 ;; This function uses a non-reentrant model
  3661 ;;
  3662                           
  3663                           
  3664                           ;psect for function ___wmul
  3665  1DFB                     ___wmul:	
  3666  1DFB                     l4388:	
  3667                           ;incstack = 0
  3668                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3669                           
  3670  1DFB  1683               	bsf	3,5	;RP0=1, select bank1
  3671  1DFC  1303               	bcf	3,6	;RP1=0, select bank1
  3672  1DFD  01A0               	clrf	___wmul@product^(0+128)
  3673  1DFE  01A1               	clrf	(___wmul@product+1)^(0+128)
  3674  1DFF                     l4390:	
  3675  1DFF  1283               	bcf	3,5	;RP0=0, select bank0
  3676  1E00  1C3B               	btfss	___wmul@multiplier,0
  3677  1E01  2E03               	goto	u6471
  3678  1E02  2E04               	goto	u6470
  3679  1E03                     u6471:	
  3680  1E03  2E10               	goto	l498
  3681  1E04                     u6470:	
  3682  1E04                     l4392:	
  3683  1E04  083D               	movf	___wmul@multiplicand,w
  3684  1E05  1683               	bsf	3,5	;RP0=1, select bank1
  3685  1E06  1303               	bcf	3,6	;RP1=0, select bank1
  3686  1E07  07A0               	addwf	___wmul@product^(0+128),f
  3687  1E08  1803               	skipnc
  3688  1E09  0AA1               	incf	(___wmul@product+1)^(0+128),f
  3689  1E0A  1283               	bcf	3,5	;RP0=0, select bank0
  3690  1E0B  1303               	bcf	3,6	;RP1=0, select bank0
  3691  1E0C  083E               	movf	___wmul@multiplicand+1,w
  3692  1E0D  1683               	bsf	3,5	;RP0=1, select bank1
  3693  1E0E  1303               	bcf	3,6	;RP1=0, select bank1
  3694  1E0F  07A1               	addwf	(___wmul@product+1)^(0+128),f
  3695  1E10                     l498:	
  3696  1E10  3001               	movlw	1
  3697  1E11  1283               	bcf	3,5	;RP0=0, select bank0
  3698  1E12                     u6485:	
  3699  1E12  1003               	clrc
  3700  1E13  0DBD               	rlf	___wmul@multiplicand,f
  3701  1E14  0DBE               	rlf	___wmul@multiplicand+1,f
  3702  1E15  3EFF               	addlw	-1
  3703  1E16  1D03               	skipz
  3704  1E17  2E12               	goto	u6485
  3705  1E18                     l4394:	
  3706  1E18  3001               	movlw	1
  3707  1E19                     u6495:	
  3708  1E19  1003               	clrc
  3709  1E1A  0CBC               	rrf	___wmul@multiplier+1,f
  3710  1E1B  0CBB               	rrf	___wmul@multiplier,f
  3711  1E1C  3EFF               	addlw	-1
  3712  1E1D  1D03               	skipz
  3713  1E1E  2E19               	goto	u6495
  3714  1E1F                     l4396:	
  3715  1E1F  083B               	movf	___wmul@multiplier,w
  3716  1E20  043C               	iorwf	___wmul@multiplier+1,w
  3717  1E21  1D03               	btfss	3,2
  3718  1E22  2E24               	goto	u6501
  3719  1E23  2E25               	goto	u6500
  3720  1E24                     u6501:	
  3721  1E24  2DFF               	goto	l4390
  3722  1E25                     u6500:	
  3723  1E25                     l4398:	
  3724  1E25  1683               	bsf	3,5	;RP0=1, select bank1
  3725  1E26  1303               	bcf	3,6	;RP1=0, select bank1
  3726  1E27  0821               	movf	(___wmul@product+1)^(0+128),w
  3727  1E28  1283               	bcf	3,5	;RP0=0, select bank0
  3728  1E29  1303               	bcf	3,6	;RP1=0, select bank0
  3729  1E2A  00BC               	movwf	?___wmul+1
  3730  1E2B  1683               	bsf	3,5	;RP0=1, select bank1
  3731  1E2C  1303               	bcf	3,6	;RP1=0, select bank1
  3732  1E2D  0820               	movf	___wmul@product^(0+128),w
  3733  1E2E  1283               	bcf	3,5	;RP0=0, select bank0
  3734  1E2F  1303               	bcf	3,6	;RP1=0, select bank0
  3735  1E30  00BB               	movwf	?___wmul
  3736  1E31                     l500:	
  3737  1E31  0008               	return
  3738  1E32                     __end_of___wmul:	
  3739                           
  3740                           	psect	text6
  3741  1C95                     __ptext6:	
  3742 ;; *************** function _UART_Write_Decimal *****************
  3743 ;; Defined at:
  3744 ;;		line 64 in file "UART.c"
  3745 ;; Parameters:    Size  Location     Type
  3746 ;;  Dec             2   30[BANK1 ] int 
  3747 ;; Auto vars:     Size  Location     Type
  3748 ;;  string         10   33[BANK1 ] unsigned char [10]
  3749 ;; Return value:  Size  Location     Type
  3750 ;;                  1    wreg      void 
  3751 ;; Registers used:
  3752 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3753 ;; Tracked objects:
  3754 ;;		On entry : 0/0
  3755 ;;		On exit  : 0/0
  3756 ;;		Unchanged: 0/0
  3757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3758 ;;      Params:         0       0       2       0       0
  3759 ;;      Locals:         0       0      10       0       0
  3760 ;;      Temps:          0       0       1       0       0
  3761 ;;      Totals:         0       0      13       0       0
  3762 ;;Total ram usage:       13 bytes
  3763 ;; Hardware stack levels used:    1
  3764 ;; Hardware stack levels required when called:    6
  3765 ;; This function calls:
  3766 ;;		_UART_Write_Text
  3767 ;;		_sprintf
  3768 ;; This function is called by:
  3769 ;;		_read_from_MR
  3770 ;; This function uses a non-reentrant model
  3771 ;;
  3772                           
  3773                           
  3774                           ;psect for function _UART_Write_Decimal
  3775  1C95                     _UART_Write_Decimal:	
  3776  1C95                     l4330:	
  3777                           ;incstack = 0
  3778                           ; Regs used in _UART_Write_Decimal: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3779                           
  3780                           
  3781                           ;UART.c: 64: void UART_Write_Decimal(int Dec);UART.c: 65: {;UART.c: 66:   char string[10
      +                          ];;UART.c: 67:   sprintf(string,"%d", Dec);
  3782  1C95  30C1               	movlw	(low (UART_Write_Decimal@string| 0))& (0+255)
  3783  1C96  1683               	bsf	3,5	;RP0=1, select bank1
  3784  1C97  1303               	bcf	3,6	;RP1=0, select bank1
  3785  1C98  00AA               	movwf	sprintf@sp^(0+128)
  3786  1C99  3000               	movlw	0
  3787  1C9A  00AB               	movwf	(sprintf@sp+1)^(0+128)
  3788  1C9B  30EC               	movlw	(low ((STR_20-__stringbase)| (0+32768)))& (0+255)
  3789  1C9C  00C0               	movwf	??_UART_Write_Decimal^(0+128)
  3790  1C9D  0840               	movf	??_UART_Write_Decimal^(0+128),w
  3791  1C9E  00AC               	movwf	sprintf@f^(0+128)
  3792  1C9F  083F               	movf	(UART_Write_Decimal@Dec+1)^(0+128),w
  3793  1CA0  00AE               	movwf	((?_sprintf+1)^(0+128)+3)
  3794  1CA1  083E               	movf	UART_Write_Decimal@Dec^(0+128),w
  3795  1CA2  00AD               	movwf	(?_sprintf^(0+128)+3)
  3796  1CA3  120A  158A  2246  160A  158A  	fcall	_sprintf
  3797                           
  3798                           ;UART.c: 68:   UART_Write_Text(string);
  3799  1CA8  30C1               	movlw	(low (UART_Write_Decimal@string| 0))& (0+255)
  3800  1CA9  1283               	bcf	3,5	;RP0=0, select bank0
  3801  1CAA  1303               	bcf	3,6	;RP1=0, select bank0
  3802  1CAB  00BC               	movwf	UART_Write_Text@text
  3803  1CAC  3000               	movlw	0
  3804  1CAD  00BD               	movwf	UART_Write_Text@text+1
  3805  1CAE  160A  118A  20FD  160A  158A  	fcall	_UART_Write_Text
  3806  1CB3                     l339:	
  3807  1CB3  0008               	return
  3808  1CB4                     __end_of_UART_Write_Decimal:	
  3809                           
  3810                           	psect	text7
  3811  1D8F                     __ptext7:	
  3812 ;; *************** function _UART_Read_Text *****************
  3813 ;; Defined at:
  3814 ;;		line 57 in file "UART.c"
  3815 ;; Parameters:    Size  Location     Type
  3816 ;;  Output          1    wreg     PTR unsigned char 
  3817 ;;		 -> read_from_MR@output(8), 
  3818 ;;  length          2   27[BANK0 ] unsigned int 
  3819 ;; Auto vars:     Size  Location     Type
  3820 ;;  Output          1    2[BANK1 ] PTR unsigned char 
  3821 ;;		 -> read_from_MR@output(8), 
  3822 ;;  i               2    3[BANK1 ] int 
  3823 ;;  i               2    0        unsigned int 
  3824 ;; Return value:  Size  Location     Type
  3825 ;;                  1    wreg      void 
  3826 ;; Registers used:
  3827 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3828 ;; Tracked objects:
  3829 ;;		On entry : 0/0
  3830 ;;		On exit  : 0/0
  3831 ;;		Unchanged: 0/0
  3832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3833 ;;      Params:         0       2       0       0       0
  3834 ;;      Locals:         0       0       5       0       0
  3835 ;;      Temps:          0       2       0       0       0
  3836 ;;      Totals:         0       4       5       0       0
  3837 ;;Total ram usage:        9 bytes
  3838 ;; Hardware stack levels used:    1
  3839 ;; Hardware stack levels required when called:    5
  3840 ;; This function calls:
  3841 ;;		_UART_Read
  3842 ;; This function is called by:
  3843 ;;		_read_from_MR
  3844 ;; This function uses a non-reentrant model
  3845 ;;
  3846                           
  3847                           
  3848                           ;psect for function _UART_Read_Text
  3849  1D8F                     _UART_Read_Text:	
  3850                           
  3851                           ;incstack = 0
  3852                           ; Regs used in _UART_Read_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3853                           ;UART_Read_Text@Output stored from wreg
  3854  1D8F  1683               	bsf	3,5	;RP0=1, select bank1
  3855  1D90  1303               	bcf	3,6	;RP1=0, select bank1
  3856  1D91  00A2               	movwf	UART_Read_Text@Output^(0+128)
  3857  1D92                     l4322:	
  3858                           
  3859                           ;UART.c: 60:   for(int i=0;i<length ;i++){
  3860  1D92  01A3               	clrf	UART_Read_Text@i_462^(0+128)
  3861  1D93  01A4               	clrf	(UART_Read_Text@i_462+1)^(0+128)
  3862  1D94  2DB1               	goto	l4328
  3863  1D95                     l4324:	
  3864                           
  3865                           ;UART.c: 61:     Output[i] = UART_Read();
  3866  1D95  160A  158A  23D5  160A  158A  	fcall	_UART_Read
  3867  1D9A  1283               	bcf	3,5	;RP0=0, select bank0
  3868  1D9B  1303               	bcf	3,6	;RP1=0, select bank0
  3869  1D9C  00BD               	movwf	??_UART_Read_Text
  3870  1D9D  1683               	bsf	3,5	;RP0=1, select bank1
  3871  1D9E  1303               	bcf	3,6	;RP1=0, select bank1
  3872  1D9F  0823               	movf	UART_Read_Text@i_462^(0+128),w
  3873  1DA0  0722               	addwf	UART_Read_Text@Output^(0+128),w
  3874  1DA1  1283               	bcf	3,5	;RP0=0, select bank0
  3875  1DA2  1303               	bcf	3,6	;RP1=0, select bank0
  3876  1DA3  00BE               	movwf	??_UART_Read_Text+1
  3877  1DA4  083E               	movf	??_UART_Read_Text+1,w
  3878  1DA5  0084               	movwf	4
  3879  1DA6  083D               	movf	??_UART_Read_Text,w
  3880  1DA7  1383               	bcf	3,7	;select IRP bank0
  3881  1DA8  0080               	movwf	0
  3882  1DA9                     l4326:	
  3883                           
  3884                           ;UART.c: 62:   }
  3885  1DA9  3001               	movlw	1
  3886  1DAA  1683               	bsf	3,5	;RP0=1, select bank1
  3887  1DAB  1303               	bcf	3,6	;RP1=0, select bank1
  3888  1DAC  07A3               	addwf	UART_Read_Text@i_462^(0+128),f
  3889  1DAD  1803               	skipnc
  3890  1DAE  0AA4               	incf	(UART_Read_Text@i_462+1)^(0+128),f
  3891  1DAF  3000               	movlw	0
  3892  1DB0  07A4               	addwf	(UART_Read_Text@i_462+1)^(0+128),f
  3893  1DB1                     l4328:	
  3894  1DB1  1283               	bcf	3,5	;RP0=0, select bank0
  3895  1DB2  1303               	bcf	3,6	;RP1=0, select bank0
  3896  1DB3  083C               	movf	UART_Read_Text@length+1,w
  3897  1DB4  1683               	bsf	3,5	;RP0=1, select bank1
  3898  1DB5  1303               	bcf	3,6	;RP1=0, select bank1
  3899  1DB6  0224               	subwf	(UART_Read_Text@i_462+1)^(0+128),w
  3900  1DB7  1D03               	skipz
  3901  1DB8  2DBF               	goto	u6385
  3902  1DB9  1283               	bcf	3,5	;RP0=0, select bank0
  3903  1DBA  1303               	bcf	3,6	;RP1=0, select bank0
  3904  1DBB  083B               	movf	UART_Read_Text@length,w
  3905  1DBC  1683               	bsf	3,5	;RP0=1, select bank1
  3906  1DBD  1303               	bcf	3,6	;RP1=0, select bank1
  3907  1DBE  0223               	subwf	UART_Read_Text@i_462^(0+128),w
  3908  1DBF                     u6385:	
  3909  1DBF  1C03               	skipc
  3910  1DC0  2DC2               	goto	u6381
  3911  1DC1  2DC3               	goto	u6380
  3912  1DC2                     u6381:	
  3913  1DC2  2D95               	goto	l4324
  3914  1DC3                     u6380:	
  3915  1DC3                     l336:	
  3916  1DC3  0008               	return
  3917  1DC4                     __end_of_UART_Read_Text:	
  3918                           
  3919                           	psect	text8
  3920  1BD5                     __ptext8:	
  3921 ;; *************** function _UART_Read *****************
  3922 ;; Defined at:
  3923 ;;		line 52 in file "UART.c"
  3924 ;; Parameters:    Size  Location     Type
  3925 ;;		None
  3926 ;; Auto vars:     Size  Location     Type
  3927 ;;		None
  3928 ;; Return value:  Size  Location     Type
  3929 ;;                  1    wreg      unsigned char 
  3930 ;; Registers used:
  3931 ;;		wreg
  3932 ;; Tracked objects:
  3933 ;;		On entry : 0/0
  3934 ;;		On exit  : 0/0
  3935 ;;		Unchanged: 0/0
  3936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3937 ;;      Params:         0       0       0       0       0
  3938 ;;      Locals:         0       0       0       0       0
  3939 ;;      Temps:          0       0       0       0       0
  3940 ;;      Totals:         0       0       0       0       0
  3941 ;;Total ram usage:        0 bytes
  3942 ;; Hardware stack levels used:    1
  3943 ;; Hardware stack levels required when called:    4
  3944 ;; This function calls:
  3945 ;;		Nothing
  3946 ;; This function is called by:
  3947 ;;		_UART_Read_Text
  3948 ;; This function uses a non-reentrant model
  3949 ;;
  3950                           
  3951                           
  3952                           ;psect for function _UART_Read
  3953  1BD5                     _UART_Read:	
  3954  1BD5                     l3880:	
  3955                           ;incstack = 0
  3956                           ; Regs used in _UART_Read: [wreg]
  3957                           
  3958  1BD5                     l327:	
  3959                           ;UART.c: 54:   while(!RCIF);
  3960                           
  3961  1BD5  1283               	bcf	3,5	;RP0=0, select bank0
  3962  1BD6  1303               	bcf	3,6	;RP1=0, select bank0
  3963  1BD7  1E8C               	btfss	12,5	;volatile
  3964  1BD8  2BDA               	goto	u5301
  3965  1BD9  2BDB               	goto	u5300
  3966  1BDA                     u5301:	
  3967  1BDA  2BD5               	goto	l327
  3968  1BDB                     u5300:	
  3969  1BDB                     l3882:	
  3970                           
  3971                           ;UART.c: 55:   return RCREG;
  3972  1BDB  081A               	movf	26,w	;volatile
  3973  1BDC                     l330:	
  3974  1BDC  0008               	return
  3975  1BDD                     __end_of_UART_Read:	
  3976                           
  3977                           	psect	text9
  3978  0901                     __ptext9:	
  3979 ;; *************** function _read_from_EPPROM *****************
  3980 ;; Defined at:
  3981 ;;		line 286 in file "main.c"
  3982 ;; Parameters:    Size  Location     Type
  3983 ;;		None
  3984 ;; Auto vars:     Size  Location     Type
  3985 ;;  data           10    7[BANK1 ] unsigned char [10]
  3986 ;; Return value:  Size  Location     Type
  3987 ;;                  1    wreg      void 
  3988 ;; Registers used:
  3989 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3990 ;; Tracked objects:
  3991 ;;		On entry : 0/0
  3992 ;;		On exit  : 0/0
  3993 ;;		Unchanged: 0/0
  3994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3995 ;;      Params:         0       0       0       0       0
  3996 ;;      Locals:         0       0      10       0       0
  3997 ;;      Temps:          0       0       2       0       0
  3998 ;;      Totals:         0       0      12       0       0
  3999 ;;Total ram usage:       12 bytes
  4000 ;; Hardware stack levels used:    1
  4001 ;; Hardware stack levels required when called:    6
  4002 ;; This function calls:
  4003 ;;		_I2C_Begin
  4004 ;;		_I2C_End
  4005 ;;		_I2C_Read
  4006 ;;		_I2C_Write
  4007 ;;		_UART_Write_Text
  4008 ;; This function is called by:
  4009 ;;		_main
  4010 ;; This function uses a non-reentrant model
  4011 ;;
  4012                           
  4013                           
  4014                           ;psect for function _read_from_EPPROM
  4015  0901                     _read_from_EPPROM:	
  4016  0901                     l4614:	
  4017                           ;incstack = 0
  4018                           ; Regs used in _read_from_EPPROM: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4019                           
  4020                           
  4021                           ;main.c: 288:   UART_Init(9600);;main.c: 290:   ADC_Init();
  4022  0901  160A  158A  23EE  120A  158A  	fcall	_I2C_Begin
  4023                           
  4024                           ;main.c: 291:   PWM_Initialize();
  4025  0906  30A0               	movlw	160
  4026  0907  1283               	bcf	3,5	;RP0=0, select bank0
  4027  0908  1303               	bcf	3,6	;RP1=0, select bank0
  4028  0909  00BB               	movwf	I2C_Write@data
  4029  090A  3000               	movlw	0
  4030  090B  00BC               	movwf	I2C_Write@data+1
  4031  090C  160A  158A  2400  120A  158A  	fcall	_I2C_Write
  4032                           
  4033                           ;main.c: 293: 
  4034  0911  3001               	movlw	1
  4035  0912  1283               	bcf	3,5	;RP0=0, select bank0
  4036  0913  1303               	bcf	3,6	;RP1=0, select bank0
  4037  0914  00BB               	movwf	I2C_Write@data
  4038  0915  3000               	movlw	0
  4039  0916  00BC               	movwf	I2C_Write@data+1
  4040  0917  160A  158A  2400  120A  158A  	fcall	_I2C_Write
  4041                           
  4042                           ;main.c: 295:   PEIE=1;
  4043  091C  160A  158A  23EE  120A  158A  	fcall	_I2C_Begin
  4044                           
  4045                           ;main.c: 296:   INTE = 1;
  4046  0921  30A0               	movlw	160
  4047  0922  1283               	bcf	3,5	;RP0=0, select bank0
  4048  0923  1303               	bcf	3,6	;RP1=0, select bank0
  4049  0924  00BB               	movwf	I2C_Write@data
  4050  0925  3000               	movlw	0
  4051  0926  00BC               	movwf	I2C_Write@data+1
  4052  0927  160A  158A  2400  120A  158A  	fcall	_I2C_Write
  4053                           
  4054                           ;main.c: 298: 
  4055  092C  1683               	bsf	3,5	;RP0=1, select bank1
  4056  092D  1303               	bcf	3,6	;RP1=0, select bank1
  4057  092E  0827               	movf	read_from_EPPROM@data^(0+128),w
  4058  092F  00A5               	movwf	??_read_from_EPPROM^(0+128)
  4059  0930  01A6               	clrf	(??_read_from_EPPROM^(0+128)+1)
  4060  0931  0825               	movf	??_read_from_EPPROM^(0+128),w
  4061  0932  1283               	bcf	3,5	;RP0=0, select bank0
  4062  0933  1303               	bcf	3,6	;RP1=0, select bank0
  4063  0934  00BB               	movwf	I2C_Read@ack
  4064  0935  1683               	bsf	3,5	;RP0=1, select bank1
  4065  0936  1303               	bcf	3,6	;RP1=0, select bank1
  4066  0937  0826               	movf	(??_read_from_EPPROM+1)^(0+128),w
  4067  0938  1283               	bcf	3,5	;RP0=0, select bank0
  4068  0939  1303               	bcf	3,6	;RP1=0, select bank0
  4069  093A  00BC               	movwf	I2C_Read@ack+1
  4070  093B  160A  158A  24B4  120A  158A  	fcall	_I2C_Read
  4071                           
  4072                           ;main.c: 299:   CCP1CON = 0X0F;
  4073  0940  160A  158A  23F7  120A  158A  	fcall	_I2C_End
  4074  0945                     l4616:	
  4075                           
  4076                           ;main.c: 300:   PR2 = 0x21;
  4077  0945  30A7               	movlw	(low (read_from_EPPROM@data| 0))& (0+255)
  4078  0946  1283               	bcf	3,5	;RP0=0, select bank0
  4079  0947  1303               	bcf	3,6	;RP1=0, select bank0
  4080  0948  00BC               	movwf	UART_Write_Text@text
  4081  0949  3000               	movlw	0
  4082  094A  00BD               	movwf	UART_Write_Text@text+1
  4083  094B  160A  118A  20FD  120A  158A  	fcall	_UART_Write_Text
  4084  0950                     l214:	
  4085  0950  0008               	return
  4086  0951                     __end_of_read_from_EPPROM:	
  4087                           
  4088                           	psect	text10
  4089  1C00                     __ptext10:	
  4090 ;; *************** function _I2C_Write *****************
  4091 ;; Defined at:
  4092 ;;		line 37 in file "I2C.c"
  4093 ;; Parameters:    Size  Location     Type
  4094 ;;  data            2   27[BANK0 ] unsigned int 
  4095 ;; Auto vars:     Size  Location     Type
  4096 ;;		None
  4097 ;; Return value:  Size  Location     Type
  4098 ;;                  1    wreg      void 
  4099 ;; Registers used:
  4100 ;;		wreg, status,2, status,0, pclath, cstack
  4101 ;; Tracked objects:
  4102 ;;		On entry : 0/0
  4103 ;;		On exit  : 0/0
  4104 ;;		Unchanged: 0/0
  4105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4106 ;;      Params:         0       2       0       0       0
  4107 ;;      Locals:         0       0       0       0       0
  4108 ;;      Temps:          0       0       0       0       0
  4109 ;;      Totals:         0       2       0       0       0
  4110 ;;Total ram usage:        2 bytes
  4111 ;; Hardware stack levels used:    1
  4112 ;; Hardware stack levels required when called:    5
  4113 ;; This function calls:
  4114 ;;		_I2C_Hold
  4115 ;; This function is called by:
  4116 ;;		_write_to_EPPROM
  4117 ;;		_read_from_EPPROM
  4118 ;; This function uses a non-reentrant model
  4119 ;;
  4120                           
  4121                           
  4122                           ;psect for function _I2C_Write
  4123  1C00                     _I2C_Write:	
  4124  1C00                     l4346:	
  4125                           ;incstack = 0
  4126                           ; Regs used in _I2C_Write: [wreg+status,2+status,0+pclath+cstack]
  4127                           
  4128                           
  4129                           ;I2C.c: 37: void I2C_Write(unsigned data);I2C.c: 38: {;I2C.c: 39:   I2C_Hold();
  4130  1C00  160A  158A  2416  160A  158A  	fcall	_I2C_Hold
  4131  1C05                     l4348:	
  4132                           
  4133                           ;I2C.c: 40:   SSPBUF = data;
  4134  1C05  1283               	bcf	3,5	;RP0=0, select bank0
  4135  1C06  1303               	bcf	3,6	;RP1=0, select bank0
  4136  1C07  083B               	movf	I2C_Write@data,w
  4137  1C08  0093               	movwf	19	;volatile
  4138  1C09                     l381:	
  4139  1C09  0008               	return
  4140  1C0A                     __end_of_I2C_Write:	
  4141                           
  4142                           	psect	text11
  4143  1CB4                     __ptext11:	
  4144 ;; *************** function _I2C_Read *****************
  4145 ;; Defined at:
  4146 ;;		line 43 in file "I2C.c"
  4147 ;; Parameters:    Size  Location     Type
  4148 ;;  ack             2   27[BANK0 ] unsigned short 
  4149 ;; Auto vars:     Size  Location     Type
  4150 ;;  incoming        2    0        unsigned short 
  4151 ;; Return value:  Size  Location     Type
  4152 ;;                  2   27[BANK0 ] unsigned short 
  4153 ;; Registers used:
  4154 ;;		wreg, status,2, status,0, pclath, cstack
  4155 ;; Tracked objects:
  4156 ;;		On entry : 0/0
  4157 ;;		On exit  : 0/0
  4158 ;;		Unchanged: 0/0
  4159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4160 ;;      Params:         0       2       0       0       0
  4161 ;;      Locals:         0       2       0       0       0
  4162 ;;      Temps:          0       0       0       0       0
  4163 ;;      Totals:         0       4       0       0       0
  4164 ;;Total ram usage:        4 bytes
  4165 ;; Hardware stack levels used:    1
  4166 ;; Hardware stack levels required when called:    5
  4167 ;; This function calls:
  4168 ;;		_I2C_Hold
  4169 ;; This function is called by:
  4170 ;;		_read_from_EPPROM
  4171 ;; This function uses a non-reentrant model
  4172 ;;
  4173                           
  4174                           
  4175                           ;psect for function _I2C_Read
  4176  1CB4                     _I2C_Read:	
  4177  1CB4                     l4354:	
  4178                           ;incstack = 0
  4179                           ; Regs used in _I2C_Read: [wreg+status,2+status,0+pclath+cstack]
  4180                           
  4181                           
  4182                           ;I2C.c: 43: unsigned short I2C_Read(unsigned short ack);I2C.c: 44: {;I2C.c: 45:   unsign
      +                          ed short incoming;;I2C.c: 46:   I2C_Hold();
  4183  1CB4  160A  158A  2416  160A  158A  	fcall	_I2C_Hold
  4184  1CB9                     l4356:	
  4185                           
  4186                           ;I2C.c: 47:   RCEN = 1;
  4187  1CB9  1683               	bsf	3,5	;RP0=1, select bank1
  4188  1CBA  1303               	bcf	3,6	;RP1=0, select bank1
  4189  1CBB  1591               	bsf	17,3	;volatile
  4190                           
  4191                           ;I2C.c: 49:   I2C_Hold();
  4192  1CBC  160A  158A  2416  160A  158A  	fcall	_I2C_Hold
  4193  1CC1                     l4358:	
  4194  1CC1  1283               	bcf	3,5	;RP0=0, select bank0
  4195  1CC2  1303               	bcf	3,6	;RP1=0, select bank0
  4196  1CC3  0813               	movf	19,w	;volatile
  4197  1CC4                     l4360:	
  4198                           
  4199                           ;I2C.c: 52:   I2C_Hold();
  4200  1CC4  160A  158A  2416  160A  158A  	fcall	_I2C_Hold
  4201  1CC9                     l4362:	
  4202                           
  4203                           ;I2C.c: 53:   ACKDT = (ack)?0:1;
  4204  1CC9  1283               	bcf	3,5	;RP0=0, select bank0
  4205  1CCA  1303               	bcf	3,6	;RP1=0, select bank0
  4206  1CCB  083B               	movf	I2C_Read@ack,w
  4207  1CCC  043C               	iorwf	I2C_Read@ack+1,w
  4208  1CCD  1903               	btfsc	3,2
  4209  1CCE  2CD0               	goto	u6401
  4210  1CCF  2CD4               	goto	u6400
  4211  1CD0                     u6401:	
  4212  1CD0  1683               	bsf	3,5	;RP0=1, select bank1
  4213  1CD1  1303               	bcf	3,6	;RP1=0, select bank1
  4214  1CD2  1691               	bsf	17,5	;volatile
  4215  1CD3  2CD7               	goto	u6414
  4216  1CD4                     u6400:	
  4217  1CD4  1683               	bsf	3,5	;RP0=1, select bank1
  4218  1CD5  1303               	bcf	3,6	;RP1=0, select bank1
  4219  1CD6  1291               	bcf	17,5	;volatile
  4220  1CD7                     u6414:	
  4221  1CD7                     l4364:	
  4222                           
  4223                           ;I2C.c: 54:   ACKEN = 1;
  4224  1CD7  1611               	bsf	17,4	;volatile
  4225  1CD8                     l384:	
  4226  1CD8  0008               	return
  4227  1CD9                     __end_of_I2C_Read:	
  4228                           
  4229                           	psect	text12
  4230  1BF7                     __ptext12:	
  4231 ;; *************** function _I2C_End *****************
  4232 ;; Defined at:
  4233 ;;		line 31 in file "I2C.c"
  4234 ;; Parameters:    Size  Location     Type
  4235 ;;		None
  4236 ;; Auto vars:     Size  Location     Type
  4237 ;;		None
  4238 ;; Return value:  Size  Location     Type
  4239 ;;                  1    wreg      void 
  4240 ;; Registers used:
  4241 ;;		wreg, status,2, status,0, pclath, cstack
  4242 ;; Tracked objects:
  4243 ;;		On entry : 0/0
  4244 ;;		On exit  : 0/0
  4245 ;;		Unchanged: 0/0
  4246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4247 ;;      Params:         0       0       0       0       0
  4248 ;;      Locals:         0       0       0       0       0
  4249 ;;      Temps:          0       0       0       0       0
  4250 ;;      Totals:         0       0       0       0       0
  4251 ;;Total ram usage:        0 bytes
  4252 ;; Hardware stack levels used:    1
  4253 ;; Hardware stack levels required when called:    5
  4254 ;; This function calls:
  4255 ;;		_I2C_Hold
  4256 ;; This function is called by:
  4257 ;;		_write_to_EPPROM
  4258 ;;		_read_from_EPPROM
  4259 ;; This function uses a non-reentrant model
  4260 ;;
  4261                           
  4262                           
  4263                           ;psect for function _I2C_End
  4264  1BF7                     _I2C_End:	
  4265  1BF7                     l4350:	
  4266                           ;incstack = 0
  4267                           ; Regs used in _I2C_End: [wreg+status,2+status,0+pclath+cstack]
  4268                           
  4269                           
  4270                           ;I2C.c: 33:   I2C_Hold();
  4271  1BF7  160A  158A  2416  160A  158A  	fcall	_I2C_Hold
  4272  1BFC                     l4352:	
  4273                           
  4274                           ;I2C.c: 34:   PEN = 1;
  4275  1BFC  1683               	bsf	3,5	;RP0=1, select bank1
  4276  1BFD  1303               	bcf	3,6	;RP1=0, select bank1
  4277  1BFE  1511               	bsf	17,2	;volatile
  4278  1BFF                     l378:	
  4279  1BFF  0008               	return
  4280  1C00                     __end_of_I2C_End:	
  4281                           
  4282                           	psect	text13
  4283  1BEE                     __ptext13:	
  4284 ;; *************** function _I2C_Begin *****************
  4285 ;; Defined at:
  4286 ;;		line 25 in file "I2C.c"
  4287 ;; Parameters:    Size  Location     Type
  4288 ;;		None
  4289 ;; Auto vars:     Size  Location     Type
  4290 ;;		None
  4291 ;; Return value:  Size  Location     Type
  4292 ;;                  1    wreg      void 
  4293 ;; Registers used:
  4294 ;;		wreg, status,2, status,0, pclath, cstack
  4295 ;; Tracked objects:
  4296 ;;		On entry : 0/0
  4297 ;;		On exit  : 0/0
  4298 ;;		Unchanged: 0/0
  4299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4300 ;;      Params:         0       0       0       0       0
  4301 ;;      Locals:         0       0       0       0       0
  4302 ;;      Temps:          0       0       0       0       0
  4303 ;;      Totals:         0       0       0       0       0
  4304 ;;Total ram usage:        0 bytes
  4305 ;; Hardware stack levels used:    1
  4306 ;; Hardware stack levels required when called:    5
  4307 ;; This function calls:
  4308 ;;		_I2C_Hold
  4309 ;; This function is called by:
  4310 ;;		_write_to_EPPROM
  4311 ;;		_read_from_EPPROM
  4312 ;; This function uses a non-reentrant model
  4313 ;;
  4314                           
  4315                           
  4316                           ;psect for function _I2C_Begin
  4317  1BEE                     _I2C_Begin:	
  4318  1BEE                     l4342:	
  4319                           ;incstack = 0
  4320                           ; Regs used in _I2C_Begin: [wreg+status,2+status,0+pclath+cstack]
  4321                           
  4322                           
  4323                           ;I2C.c: 27:   I2C_Hold();
  4324  1BEE  160A  158A  2416  160A  158A  	fcall	_I2C_Hold
  4325  1BF3                     l4344:	
  4326                           
  4327                           ;I2C.c: 28:   SEN = 1;
  4328  1BF3  1683               	bsf	3,5	;RP0=1, select bank1
  4329  1BF4  1303               	bcf	3,6	;RP1=0, select bank1
  4330  1BF5  1411               	bsf	17,0	;volatile
  4331  1BF6                     l375:	
  4332  1BF6  0008               	return
  4333  1BF7                     __end_of_I2C_Begin:	
  4334                           
  4335                           	psect	text14
  4336  1C16                     __ptext14:	
  4337 ;; *************** function _I2C_Hold *****************
  4338 ;; Defined at:
  4339 ;;		line 20 in file "I2C.c"
  4340 ;; Parameters:    Size  Location     Type
  4341 ;;		None
  4342 ;; Auto vars:     Size  Location     Type
  4343 ;;		None
  4344 ;; Return value:  Size  Location     Type
  4345 ;;                  1    wreg      void 
  4346 ;; Registers used:
  4347 ;;		wreg, status,2
  4348 ;; Tracked objects:
  4349 ;;		On entry : 0/0
  4350 ;;		On exit  : 0/0
  4351 ;;		Unchanged: 0/0
  4352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4353 ;;      Params:         0       0       0       0       0
  4354 ;;      Locals:         0       0       0       0       0
  4355 ;;      Temps:          0       0       0       0       0
  4356 ;;      Totals:         0       0       0       0       0
  4357 ;;Total ram usage:        0 bytes
  4358 ;; Hardware stack levels used:    1
  4359 ;; Hardware stack levels required when called:    4
  4360 ;; This function calls:
  4361 ;;		Nothing
  4362 ;; This function is called by:
  4363 ;;		_I2C_Begin
  4364 ;;		_I2C_End
  4365 ;;		_I2C_Write
  4366 ;;		_I2C_Read
  4367 ;; This function uses a non-reentrant model
  4368 ;;
  4369                           
  4370                           
  4371                           ;psect for function _I2C_Hold
  4372  1C16                     _I2C_Hold:	
  4373  1C16                     l3886:	
  4374                           ;incstack = 0
  4375                           ; Regs used in _I2C_Hold: [wreg+status,2]
  4376                           
  4377  1C16                     l3888:	
  4378                           ;I2C.c: 22:     while ( (SSPCON2 & 0b00011111) || (SSPSTAT & 0b00000100) ) ;
  4379                           
  4380  1C16  1683               	bsf	3,5	;RP0=1, select bank1
  4381  1C17  1303               	bcf	3,6	;RP1=0, select bank1
  4382  1C18  0811               	movf	17,w	;volatile
  4383  1C19  391F               	andlw	31
  4384  1C1A  1D03               	btfss	3,2
  4385  1C1B  2C1D               	goto	u5311
  4386  1C1C  2C1E               	goto	u5310
  4387  1C1D                     u5311:	
  4388  1C1D  2C16               	goto	l3888
  4389  1C1E                     u5310:	
  4390  1C1E                     l3890:	
  4391  1C1E  1914               	btfsc	20,2	;volatile
  4392  1C1F  2C21               	goto	u5321
  4393  1C20  2C22               	goto	u5320
  4394  1C21                     u5321:	
  4395  1C21  2C16               	goto	l3888
  4396  1C22                     u5320:	
  4397  1C22                     l372:	
  4398  1C22  0008               	return
  4399  1C23                     __end_of_I2C_Hold:	
  4400                           
  4401                           	psect	text15
  4402  1C5B                     __ptext15:	
  4403 ;; *************** function _move_the_fan *****************
  4404 ;; Defined at:
  4405 ;;		line 253 in file "main.c"
  4406 ;; Parameters:    Size  Location     Type
  4407 ;;		None
  4408 ;; Auto vars:     Size  Location     Type
  4409 ;;  a               2   19[BANK3 ] int 
  4410 ;; Return value:  Size  Location     Type
  4411 ;;                  1    wreg      void 
  4412 ;; Registers used:
  4413 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4414 ;; Tracked objects:
  4415 ;;		On entry : 0/0
  4416 ;;		On exit  : 0/0
  4417 ;;		Unchanged: 0/0
  4418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4419 ;;      Params:         0       0       0       0       0
  4420 ;;      Locals:         0       0       0       2       0
  4421 ;;      Temps:          0       0       0       0       0
  4422 ;;      Totals:         0       0       0       2       0
  4423 ;;Total ram usage:        2 bytes
  4424 ;; Hardware stack levels used:    1
  4425 ;; Hardware stack levels required when called:    7
  4426 ;; This function calls:
  4427 ;;		_ADC_Read
  4428 ;;		_PWM_Duty
  4429 ;; This function is called by:
  4430 ;;		_main
  4431 ;; This function uses a non-reentrant model
  4432 ;;
  4433                           
  4434                           
  4435                           ;psect for function _move_the_fan
  4436  1C5B                     _move_the_fan:	
  4437  1C5B                     l4580:	
  4438                           ;incstack = 0
  4439                           ; Regs used in _move_the_fan: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4440                           
  4441                           
  4442                           ;main.c: 255: {
  4443  1C5B  3000               	movlw	0
  4444  1C5C  160A  158A  255B  160A  158A  	fcall	_ADC_Read
  4445  1C61  1283               	bcf	3,5	;RP0=0, select bank0
  4446  1C62  1303               	bcf	3,6	;RP1=0, select bank0
  4447  1C63  083C               	movf	?_ADC_Read+1,w
  4448  1C64  1683               	bsf	3,5	;RP0=1, select bank3
  4449  1C65  1703               	bsf	3,6	;RP1=1, select bank3
  4450  1C66  00A4               	movwf	(move_the_fan@a+1)^(0+384)
  4451  1C67  1283               	bcf	3,5	;RP0=0, select bank0
  4452  1C68  1303               	bcf	3,6	;RP1=0, select bank0
  4453  1C69  083B               	movf	?_ADC_Read,w
  4454  1C6A  1683               	bsf	3,5	;RP0=1, select bank3
  4455  1C6B  1703               	bsf	3,6	;RP1=1, select bank3
  4456  1C6C  00A3               	movwf	move_the_fan@a^(0+384)
  4457  1C6D                     l4582:	
  4458                           
  4459                           ;main.c: 256:   if ((Data_atual.alarm==1 || Data_atual.alarm==2 || Data_atual.alarm==3) 
      +                          && LAST_ALARM!=Data_atual.alarm)
  4460  1C6D  0824               	movf	(move_the_fan@a+1)^(0+384),w
  4461  1C6E  009E               	movwf	(PWM_Duty@duty+1)^(0+384)
  4462  1C6F  0823               	movf	move_the_fan@a^(0+384),w
  4463  1C70  009D               	movwf	PWM_Duty@duty^(0+384)
  4464  1C71  160A  118A  263D  160A  158A  	fcall	_PWM_Duty
  4465  1C76                     l200:	
  4466  1C76  0008               	return
  4467  1C77                     __end_of_move_the_fan:	
  4468                           
  4469                           	psect	text16
  4470  163D                     __ptext16:	
  4471 ;; *************** function _PWM_Duty *****************
  4472 ;; Defined at:
  4473 ;;		line 74 in file "main.c"
  4474 ;; Parameters:    Size  Location     Type
  4475 ;;  duty            2   13[BANK3 ] unsigned int 
  4476 ;; Auto vars:     Size  Location     Type
  4477 ;;		None
  4478 ;; Return value:  Size  Location     Type
  4479 ;;                  1    wreg      void 
  4480 ;; Registers used:
  4481 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4482 ;; Tracked objects:
  4483 ;;		On entry : 0/0
  4484 ;;		On exit  : 0/0
  4485 ;;		Unchanged: 0/0
  4486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4487 ;;      Params:         0       0       0       2       0
  4488 ;;      Locals:         0       0       0       0       0
  4489 ;;      Temps:          0       0       0       4       0
  4490 ;;      Totals:         0       0       0       6       0
  4491 ;;Total ram usage:        6 bytes
  4492 ;; Hardware stack levels used:    1
  4493 ;; Hardware stack levels required when called:    6
  4494 ;; This function calls:
  4495 ;;		___aldiv
  4496 ;;		___fldiv
  4497 ;;		___flmul
  4498 ;;		___fltol
  4499 ;;		___xxtofl
  4500 ;; This function is called by:
  4501 ;;		_move_the_fan
  4502 ;; This function uses a non-reentrant model
  4503 ;;
  4504                           
  4505                           
  4506                           ;psect for function _PWM_Duty
  4507  163D                     _PWM_Duty:	
  4508  163D                     l4298:	
  4509                           ;incstack = 0
  4510                           ; Regs used in _PWM_Duty: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4511                           
  4512                           
  4513                           ;main.c: 74:     };main.c: 75:     int_input = (output[2]-48)*1000+(output[3]-48)*100+(o
      +                          utput[4]-48)*10+(output[5]-48);;main.c: 76:     UART_Write_Decimal(int_input);
  4514  163D  3003               	movlw	3
  4515  163E  1683               	bsf	3,5	;RP0=1, select bank3
  4516  163F  1703               	bsf	3,6	;RP1=1, select bank3
  4517  1640  021E               	subwf	(PWM_Duty@duty+1)^(0+384),w
  4518  1641  30FF               	movlw	255
  4519  1642  1903               	skipnz
  4520  1643  021D               	subwf	PWM_Duty@duty^(0+384),w
  4521  1644  1803               	skipnc
  4522  1645  2E47               	goto	u6341
  4523  1646  2E48               	goto	u6340
  4524  1647                     u6341:	
  4525  1647  2F14               	goto	l131
  4526  1648                     u6340:	
  4527  1648                     l4300:	
  4528                           
  4529                           ;main.c: 77:     UART_Write_Text("\n");;main.c: 78:     switch (output[1])
  4530  1648  081D               	movf	PWM_Duty@duty^(0+384),w
  4531  1649  1683               	bsf	3,5	;RP0=1, select bank1
  4532  164A  1303               	bcf	3,6	;RP1=0, select bank1
  4533  164B  00AE               	movwf	___xxtofl@val^(0+128)
  4534  164C  1683               	bsf	3,5	;RP0=1, select bank3
  4535  164D  1703               	bsf	3,6	;RP1=1, select bank3
  4536  164E  081E               	movf	(PWM_Duty@duty+1)^(0+384),w
  4537  164F  1683               	bsf	3,5	;RP0=1, select bank1
  4538  1650  1303               	bcf	3,6	;RP1=0, select bank1
  4539  1651  00AF               	movwf	(___xxtofl@val^(0+128)+1)
  4540  1652  01B0               	clrf	(___xxtofl@val^(0+128)+2)
  4541  1653  01B1               	clrf	(___xxtofl@val^(0+128)+3)
  4542  1654  3000               	movlw	0
  4543  1655  160A  118A  2581  160A  118A  	fcall	___xxtofl
  4544  165A  1683               	bsf	3,5	;RP0=1, select bank1
  4545  165B  1303               	bcf	3,6	;RP1=0, select bank1
  4546  165C  0831               	movf	(?___xxtofl+3)^(0+128),w
  4547  165D  00C3               	movwf	(___fldiv@b+3)^(0+128)
  4548  165E  0830               	movf	(?___xxtofl+2)^(0+128),w
  4549  165F  00C2               	movwf	(___fldiv@b+2)^(0+128)
  4550  1660  082F               	movf	(?___xxtofl+1)^(0+128),w
  4551  1661  00C1               	movwf	(___fldiv@b+1)^(0+128)
  4552  1662  082E               	movf	?___xxtofl^(0+128),w
  4553  1663  00C0               	movwf	___fldiv@b^(0+128)
  4554  1664  3044               	movlw	68
  4555  1665  00BF               	movwf	(___fldiv@a+3)^(0+128)
  4556  1666  307F               	movlw	127
  4557  1667  00BE               	movwf	(___fldiv@a+2)^(0+128)
  4558  1668  30C0               	movlw	192
  4559  1669  00BD               	movwf	(___fldiv@a+1)^(0+128)
  4560  166A  3000               	movlw	0
  4561  166B  00BC               	movwf	___fldiv@a^(0+128)
  4562  166C  120A  118A  25D4  160A  118A  	fcall	___fldiv
  4563  1671  1683               	bsf	3,5	;RP0=1, select bank1
  4564  1672  1303               	bcf	3,6	;RP1=0, select bank1
  4565  1673  083F               	movf	(?___fldiv+3)^(0+128),w
  4566  1674  00DD               	movwf	(___flmul@a+3)^(0+128)
  4567  1675  083E               	movf	(?___fldiv+2)^(0+128),w
  4568  1676  00DC               	movwf	(___flmul@a+2)^(0+128)
  4569  1677  083D               	movf	(?___fldiv+1)^(0+128),w
  4570  1678  00DB               	movwf	(___flmul@a+1)^(0+128)
  4571  1679  083C               	movf	?___fldiv^(0+128),w
  4572  167A  00DA               	movwf	___flmul@a^(0+128)
  4573  167B  3000               	movlw	0
  4574  167C  00A7               	movwf	(___aldiv@dividend+3)^(0+128)
  4575  167D  303D               	movlw	61
  4576  167E  00A6               	movwf	(___aldiv@dividend+2)^(0+128)
  4577  167F  3009               	movlw	9
  4578  1680  00A5               	movwf	(___aldiv@dividend+1)^(0+128)
  4579  1681  3000               	movlw	0
  4580  1682  00A4               	movwf	___aldiv@dividend^(0+128)
  4581  1683  1283               	bcf	3,5	;RP0=0, select bank0
  4582  1684  1303               	bcf	3,6	;RP1=0, select bank0
  4583  1685  0851               	movf	_PWM_freq,w
  4584  1686  1683               	bsf	3,5	;RP0=1, select bank3
  4585  1687  1703               	bsf	3,6	;RP1=1, select bank3
  4586  1688  009F               	movwf	??_PWM_Duty^(0+384)
  4587  1689  1283               	bcf	3,5	;RP0=0, select bank0
  4588  168A  1303               	bcf	3,6	;RP1=0, select bank0
  4589  168B  0852               	movf	_PWM_freq+1,w
  4590  168C  1683               	bsf	3,5	;RP0=1, select bank3
  4591  168D  1703               	bsf	3,6	;RP1=1, select bank3
  4592  168E  00A0               	movwf	(??_PWM_Duty^(0+384)+1)
  4593  168F  1283               	bcf	3,5	;RP0=0, select bank0
  4594  1690  1303               	bcf	3,6	;RP1=0, select bank0
  4595  1691  0853               	movf	_PWM_freq+2,w
  4596  1692  1683               	bsf	3,5	;RP0=1, select bank3
  4597  1693  1703               	bsf	3,6	;RP1=1, select bank3
  4598  1694  00A1               	movwf	(??_PWM_Duty^(0+384)+2)
  4599  1695  1283               	bcf	3,5	;RP0=0, select bank0
  4600  1696  1303               	bcf	3,6	;RP1=0, select bank0
  4601  1697  0854               	movf	_PWM_freq+3,w
  4602  1698  1683               	bsf	3,5	;RP0=1, select bank3
  4603  1699  1703               	bsf	3,6	;RP1=1, select bank3
  4604  169A  00A2               	movwf	(??_PWM_Duty^(0+384)+3)
  4605  169B  3002               	movlw	2
  4606  169C                     u6355:	
  4607  169C  1003               	clrc
  4608  169D  0D9F               	rlf	??_PWM_Duty^(0+384),f
  4609  169E  0DA0               	rlf	(??_PWM_Duty^(0+384)+1),f
  4610  169F  0DA1               	rlf	(??_PWM_Duty^(0+384)+2),f
  4611  16A0  0DA2               	rlf	(??_PWM_Duty^(0+384)+3),f
  4612  16A1                     u6350:	
  4613  16A1  3EFF               	addlw	-1
  4614  16A2  1D03               	skipz
  4615  16A3  2E9C               	goto	u6355
  4616  16A4  0822               	movf	(??_PWM_Duty+3)^(0+384),w
  4617  16A5  1683               	bsf	3,5	;RP0=1, select bank1
  4618  16A6  1303               	bcf	3,6	;RP1=0, select bank1
  4619  16A7  00A3               	movwf	(___aldiv@divisor+3)^(0+128)
  4620  16A8  1683               	bsf	3,5	;RP0=1, select bank3
  4621  16A9  1703               	bsf	3,6	;RP1=1, select bank3
  4622  16AA  0821               	movf	(??_PWM_Duty+2)^(0+384),w
  4623  16AB  1683               	bsf	3,5	;RP0=1, select bank1
  4624  16AC  1303               	bcf	3,6	;RP1=0, select bank1
  4625  16AD  00A2               	movwf	(___aldiv@divisor+2)^(0+128)
  4626  16AE  1683               	bsf	3,5	;RP0=1, select bank3
  4627  16AF  1703               	bsf	3,6	;RP1=1, select bank3
  4628  16B0  0820               	movf	(??_PWM_Duty+1)^(0+384),w
  4629  16B1  1683               	bsf	3,5	;RP0=1, select bank1
  4630  16B2  1303               	bcf	3,6	;RP1=0, select bank1
  4631  16B3  00A1               	movwf	(___aldiv@divisor+1)^(0+128)
  4632  16B4  1683               	bsf	3,5	;RP0=1, select bank3
  4633  16B5  1703               	bsf	3,6	;RP1=1, select bank3
  4634  16B6  081F               	movf	??_PWM_Duty^(0+384),w
  4635  16B7  1683               	bsf	3,5	;RP0=1, select bank1
  4636  16B8  1303               	bcf	3,6	;RP1=0, select bank1
  4637  16B9  00A0               	movwf	___aldiv@divisor^(0+128)
  4638  16BA  160A  118A  24D0  160A  118A  	fcall	___aldiv
  4639  16BF  1683               	bsf	3,5	;RP0=1, select bank1
  4640  16C0  1303               	bcf	3,6	;RP1=0, select bank1
  4641  16C1  0823               	movf	(?___aldiv+3)^(0+128),w
  4642  16C2  00B1               	movwf	(___xxtofl@val+3)^(0+128)
  4643  16C3  0822               	movf	(?___aldiv+2)^(0+128),w
  4644  16C4  00B0               	movwf	(___xxtofl@val+2)^(0+128)
  4645  16C5  0821               	movf	(?___aldiv+1)^(0+128),w
  4646  16C6  00AF               	movwf	(___xxtofl@val+1)^(0+128)
  4647  16C7  0820               	movf	?___aldiv^(0+128),w
  4648  16C8  00AE               	movwf	___xxtofl@val^(0+128)
  4649  16C9  3001               	movlw	1
  4650  16CA  160A  118A  2581  160A  118A  	fcall	___xxtofl
  4651  16CF  1683               	bsf	3,5	;RP0=1, select bank1
  4652  16D0  1303               	bcf	3,6	;RP1=0, select bank1
  4653  16D1  0831               	movf	(?___xxtofl+3)^(0+128),w
  4654  16D2  00D9               	movwf	(___flmul@b+3)^(0+128)
  4655  16D3  0830               	movf	(?___xxtofl+2)^(0+128),w
  4656  16D4  00D8               	movwf	(___flmul@b+2)^(0+128)
  4657  16D5  082F               	movf	(?___xxtofl+1)^(0+128),w
  4658  16D6  00D7               	movwf	(___flmul@b+1)^(0+128)
  4659  16D7  082E               	movf	?___xxtofl^(0+128),w
  4660  16D8  00D6               	movwf	___flmul@b^(0+128)
  4661  16D9  120A  118A  2051  160A  118A  	fcall	___flmul
  4662  16DE  1683               	bsf	3,5	;RP0=1, select bank1
  4663  16DF  1303               	bcf	3,6	;RP1=0, select bank1
  4664  16E0  0859               	movf	(?___flmul+3)^(0+128),w
  4665  16E1  00E6               	movwf	(___fltol@f1+3)^(0+128)
  4666  16E2  0858               	movf	(?___flmul+2)^(0+128),w
  4667  16E3  00E5               	movwf	(___fltol@f1+2)^(0+128)
  4668  16E4  0857               	movf	(?___flmul+1)^(0+128),w
  4669  16E5  00E4               	movwf	(___fltol@f1+1)^(0+128)
  4670  16E6  0856               	movf	?___flmul^(0+128),w
  4671  16E7  00E3               	movwf	___fltol@f1^(0+128)
  4672  16E8  160A  118A  22B5  160A  118A  	fcall	___fltol
  4673  16ED  1683               	bsf	3,5	;RP0=1, select bank1
  4674  16EE  1303               	bcf	3,6	;RP1=0, select bank1
  4675  16EF  0864               	movf	(?___fltol+1)^(0+128),w
  4676  16F0  1683               	bsf	3,5	;RP0=1, select bank3
  4677  16F1  1703               	bsf	3,6	;RP1=1, select bank3
  4678  16F2  009E               	movwf	(PWM_Duty@duty+1)^(0+384)
  4679  16F3  1683               	bsf	3,5	;RP0=1, select bank1
  4680  16F4  1303               	bcf	3,6	;RP1=0, select bank1
  4681  16F5  0863               	movf	?___fltol^(0+128),w
  4682  16F6  1683               	bsf	3,5	;RP0=1, select bank3
  4683  16F7  1703               	bsf	3,6	;RP1=1, select bank3
  4684  16F8  009D               	movwf	PWM_Duty@duty^(0+384)
  4685  16F9                     l4302:	
  4686                           
  4687                           ;main.c: 79:     {
  4688  16F9  181D               	btfsc	PWM_Duty@duty^(0+384),0
  4689  16FA  2EFC               	goto	u6361
  4690  16FB  2F00               	goto	u6360
  4691  16FC                     u6361:	
  4692  16FC  1283               	bcf	3,5	;RP0=0, select bank0
  4693  16FD  1303               	bcf	3,6	;RP1=0, select bank0
  4694  16FE  1697               	bsf	23,5	;volatile
  4695  16FF  2F03               	goto	u6374
  4696  1700                     u6360:	
  4697  1700  1283               	bcf	3,5	;RP0=0, select bank0
  4698  1701  1303               	bcf	3,6	;RP1=0, select bank0
  4699  1702  1297               	bcf	23,5	;volatile
  4700  1703                     u6374:	
  4701  1703                     l4304:	
  4702                           
  4703                           ;main.c: 80:         case 48:
  4704  1703  1217               	bcf	23,4	;volatile
  4705  1704                     l4306:	
  4706                           
  4707                           ;main.c: 81:             UART_Write_Text("0 0 vento \n");
  4708  1704  1683               	bsf	3,5	;RP0=1, select bank3
  4709  1705  1703               	bsf	3,6	;RP1=1, select bank3
  4710  1706  081E               	movf	(PWM_Duty@duty+1)^(0+384),w
  4711  1707  00A0               	movwf	(??_PWM_Duty^(0+384)+1)
  4712  1708  081D               	movf	PWM_Duty@duty^(0+384),w
  4713  1709  009F               	movwf	??_PWM_Duty^(0+384)
  4714  170A  1003               	clrc
  4715  170B  0CA0               	rrf	(??_PWM_Duty^(0+384)+1),f
  4716  170C  0C9F               	rrf	??_PWM_Duty^(0+384),f
  4717  170D  1003               	clrc
  4718  170E  0CA0               	rrf	(??_PWM_Duty^(0+384)+1),f
  4719  170F  0C9F               	rrf	??_PWM_Duty^(0+384),f
  4720  1710  081F               	movf	??_PWM_Duty^(0+384),w
  4721  1711  1283               	bcf	3,5	;RP0=0, select bank0
  4722  1712  1303               	bcf	3,6	;RP1=0, select bank0
  4723  1713  0095               	movwf	21	;volatile
  4724  1714                     l131:	
  4725  1714  0008               	return
  4726  1715                     __end_of_PWM_Duty:	
  4727                           
  4728                           	psect	text17
  4729  13AE                     __ptext17:	
  4730 ;; *************** function _alarm_check *****************
  4731 ;; Defined at:
  4732 ;;		line 318 in file "main.c"
  4733 ;; Parameters:    Size  Location     Type
  4734 ;;  calibracao      6   31[BANK1 ] struct .
  4735 ;; Auto vars:     Size  Location     Type
  4736 ;;  magic           2   38[BANK1 ] int 
  4737 ;; Return value:  Size  Location     Type
  4738 ;;                  1    wreg      void 
  4739 ;; Registers used:
  4740 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4741 ;; Tracked objects:
  4742 ;;		On entry : 0/0
  4743 ;;		On exit  : 0/0
  4744 ;;		Unchanged: 0/0
  4745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4746 ;;      Params:         0       0       6       0       0
  4747 ;;      Locals:         0       0       2       0       0
  4748 ;;      Temps:          0       0       1       0       0
  4749 ;;      Totals:         0       0       9       0       0
  4750 ;;Total ram usage:        9 bytes
  4751 ;; Hardware stack levels used:    1
  4752 ;; Hardware stack levels required when called:    8
  4753 ;; This function calls:
  4754 ;;		_alarm
  4755 ;; This function is called by:
  4756 ;;		_main
  4757 ;; This function uses a non-reentrant model
  4758 ;;
  4759                           
  4760                           
  4761                           ;psect for function _alarm_check
  4762  13AE                     _alarm_check:	
  4763  13AE                     l4618:	
  4764                           ;incstack = 0
  4765 ;; hardware stack exceeded
  4766                           ; Regs used in _alarm_check: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4767                           
  4768                           
  4769                           ;main.c: 318: ;main.c: 319: ;main.c: 320:   PORTB = 0XFF;
  4770  13AE  1283               	bcf	3,5	;RP0=0, select bank0
  4771  13AF  1303               	bcf	3,6	;RP1=0, select bank0
  4772  13B0  0844               	movf	_Data_atual+5,w
  4773  13B1  1683               	bsf	3,5	;RP0=1, select bank1
  4774  13B2  1303               	bcf	3,6	;RP1=0, select bank1
  4775  13B3  00C7               	movwf	(alarm_check@magic+1)^(0+128)
  4776  13B4  1283               	bcf	3,5	;RP0=0, select bank0
  4777  13B5  1303               	bcf	3,6	;RP1=0, select bank0
  4778  13B6  0843               	movf	_Data_atual+4,w
  4779  13B7  1683               	bsf	3,5	;RP0=1, select bank1
  4780  13B8  1303               	bcf	3,6	;RP1=0, select bank1
  4781  13B9  00C6               	movwf	alarm_check@magic^(0+128)
  4782                           
  4783                           ;main.c: 321:   TRISB = 0;
  4784  13BA  1283               	bcf	3,5	;RP0=0, select bank0
  4785  13BB  1303               	bcf	3,6	;RP1=0, select bank0
  4786  13BC  0842               	movf	_Data_atual+3,w
  4787  13BD  3A80               	xorlw	128
  4788  13BE  1683               	bsf	3,5	;RP0=1, select bank1
  4789  13BF  1303               	bcf	3,6	;RP1=0, select bank1
  4790  13C0  00C5               	movwf	??_alarm_check^(0+128)
  4791  13C1  0842               	movf	((alarm_check@calibracao+1)^(0+128)+2),w
  4792  13C2  3A80               	xorlw	128
  4793  13C3  0245               	subwf	??_alarm_check^(0+128),w
  4794  13C4  1D03               	skipz
  4795  13C5  2BCA               	goto	u6905
  4796  13C6  0841               	movf	(alarm_check@calibracao^(0+128)+2),w
  4797  13C7  1283               	bcf	3,5	;RP0=0, select bank0
  4798  13C8  1303               	bcf	3,6	;RP1=0, select bank0
  4799  13C9  0241               	subwf	_Data_atual+2,w
  4800  13CA                     u6905:	
  4801  13CA  1803               	skipnc
  4802  13CB  2BCD               	goto	u6901
  4803  13CC  2BCE               	goto	u6900
  4804  13CD                     u6901:	
  4805  13CD  2C0A               	goto	l4628
  4806  13CE                     u6900:	
  4807  13CE                     l4620:	
  4808  13CE  1683               	bsf	3,5	;RP0=1, select bank1
  4809  13CF  1303               	bcf	3,6	;RP1=0, select bank1
  4810  13D0  0844               	movf	((alarm_check@calibracao+1)^(0+128)+4),w
  4811  13D1  3A80               	xorlw	128
  4812  13D2  00C5               	movwf	??_alarm_check^(0+128)
  4813  13D3  1283               	bcf	3,5	;RP0=0, select bank0
  4814  13D4  1303               	bcf	3,6	;RP1=0, select bank0
  4815  13D5  0840               	movf	_Data_atual+1,w
  4816  13D6  3A80               	xorlw	128
  4817  13D7  1683               	bsf	3,5	;RP0=1, select bank1
  4818  13D8  1303               	bcf	3,6	;RP1=0, select bank1
  4819  13D9  0245               	subwf	??_alarm_check^(0+128),w
  4820  13DA  1D03               	skipz
  4821  13DB  2BE2               	goto	u6915
  4822  13DC  1283               	bcf	3,5	;RP0=0, select bank0
  4823  13DD  1303               	bcf	3,6	;RP1=0, select bank0
  4824  13DE  083F               	movf	_Data_atual,w
  4825  13DF  1683               	bsf	3,5	;RP0=1, select bank1
  4826  13E0  1303               	bcf	3,6	;RP1=0, select bank1
  4827  13E1  0243               	subwf	(alarm_check@calibracao^(0+128)+4),w
  4828  13E2                     u6915:	
  4829  13E2  1803               	skipnc
  4830  13E3  2BE5               	goto	u6911
  4831  13E4  2BE6               	goto	u6910
  4832  13E5                     u6911:	
  4833  13E5  2C0A               	goto	l4628
  4834  13E6                     u6910:	
  4835  13E6                     l4622:	
  4836  13E6  1683               	bsf	3,5	;RP0=1, select bank1
  4837  13E7  1303               	bcf	3,6	;RP1=0, select bank1
  4838  13E8  0840               	movf	(alarm_check@calibracao+1)^(0+128),w
  4839  13E9  3A80               	xorlw	128
  4840  13EA  00C5               	movwf	??_alarm_check^(0+128)
  4841  13EB  1283               	bcf	3,5	;RP0=0, select bank0
  4842  13EC  1303               	bcf	3,6	;RP1=0, select bank0
  4843  13ED  0844               	movf	_Data_atual+5,w
  4844  13EE  3A80               	xorlw	128
  4845  13EF  1683               	bsf	3,5	;RP0=1, select bank1
  4846  13F0  1303               	bcf	3,6	;RP1=0, select bank1
  4847  13F1  0245               	subwf	??_alarm_check^(0+128),w
  4848  13F2  1D03               	skipz
  4849  13F3  2BFA               	goto	u6925
  4850  13F4  1283               	bcf	3,5	;RP0=0, select bank0
  4851  13F5  1303               	bcf	3,6	;RP1=0, select bank0
  4852  13F6  0843               	movf	_Data_atual+4,w
  4853  13F7  1683               	bsf	3,5	;RP0=1, select bank1
  4854  13F8  1303               	bcf	3,6	;RP1=0, select bank1
  4855  13F9  023F               	subwf	alarm_check@calibracao^(0+128),w
  4856  13FA                     u6925:	
  4857  13FA  1803               	skipnc
  4858  13FB  2BFD               	goto	u6921
  4859  13FC  2BFE               	goto	u6920
  4860  13FD                     u6921:	
  4861  13FD  2C0A               	goto	l4628
  4862  13FE                     u6920:	
  4863  13FE                     l4624:	
  4864                           
  4865                           ;main.c: 322:   TRISD = 0XFF;;main.c: 323:   PORTD = 0XFF;
  4866  13FE  3001               	movlw	1
  4867  13FF  1283               	bcf	3,5	;RP0=0, select bank0
  4868  1400  1303               	bcf	3,6	;RP1=0, select bank0
  4869  1401  00C5               	movwf	_Data_atual+6
  4870  1402  3000               	movlw	0
  4871  1403  00C6               	movwf	_Data_atual+7
  4872  1404                     l4626:	
  4873                           
  4874                           ;main.c: 324:   TRISD = 0XFF;
  4875  1404  160A  158A  2632  160A  118A  	fcall	_alarm
  4876                           
  4877                           ;main.c: 325: 
  4878  1409  2C2E               	goto	l229
  4879  140A                     l4628:	
  4880  140A  1683               	bsf	3,5	;RP0=1, select bank1
  4881  140B  1303               	bcf	3,6	;RP1=0, select bank1
  4882  140C  0847               	movf	(alarm_check@magic+1)^(0+128),w
  4883  140D  3A80               	xorlw	128
  4884  140E  00C5               	movwf	??_alarm_check^(0+128)
  4885  140F  1283               	bcf	3,5	;RP0=0, select bank0
  4886  1410  1303               	bcf	3,6	;RP1=0, select bank0
  4887  1411  0844               	movf	_Data_atual+5,w
  4888  1412  3A80               	xorlw	128
  4889  1413  1683               	bsf	3,5	;RP0=1, select bank1
  4890  1414  1303               	bcf	3,6	;RP1=0, select bank1
  4891  1415  0245               	subwf	??_alarm_check^(0+128),w
  4892  1416  1D03               	skipz
  4893  1417  2C1E               	goto	u6935
  4894  1418  1283               	bcf	3,5	;RP0=0, select bank0
  4895  1419  1303               	bcf	3,6	;RP1=0, select bank0
  4896  141A  0843               	movf	_Data_atual+4,w
  4897  141B  1683               	bsf	3,5	;RP0=1, select bank1
  4898  141C  1303               	bcf	3,6	;RP1=0, select bank1
  4899  141D  0246               	subwf	alarm_check@magic^(0+128),w
  4900  141E                     u6935:	
  4901  141E  1803               	skipnc
  4902  141F  2C21               	goto	u6931
  4903  1420  2C22               	goto	u6930
  4904  1421                     u6931:	
  4905  1421  2C29               	goto	l4634
  4906  1422                     u6930:	
  4907  1422                     l4630:	
  4908                           
  4909                           ;main.c: 326:   TRISA = 0xFF;
  4910  1422  3002               	movlw	2
  4911  1423  1283               	bcf	3,5	;RP0=0, select bank0
  4912  1424  1303               	bcf	3,6	;RP1=0, select bank0
  4913  1425  00C5               	movwf	_Data_atual+6
  4914  1426  3000               	movlw	0
  4915  1427  00C6               	movwf	_Data_atual+7
  4916  1428  2C04               	goto	l4626
  4917  1429                     l4634:	
  4918                           
  4919                           ;main.c: 329:   TRISCbits.TRISC1 = 0;
  4920  1429  1283               	bcf	3,5	;RP0=0, select bank0
  4921  142A  1303               	bcf	3,6	;RP1=0, select bank0
  4922  142B  01C5               	clrf	_Data_atual+6
  4923  142C  01C6               	clrf	_Data_atual+7
  4924  142D  2C04               	goto	l4626
  4925  142E                     l229:	
  4926  142E  0008               	return
  4927  142F                     __end_of_alarm_check:	
  4928                           
  4929                           	psect	text18
  4930  1E32                     __ptext18:	
  4931 ;; *************** function _alarm *****************
  4932 ;; Defined at:
  4933 ;;		line 303 in file "main.c"
  4934 ;; Parameters:    Size  Location     Type
  4935 ;;		None
  4936 ;; Auto vars:     Size  Location     Type
  4937 ;;		None
  4938 ;; Return value:  Size  Location     Type
  4939 ;;                  1    wreg      void 
  4940 ;; Registers used:
  4941 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4942 ;; Tracked objects:
  4943 ;;		On entry : 0/0
  4944 ;;		On exit  : 0/0
  4945 ;;		Unchanged: 0/0
  4946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4947 ;;      Params:         0       0       0       0       0
  4948 ;;      Locals:         0       0       0       0       0
  4949 ;;      Temps:          0       0       0       0       0
  4950 ;;      Totals:         0       0       0       0       0
  4951 ;;Total ram usage:        0 bytes
  4952 ;; Hardware stack levels used:    1
  4953 ;; Hardware stack levels required when called:    7
  4954 ;; This function calls:
  4955 ;;		_print_json
  4956 ;; This function is called by:
  4957 ;;		_alarm_check
  4958 ;; This function uses a non-reentrant model
  4959 ;;
  4960                           
  4961                           
  4962                           ;psect for function _alarm
  4963  1E32                     _alarm:	
  4964  1E32                     l4368:	
  4965                           ;incstack = 0
  4966 ;; hardware stack exceeded
  4967                           ; Regs used in _alarm: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4968                           
  4969                           
  4970                           ;main.c: 305: 
  4971  1E32  1283               	bcf	3,5	;RP0=0, select bank0
  4972  1E33  1303               	bcf	3,6	;RP1=0, select bank0
  4973  1E34  0345               	decf	_Data_atual+6,w
  4974  1E35  0446               	iorwf	_Data_atual+7,w
  4975  1E36  1903               	btfsc	3,2
  4976  1E37  2E39               	goto	u6421
  4977  1E38  2E3A               	goto	u6420
  4978  1E39                     u6421:	
  4979  1E39  2E48               	goto	l4374
  4980  1E3A                     u6420:	
  4981  1E3A                     l4370:	
  4982  1E3A  3002               	movlw	2
  4983  1E3B  0645               	xorwf	_Data_atual+6,w
  4984  1E3C  0446               	iorwf	_Data_atual+7,w
  4985  1E3D  1903               	btfsc	3,2
  4986  1E3E  2E40               	goto	u6431
  4987  1E3F  2E41               	goto	u6430
  4988  1E40                     u6431:	
  4989  1E40  2E48               	goto	l4374
  4990  1E41                     u6430:	
  4991  1E41                     l4372:	
  4992  1E41  3003               	movlw	3
  4993  1E42  0645               	xorwf	_Data_atual+6,w
  4994  1E43  0446               	iorwf	_Data_atual+7,w
  4995  1E44  1D03               	btfss	3,2
  4996  1E45  2E47               	goto	u6441
  4997  1E46  2E48               	goto	u6440
  4998  1E47                     u6441:	
  4999  1E47  2E60               	goto	l4382
  5000  1E48                     u6440:	
  5001  1E48                     l4374:	
  5002  1E48  0848               	movf	_LAST_ALARM+1,w
  5003  1E49  0646               	xorwf	_Data_atual+7,w
  5004  1E4A  1D03               	skipz
  5005  1E4B  2E4E               	goto	u6455
  5006  1E4C  0847               	movf	_LAST_ALARM,w
  5007  1E4D  0645               	xorwf	_Data_atual+6,w
  5008  1E4E                     u6455:	
  5009  1E4E  1903               	skipnz
  5010  1E4F  2E51               	goto	u6451
  5011  1E50  2E52               	goto	u6450
  5012  1E51                     u6451:	
  5013  1E51  2E60               	goto	l4382
  5014  1E52                     u6450:	
  5015  1E52                     l4376:	
  5016                           
  5017                           ;main.c: 306:   T1CON=0;;main.c: 307:   TMR1CS=1;
  5018  1E52  1487               	bsf	7,1	;volatile
  5019                           
  5020                           ;main.c: 308:   T1SYNC=0;
  5021  1E53  1786               	bsf	6,7	;volatile
  5022  1E54                     l4378:	
  5023                           
  5024                           ;main.c: 309:   T1OSCEN=1;
  5025  1E54  160A  118A  2048  160A  158A  	fcall	_print_json
  5026  1E59                     l4380:	
  5027                           
  5028                           ;main.c: 310:   TMR1ON=1;
  5029  1E59  1283               	bcf	3,5	;RP0=0, select bank0
  5030  1E5A  1303               	bcf	3,6	;RP1=0, select bank0
  5031  1E5B  0846               	movf	_Data_atual+7,w
  5032  1E5C  00C8               	movwf	_LAST_ALARM+1
  5033  1E5D  0845               	movf	_Data_atual+6,w
  5034  1E5E  00C7               	movwf	_LAST_ALARM
  5035                           
  5036                           ;main.c: 311: 
  5037  1E5F  2E6A               	goto	l222
  5038  1E60                     l4382:	
  5039  1E60  0845               	movf	_Data_atual+6,w
  5040  1E61  0446               	iorwf	_Data_atual+7,w
  5041  1E62  1D03               	btfss	3,2
  5042  1E63  2E65               	goto	u6461
  5043  1E64  2E66               	goto	u6460
  5044  1E65                     u6461:	
  5045  1E65  2E6A               	goto	l222
  5046  1E66                     u6460:	
  5047  1E66                     l4384:	
  5048                           
  5049                           ;main.c: 312: 
  5050  1E66  1087               	bcf	7,1	;volatile
  5051                           
  5052                           ;main.c: 313: 
  5053  1E67  1386               	bcf	6,7	;volatile
  5054  1E68                     l4386:	
  5055                           
  5056                           ;main.c: 314:   OPTION_REG =0x07;
  5057  1E68  01C7               	clrf	_LAST_ALARM
  5058  1E69  01C8               	clrf	_LAST_ALARM+1
  5059  1E6A                     l222:	
  5060  1E6A  0008               	return
  5061  1E6B                     __end_of_alarm:	
  5062                           
  5063                           	psect	text19
  5064  1048                     __ptext19:	
  5065 ;; *************** function _print_json *****************
  5066 ;; Defined at:
  5067 ;;		line 102 in file "main.c"
  5068 ;; Parameters:    Size  Location     Type
  5069 ;;		None
  5070 ;; Auto vars:     Size  Location     Type
  5071 ;;		None
  5072 ;; Return value:  Size  Location     Type
  5073 ;;                  1    wreg      void 
  5074 ;; Registers used:
  5075 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5076 ;; Tracked objects:
  5077 ;;		On entry : 0/0
  5078 ;;		On exit  : 0/0
  5079 ;;		Unchanged: 0/0
  5080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5081 ;;      Params:         0       0       0       0       0
  5082 ;;      Locals:         0       0       0       0       0
  5083 ;;      Temps:          0       0       1       0       0
  5084 ;;      Totals:         0       0       1       0       0
  5085 ;;Total ram usage:        1 bytes
  5086 ;; Hardware stack levels used:    1
  5087 ;; Hardware stack levels required when called:    6
  5088 ;; This function calls:
  5089 ;;		_UART_Write_Text
  5090 ;;		_sprintf
  5091 ;; This function is called by:
  5092 ;;		_read_from_MR
  5093 ;;		_alarm
  5094 ;; This function uses a non-reentrant model
  5095 ;;
  5096                           
  5097                           
  5098                           ;psect for function _print_json
  5099  1048                     _print_json:	
  5100  1048                     l3878:	
  5101                           ;incstack = 0
  5102                           ; Regs used in _print_json: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5103                           
  5104                           
  5105                           ;main.c: 104:     if(count_timer_fan_speed==10)
  5106  1048  3010               	movlw	(low (_json| (0+256)))& (0+255)
  5107  1049  1683               	bsf	3,5	;RP0=1, select bank1
  5108  104A  1303               	bcf	3,6	;RP1=0, select bank1
  5109  104B  00AA               	movwf	sprintf@sp^(0+128)
  5110  104C  3001               	movlw	1
  5111  104D  00AB               	movwf	(sprintf@sp+1)^(0+128)
  5112  104E  300F               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  5113  104F  00BE               	movwf	??_print_json^(0+128)
  5114  1050  083E               	movf	??_print_json^(0+128),w
  5115  1051  00AC               	movwf	sprintf@f^(0+128)
  5116  1052  1283               	bcf	3,5	;RP0=0, select bank0
  5117  1053  1303               	bcf	3,6	;RP1=0, select bank0
  5118  1054  0840               	movf	_Data_atual+1,w
  5119  1055  1683               	bsf	3,5	;RP0=1, select bank1
  5120  1056  1303               	bcf	3,6	;RP1=0, select bank1
  5121  1057  00AE               	movwf	((?_sprintf+1)^(0+128)+3)
  5122  1058  1283               	bcf	3,5	;RP0=0, select bank0
  5123  1059  1303               	bcf	3,6	;RP1=0, select bank0
  5124  105A  083F               	movf	_Data_atual,w
  5125  105B  1683               	bsf	3,5	;RP0=1, select bank1
  5126  105C  1303               	bcf	3,6	;RP1=0, select bank1
  5127  105D  00AD               	movwf	(?_sprintf^(0+128)+3)
  5128  105E  1283               	bcf	3,5	;RP0=0, select bank0
  5129  105F  1303               	bcf	3,6	;RP1=0, select bank0
  5130  1060  0842               	movf	_Data_atual+3,w
  5131  1061  1683               	bsf	3,5	;RP0=1, select bank1
  5132  1062  1303               	bcf	3,6	;RP1=0, select bank1
  5133  1063  00B0               	movwf	((?_sprintf+1)^(0+128)+5)
  5134  1064  1283               	bcf	3,5	;RP0=0, select bank0
  5135  1065  1303               	bcf	3,6	;RP1=0, select bank0
  5136  1066  0841               	movf	_Data_atual+2,w
  5137  1067  1683               	bsf	3,5	;RP0=1, select bank1
  5138  1068  1303               	bcf	3,6	;RP1=0, select bank1
  5139  1069  00AF               	movwf	(?_sprintf^(0+128)+5)
  5140  106A  1283               	bcf	3,5	;RP0=0, select bank0
  5141  106B  1303               	bcf	3,6	;RP1=0, select bank0
  5142  106C  0844               	movf	_Data_atual+5,w
  5143  106D  1683               	bsf	3,5	;RP0=1, select bank1
  5144  106E  1303               	bcf	3,6	;RP1=0, select bank1
  5145  106F  00B2               	movwf	((?_sprintf+1)^(0+128)+7)
  5146  1070  1283               	bcf	3,5	;RP0=0, select bank0
  5147  1071  1303               	bcf	3,6	;RP1=0, select bank0
  5148  1072  0843               	movf	_Data_atual+4,w
  5149  1073  1683               	bsf	3,5	;RP0=1, select bank1
  5150  1074  1303               	bcf	3,6	;RP1=0, select bank1
  5151  1075  00B1               	movwf	(?_sprintf^(0+128)+7)
  5152  1076  1283               	bcf	3,5	;RP0=0, select bank0
  5153  1077  1303               	bcf	3,6	;RP1=0, select bank0
  5154  1078  0846               	movf	_Data_atual+7,w
  5155  1079  1683               	bsf	3,5	;RP0=1, select bank1
  5156  107A  1303               	bcf	3,6	;RP1=0, select bank1
  5157  107B  00B4               	movwf	((?_sprintf+1)^(0+128)+9)
  5158  107C  1283               	bcf	3,5	;RP0=0, select bank0
  5159  107D  1303               	bcf	3,6	;RP1=0, select bank0
  5160  107E  0845               	movf	_Data_atual+6,w
  5161  107F  1683               	bsf	3,5	;RP0=1, select bank1
  5162  1080  1303               	bcf	3,6	;RP1=0, select bank1
  5163  1081  00B3               	movwf	(?_sprintf^(0+128)+9)
  5164  1082  120A  158A  2246  160A  118A  	fcall	_sprintf
  5165                           
  5166                           ;main.c: 105:     {
  5167  1087  3010               	movlw	(low (_json| (0+256)))& (0+255)
  5168  1088  1283               	bcf	3,5	;RP0=0, select bank0
  5169  1089  1303               	bcf	3,6	;RP1=0, select bank0
  5170  108A  00BC               	movwf	UART_Write_Text@text
  5171  108B  3001               	movlw	1
  5172  108C  00BD               	movwf	UART_Write_Text@text+1
  5173  108D  160A  118A  20FD  160A  118A  	fcall	_UART_Write_Text
  5174                           
  5175                           ;main.c: 106:       count_timer_fan_speed=0;
  5176  1092  3095               	movlw	(low (((STR_7+16)-__stringbase)| (0+32768)))& (0+255)
  5177  1093  1283               	bcf	3,5	;RP0=0, select bank0
  5178  1094  1303               	bcf	3,6	;RP1=0, select bank0
  5179  1095  00BC               	movwf	UART_Write_Text@text
  5180  1096  3080               	movlw	128
  5181  1097  00BD               	movwf	UART_Write_Text@text+1
  5182  1098  160A  118A  20FD  160A  118A  	fcall	_UART_Write_Text
  5183  109D                     l140:	
  5184  109D  0008               	return
  5185  109E                     __end_of_print_json:	
  5186                           
  5187                           	psect	text20
  5188  0A46                     __ptext20:	
  5189 ;; *************** function _sprintf *****************
  5190 ;; Defined at:
  5191 ;;		line 505 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  5192 ;; Parameters:    Size  Location     Type
  5193 ;;  sp              2   10[BANK1 ] PTR unsigned char 
  5194 ;;		 -> UART_Write_Decimal@string(10), json(80), 
  5195 ;;  f               1   12[BANK1 ] PTR const unsigned char 
  5196 ;;		 -> STR_20(3), STR_1(74), 
  5197 ;; Auto vars:     Size  Location     Type
  5198 ;;  tmpval          4    0        struct .
  5199 ;;  val             2   27[BANK1 ] unsigned int 
  5200 ;;  cp              2    0        PTR const unsigned char 
  5201 ;;  len             2    0        unsigned int 
  5202 ;;  c               1   29[BANK1 ] unsigned char 
  5203 ;;  prec            1   26[BANK1 ] char 
  5204 ;;  flag            1   25[BANK1 ] unsigned char 
  5205 ;;  ap              1   24[BANK1 ] PTR void [1]
  5206 ;;		 -> ?_sprintf(2), 
  5207 ;; Return value:  Size  Location     Type
  5208 ;;                  2   10[BANK1 ] int 
  5209 ;; Registers used:
  5210 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5211 ;; Tracked objects:
  5212 ;;		On entry : 0/0
  5213 ;;		On exit  : 0/0
  5214 ;;		Unchanged: 0/0
  5215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5216 ;;      Params:         0       0      11       0       0
  5217 ;;      Locals:         0       0       6       0       0
  5218 ;;      Temps:          0       0       3       0       0
  5219 ;;      Totals:         0       0      20       0       0
  5220 ;;Total ram usage:       20 bytes
  5221 ;; Hardware stack levels used:    1
  5222 ;; Hardware stack levels required when called:    5
  5223 ;; This function calls:
  5224 ;;		___lwdiv
  5225 ;;		___lwmod
  5226 ;; This function is called by:
  5227 ;;		_print_json
  5228 ;;		_UART_Write_Decimal
  5229 ;; This function uses a non-reentrant model
  5230 ;;
  5231                           
  5232                           
  5233                           ;psect for function _sprintf
  5234  0A46                     _sprintf:	
  5235  0A46                     l3784:	
  5236                           ;incstack = 0
  5237 ;; using string table level
  5238                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5239                           
  5240                           
  5241                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 505: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources
      +                          \c90\common\doprnt.c: 506: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\
      +                          common\doprnt.c: 507:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\source
      +                          s\c90\common\doprnt.c: 512:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c90\common\doprnt.c: 521:  signed char prec;;C:\Program Files (x86)\Microchip\xc8\v2
      +                          .10\pic\sources\c90\common\doprnt.c: 525:  unsigned char flag;
  5242  0A46  30AD               	movlw	(low ((?_sprintf| 0+3)))& (0+255)
  5243  0A47  1683               	bsf	3,5	;RP0=1, select bank1
  5244  0A48  1303               	bcf	3,6	;RP1=0, select bank1
  5245  0A49  00B5               	movwf	??_sprintf^(0+128)
  5246  0A4A  0835               	movf	??_sprintf^(0+128),w
  5247  0A4B  00B8               	movwf	sprintf@ap^(0+128)
  5248                           
  5249                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  5250  0A4C  2B34               	goto	l3836
  5251  0A4D                     l3786:	
  5252                           
  5253                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 555:   if(c
      +                           != '%')
  5254  0A4D  3025               	movlw	37
  5255  0A4E  063D               	xorwf	sprintf@c^(0+128),w
  5256  0A4F  1903               	btfsc	3,2
  5257  0A50  2A52               	goto	u5151
  5258  0A51  2A53               	goto	u5150
  5259  0A52                     u5151:	
  5260  0A52  2A63               	goto	l3792
  5261  0A53                     u5150:	
  5262  0A53                     l3788:	
  5263                           
  5264                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 557:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 558:    ((*sp+
      +                          + = (c)));
  5265  0A53  083D               	movf	sprintf@c^(0+128),w
  5266  0A54  00B5               	movwf	??_sprintf^(0+128)
  5267  0A55  082A               	movf	sprintf@sp^(0+128),w
  5268  0A56  0084               	movwf	4
  5269  0A57  1783               	bsf	3,7
  5270  0A58  1C2B               	btfss	(sprintf@sp+1)^(0+128),0
  5271  0A59  1383               	bcf	3,7
  5272  0A5A  0835               	movf	??_sprintf^(0+128),w
  5273  0A5B  0080               	movwf	0
  5274  0A5C                     l3790:	
  5275  0A5C  3001               	movlw	1
  5276  0A5D  07AA               	addwf	sprintf@sp^(0+128),f
  5277  0A5E  1803               	skipnc
  5278  0A5F  0AAB               	incf	(sprintf@sp+1)^(0+128),f
  5279  0A60  3000               	movlw	0
  5280  0A61  07AB               	addwf	(sprintf@sp+1)^(0+128),f
  5281                           
  5282                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 559:    con
      +                          tinue;
  5283  0A62  2B34               	goto	l3836
  5284  0A63                     l3792:	
  5285                           
  5286                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 565:   flag
      +                           = 0;
  5287  0A63  01B9               	clrf	sprintf@flag^(0+128)
  5288  0A64                     l3796:	
  5289                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 661:   swit
      +                          ch(c = *f++) {
  5290                           
  5291  0A64  3001               	movlw	1
  5292  0A65  07AC               	addwf	sprintf@f^(0+128),f
  5293  0A66  30FF               	movlw	-1
  5294  0A67  072C               	addwf	sprintf@f^(0+128),w
  5295  0A68  0084               	movwf	4
  5296  0A69  120A  158A  200A  120A  158A  	fcall	stringdir
  5297  0A6E  00BD               	movwf	sprintf@c^(0+128)
  5298  0A6F  00B5               	movwf	??_sprintf^(0+128)
  5299  0A70  01B6               	clrf	(??_sprintf^(0+128)+1)
  5300                           
  5301                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5302                           ; Switch size 1, requested type "simple"
  5303                           ; Number of cases is 1, Range of values is 0 to 0
  5304                           ; switch strategies available:
  5305                           ; Name         Instructions Cycles
  5306                           ; simple_byte            4     3 (average)
  5307                           ; direct_byte           11     8 (fixed)
  5308                           ; jumptable            260     6 (fixed)
  5309                           ;	Chosen strategy is simple_byte
  5310  0A71  0836               	movf	(??_sprintf+1)^(0+128),w
  5311  0A72  3A00               	xorlw	0	; case 0
  5312  0A73  1903               	skipnz
  5313  0A74  2A76               	goto	l4932
  5314  0A75  2B34               	goto	l3836
  5315  0A76                     l4932:	
  5316                           
  5317                           ; Switch size 1, requested type "simple"
  5318                           ; Number of cases is 3, Range of values is 0 to 105
  5319                           ; switch strategies available:
  5320                           ; Name         Instructions Cycles
  5321                           ; simple_byte           10     6 (average)
  5322                           ; jumptable            260     6 (fixed)
  5323                           ;	Chosen strategy is simple_byte
  5324  0A76  0835               	movf	??_sprintf^(0+128),w
  5325  0A77  3A00               	xorlw	0	; case 0
  5326  0A78  1903               	skipnz
  5327  0A79  2B46               	goto	l3838
  5328  0A7A  3A64               	xorlw	100	; case 100
  5329  0A7B  1903               	skipnz
  5330  0A7C  2A81               	goto	l3798
  5331  0A7D  3A0D               	xorlw	13	; case 105
  5332  0A7E  1903               	skipnz
  5333  0A7F  2A81               	goto	l3798
  5334  0A80  2B34               	goto	l3836
  5335  0A81                     l3798:	
  5336                           
  5337                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1279:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1285:     val
      +                           = (unsigned int)(*(int *)__va_arg((*(int **)ap), (int)0));
  5338  0A81  0838               	movf	sprintf@ap^(0+128),w
  5339  0A82  0084               	movwf	4
  5340  0A83  1383               	bcf	3,7	;select IRP bank0
  5341  0A84  0800               	movf	0,w
  5342  0A85  00BB               	movwf	sprintf@val^(0+128)
  5343  0A86  0A84               	incf	4,f
  5344  0A87  0800               	movf	0,w
  5345  0A88  00BC               	movwf	(sprintf@val+1)^(0+128)
  5346  0A89                     l3800:	
  5347  0A89  3002               	movlw	2
  5348  0A8A  00B5               	movwf	??_sprintf^(0+128)
  5349  0A8B  0835               	movf	??_sprintf^(0+128),w
  5350  0A8C  07B8               	addwf	sprintf@ap^(0+128),f
  5351  0A8D                     l3802:	
  5352                           
  5353                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1287:    if
      +                          ((int)val < 0) {
  5354  0A8D  1FBC               	btfss	(sprintf@val+1)^(0+128),7
  5355  0A8E  2A90               	goto	u5161
  5356  0A8F  2A91               	goto	u5160
  5357  0A90                     u5161:	
  5358  0A90  2A9A               	goto	l3808
  5359  0A91                     u5160:	
  5360  0A91                     l3804:	
  5361                           
  5362                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1288:     f
      +                          lag |= 0x03;
  5363  0A91  3003               	movlw	3
  5364  0A92  00B5               	movwf	??_sprintf^(0+128)
  5365  0A93  0835               	movf	??_sprintf^(0+128),w
  5366  0A94  04B9               	iorwf	sprintf@flag^(0+128),f
  5367  0A95                     l3806:	
  5368                           
  5369                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1289:     v
      +                          al = -val;
  5370  0A95  09BB               	comf	sprintf@val^(0+128),f
  5371  0A96  09BC               	comf	(sprintf@val+1)^(0+128),f
  5372  0A97  0ABB               	incf	sprintf@val^(0+128),f
  5373  0A98  1903               	skipnz
  5374  0A99  0ABC               	incf	(sprintf@val+1)^(0+128),f
  5375  0A9A                     l3808:	
  5376                           
  5377                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1292:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1331:    for(
      +                          c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  5378  0A9A  01BD               	clrf	sprintf@c^(0+128)
  5379  0A9B  0ABD               	incf	sprintf@c^(0+128),f
  5380  0A9C                     l3814:	
  5381                           
  5382                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1332:     i
      +                          f(val < dpowers[c])
  5383  0A9C  083D               	movf	sprintf@c^(0+128),w
  5384  0A9D  00B5               	movwf	??_sprintf^(0+128)
  5385  0A9E  0735               	addwf	??_sprintf^(0+128),w
  5386  0A9F  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  5387  0AA0  0084               	movwf	4
  5388  0AA1  120A  158A  200A  120A  158A  	fcall	stringdir
  5389  0AA6  00B6               	movwf	(??_sprintf+1)^(0+128)
  5390  0AA7  120A  158A  200A  120A  158A  	fcall	stringdir
  5391  0AAC  00B7               	movwf	((??_sprintf+1)^(0+128)+1)
  5392  0AAD  0837               	movf	(??_sprintf+2)^(0+128),w
  5393  0AAE  023C               	subwf	(sprintf@val+1)^(0+128),w
  5394  0AAF  1D03               	skipz
  5395  0AB0  2AB3               	goto	u5175
  5396  0AB1  0836               	movf	(??_sprintf+1)^(0+128),w
  5397  0AB2  023B               	subwf	sprintf@val^(0+128),w
  5398  0AB3                     u5175:	
  5399  0AB3  1803               	skipnc
  5400  0AB4  2AB6               	goto	u5171
  5401  0AB5  2AB7               	goto	u5170
  5402  0AB6                     u5171:	
  5403  0AB6  2AB8               	goto	l3818
  5404  0AB7                     u5170:	
  5405  0AB7  2AC2               	goto	l3820
  5406  0AB8                     l3818:	
  5407  0AB8  3001               	movlw	1
  5408  0AB9  00B5               	movwf	??_sprintf^(0+128)
  5409  0ABA  0835               	movf	??_sprintf^(0+128),w
  5410  0ABB  07BD               	addwf	sprintf@c^(0+128),f
  5411  0ABC  3005               	movlw	5
  5412  0ABD  063D               	xorwf	sprintf@c^(0+128),w
  5413  0ABE  1D03               	btfss	3,2
  5414  0ABF  2AC1               	goto	u5181
  5415  0AC0  2AC2               	goto	u5180
  5416  0AC1                     u5181:	
  5417  0AC1  2A9C               	goto	l3814
  5418  0AC2                     u5180:	
  5419  0AC2                     l3820:	
  5420                           
  5421                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1448:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1464:    if(f
      +                          lag & 0x03)
  5422  0AC2  0839               	movf	sprintf@flag^(0+128),w
  5423  0AC3  3903               	andlw	3
  5424  0AC4  1903               	btfsc	3,2
  5425  0AC5  2AC7               	goto	u5191
  5426  0AC6  2AC8               	goto	u5190
  5427  0AC7                     u5191:	
  5428  0AC7  2AD7               	goto	l3826
  5429  0AC8                     u5190:	
  5430  0AC8                     l3822:	
  5431                           
  5432                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1465:     (
      +                          (*sp++ = ('-')));
  5433  0AC8  302D               	movlw	45
  5434  0AC9  00B5               	movwf	??_sprintf^(0+128)
  5435  0ACA  082A               	movf	sprintf@sp^(0+128),w
  5436  0ACB  0084               	movwf	4
  5437  0ACC  1783               	bsf	3,7
  5438  0ACD  1C2B               	btfss	(sprintf@sp+1)^(0+128),0
  5439  0ACE  1383               	bcf	3,7
  5440  0ACF  0835               	movf	??_sprintf^(0+128),w
  5441  0AD0  0080               	movwf	0
  5442  0AD1                     l3824:	
  5443  0AD1  3001               	movlw	1
  5444  0AD2  07AA               	addwf	sprintf@sp^(0+128),f
  5445  0AD3  1803               	skipnc
  5446  0AD4  0AAB               	incf	(sprintf@sp+1)^(0+128),f
  5447  0AD5  3000               	movlw	0
  5448  0AD6  07AB               	addwf	(sprintf@sp+1)^(0+128),f
  5449  0AD7                     l3826:	
  5450                           
  5451                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1495:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1498:   prec 
      +                          = c;
  5452  0AD7  083D               	movf	sprintf@c^(0+128),w
  5453  0AD8  00B5               	movwf	??_sprintf^(0+128)
  5454  0AD9  0835               	movf	??_sprintf^(0+128),w
  5455  0ADA  00BA               	movwf	sprintf@prec^(0+128)
  5456                           
  5457                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1500:   whi
      +                          le(prec--) {
  5458  0ADB  2B2B               	goto	l3834
  5459  0ADC                     l3828:	
  5460                           
  5461                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1504:    {;
      +                          C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1515:     c 
      +                          = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  5462  0ADC  300A               	movlw	10
  5463  0ADD  00A4               	movwf	___lwmod@divisor^(0+128)
  5464  0ADE  3000               	movlw	0
  5465  0ADF  00A5               	movwf	(___lwmod@divisor^(0+128)+1)
  5466  0AE0  083A               	movf	sprintf@prec^(0+128),w
  5467  0AE1  00B5               	movwf	??_sprintf^(0+128)
  5468  0AE2  0735               	addwf	??_sprintf^(0+128),w
  5469  0AE3  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  5470  0AE4  0084               	movwf	4
  5471  0AE5  120A  158A  200A  120A  158A  	fcall	stringdir
  5472  0AEA  1283               	bcf	3,5	;RP0=0, select bank0
  5473  0AEB  1303               	bcf	3,6	;RP1=0, select bank0
  5474  0AEC  00BB               	movwf	___lwdiv@divisor
  5475  0AED  120A  158A  200A  120A  158A  	fcall	stringdir
  5476  0AF2  00BC               	movwf	___lwdiv@divisor+1
  5477  0AF3  1683               	bsf	3,5	;RP0=1, select bank1
  5478  0AF4  1303               	bcf	3,6	;RP1=0, select bank1
  5479  0AF5  083C               	movf	(sprintf@val+1)^(0+128),w
  5480  0AF6  1283               	bcf	3,5	;RP0=0, select bank0
  5481  0AF7  1303               	bcf	3,6	;RP1=0, select bank0
  5482  0AF8  00BE               	movwf	___lwdiv@dividend+1
  5483  0AF9  1683               	bsf	3,5	;RP0=1, select bank1
  5484  0AFA  1303               	bcf	3,6	;RP1=0, select bank1
  5485  0AFB  083B               	movf	sprintf@val^(0+128),w
  5486  0AFC  1283               	bcf	3,5	;RP0=0, select bank0
  5487  0AFD  1303               	bcf	3,6	;RP1=0, select bank0
  5488  0AFE  00BD               	movwf	___lwdiv@dividend
  5489  0AFF  160A  118A  209E  120A  158A  	fcall	___lwdiv
  5490  0B04  1283               	bcf	3,5	;RP0=0, select bank0
  5491  0B05  1303               	bcf	3,6	;RP1=0, select bank0
  5492  0B06  083C               	movf	?___lwdiv+1,w
  5493  0B07  1683               	bsf	3,5	;RP0=1, select bank1
  5494  0B08  1303               	bcf	3,6	;RP1=0, select bank1
  5495  0B09  00A7               	movwf	(___lwmod@dividend+1)^(0+128)
  5496  0B0A  1283               	bcf	3,5	;RP0=0, select bank0
  5497  0B0B  1303               	bcf	3,6	;RP1=0, select bank0
  5498  0B0C  083B               	movf	?___lwdiv,w
  5499  0B0D  1683               	bsf	3,5	;RP0=1, select bank1
  5500  0B0E  1303               	bcf	3,6	;RP1=0, select bank1
  5501  0B0F  00A6               	movwf	___lwmod@dividend^(0+128)
  5502  0B10  160A  158A  26A5  120A  158A  	fcall	___lwmod
  5503  0B15  1683               	bsf	3,5	;RP0=1, select bank1
  5504  0B16  1303               	bcf	3,6	;RP1=0, select bank1
  5505  0B17  0824               	movf	?___lwmod^(0+128),w
  5506  0B18  3E30               	addlw	48
  5507  0B19  00B6               	movwf	(??_sprintf+1)^(0+128)
  5508  0B1A  0836               	movf	(??_sprintf+1)^(0+128),w
  5509  0B1B  00BD               	movwf	sprintf@c^(0+128)
  5510  0B1C                     l3830:	
  5511                           
  5512                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1549:    };
      +                          C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1550:    ((*
      +                          sp++ = (c)));
  5513  0B1C  083D               	movf	sprintf@c^(0+128),w
  5514  0B1D  00B5               	movwf	??_sprintf^(0+128)
  5515  0B1E  082A               	movf	sprintf@sp^(0+128),w
  5516  0B1F  0084               	movwf	4
  5517  0B20  1783               	bsf	3,7
  5518  0B21  1C2B               	btfss	(sprintf@sp+1)^(0+128),0
  5519  0B22  1383               	bcf	3,7
  5520  0B23  0835               	movf	??_sprintf^(0+128),w
  5521  0B24  0080               	movwf	0
  5522  0B25                     l3832:	
  5523  0B25  3001               	movlw	1
  5524  0B26  07AA               	addwf	sprintf@sp^(0+128),f
  5525  0B27  1803               	skipnc
  5526  0B28  0AAB               	incf	(sprintf@sp+1)^(0+128),f
  5527  0B29  3000               	movlw	0
  5528  0B2A  07AB               	addwf	(sprintf@sp+1)^(0+128),f
  5529  0B2B                     l3834:	
  5530                           
  5531                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1500:   whi
      +                          le(prec--) {
  5532  0B2B  30FF               	movlw	255
  5533  0B2C  00B5               	movwf	??_sprintf^(0+128)
  5534  0B2D  0835               	movf	??_sprintf^(0+128),w
  5535  0B2E  07BA               	addwf	sprintf@prec^(0+128),f
  5536  0B2F  0A3A               	incf	sprintf@prec^(0+128),w
  5537  0B30  1D03               	btfss	3,2
  5538  0B31  2B33               	goto	u5201
  5539  0B32  2B34               	goto	u5200
  5540  0B33                     u5201:	
  5541  0B33  2ADC               	goto	l3828
  5542  0B34                     u5200:	
  5543  0B34                     l3836:	
  5544                           
  5545                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  5546  0B34  3001               	movlw	1
  5547  0B35  07AC               	addwf	sprintf@f^(0+128),f
  5548  0B36  30FF               	movlw	-1
  5549  0B37  072C               	addwf	sprintf@f^(0+128),w
  5550  0B38  0084               	movwf	4
  5551  0B39  120A  158A  200A  120A  158A  	fcall	stringdir
  5552  0B3E  00B5               	movwf	??_sprintf^(0+128)
  5553  0B3F  0835               	movf	??_sprintf^(0+128),w
  5554  0B40  00BD               	movwf	sprintf@c^(0+128)
  5555  0B41  083D               	movf	sprintf@c^(0+128),w
  5556  0B42  1D03               	btfss	3,2
  5557  0B43  2B45               	goto	u5211
  5558  0B44  2B46               	goto	u5210
  5559  0B45                     u5211:	
  5560  0B45  2A4D               	goto	l3786
  5561  0B46                     u5210:	
  5562  0B46                     l3838:	
  5563                           
  5564                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1564:  *sp 
      +                          = 0;
  5565  0B46  082A               	movf	sprintf@sp^(0+128),w
  5566  0B47  0084               	movwf	4
  5567  0B48  1783               	bsf	3,7
  5568  0B49  1C2B               	btfss	(sprintf@sp+1)^(0+128),0
  5569  0B4A  1383               	bcf	3,7
  5570  0B4B  0180               	clrf	0
  5571  0B4C                     l494:	
  5572  0B4C  0008               	return
  5573  0B4D                     __end_of_sprintf:	
  5574                           
  5575                           	psect	text21
  5576  1EA5                     __ptext21:	
  5577 ;; *************** function ___lwmod *****************
  5578 ;; Defined at:
  5579 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  5580 ;; Parameters:    Size  Location     Type
  5581 ;;  divisor         2    4[BANK1 ] unsigned int 
  5582 ;;  dividend        2    6[BANK1 ] unsigned int 
  5583 ;; Auto vars:     Size  Location     Type
  5584 ;;  counter         1    9[BANK1 ] unsigned char 
  5585 ;; Return value:  Size  Location     Type
  5586 ;;                  2    4[BANK1 ] unsigned int 
  5587 ;; Registers used:
  5588 ;;		wreg, status,2, status,0
  5589 ;; Tracked objects:
  5590 ;;		On entry : 0/0
  5591 ;;		On exit  : 0/0
  5592 ;;		Unchanged: 0/0
  5593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5594 ;;      Params:         0       0       4       0       0
  5595 ;;      Locals:         0       0       1       0       0
  5596 ;;      Temps:          0       0       1       0       0
  5597 ;;      Totals:         0       0       6       0       0
  5598 ;;Total ram usage:        6 bytes
  5599 ;; Hardware stack levels used:    1
  5600 ;; Hardware stack levels required when called:    4
  5601 ;; This function calls:
  5602 ;;		Nothing
  5603 ;; This function is called by:
  5604 ;;		_sprintf
  5605 ;; This function uses a non-reentrant model
  5606 ;;
  5607                           
  5608                           
  5609                           ;psect for function ___lwmod
  5610  1EA5                     ___lwmod:	
  5611  1EA5                     l3762:	
  5612                           ;incstack = 0
  5613                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5614                           
  5615  1EA5  1683               	bsf	3,5	;RP0=1, select bank1
  5616  1EA6  1303               	bcf	3,6	;RP1=0, select bank1
  5617  1EA7  0824               	movf	___lwmod@divisor^(0+128),w
  5618  1EA8  0425               	iorwf	(___lwmod@divisor+1)^(0+128),w
  5619  1EA9  1903               	btfsc	3,2
  5620  1EAA  2EAC               	goto	u5091
  5621  1EAB  2EAD               	goto	u5090
  5622  1EAC                     u5091:	
  5623  1EAC  2EDC               	goto	l3780
  5624  1EAD                     u5090:	
  5625  1EAD                     l3764:	
  5626  1EAD  01A9               	clrf	___lwmod@counter^(0+128)
  5627  1EAE  0AA9               	incf	___lwmod@counter^(0+128),f
  5628  1EAF  2EBB               	goto	l3770
  5629  1EB0                     l3766:	
  5630  1EB0  3001               	movlw	1
  5631  1EB1                     u5105:	
  5632  1EB1  1003               	clrc
  5633  1EB2  0DA4               	rlf	___lwmod@divisor^(0+128),f
  5634  1EB3  0DA5               	rlf	(___lwmod@divisor+1)^(0+128),f
  5635  1EB4  3EFF               	addlw	-1
  5636  1EB5  1D03               	skipz
  5637  1EB6  2EB1               	goto	u5105
  5638  1EB7                     l3768:	
  5639  1EB7  3001               	movlw	1
  5640  1EB8  00A8               	movwf	??___lwmod^(0+128)
  5641  1EB9  0828               	movf	??___lwmod^(0+128),w
  5642  1EBA  07A9               	addwf	___lwmod@counter^(0+128),f
  5643  1EBB                     l3770:	
  5644  1EBB  1FA5               	btfss	(___lwmod@divisor+1)^(0+128),7
  5645  1EBC  2EBE               	goto	u5111
  5646  1EBD  2EBF               	goto	u5110
  5647  1EBE                     u5111:	
  5648  1EBE  2EB0               	goto	l3766
  5649  1EBF                     u5110:	
  5650  1EBF                     l3772:	
  5651  1EBF  0825               	movf	(___lwmod@divisor+1)^(0+128),w
  5652  1EC0  0227               	subwf	(___lwmod@dividend+1)^(0+128),w
  5653  1EC1  1D03               	skipz
  5654  1EC2  2EC5               	goto	u5125
  5655  1EC3  0824               	movf	___lwmod@divisor^(0+128),w
  5656  1EC4  0226               	subwf	___lwmod@dividend^(0+128),w
  5657  1EC5                     u5125:	
  5658  1EC5  1C03               	skipc
  5659  1EC6  2EC8               	goto	u5121
  5660  1EC7  2EC9               	goto	u5120
  5661  1EC8                     u5121:	
  5662  1EC8  2ECF               	goto	l3776
  5663  1EC9                     u5120:	
  5664  1EC9                     l3774:	
  5665  1EC9  0824               	movf	___lwmod@divisor^(0+128),w
  5666  1ECA  02A6               	subwf	___lwmod@dividend^(0+128),f
  5667  1ECB  0825               	movf	(___lwmod@divisor+1)^(0+128),w
  5668  1ECC  1C03               	skipc
  5669  1ECD  03A7               	decf	(___lwmod@dividend+1)^(0+128),f
  5670  1ECE  02A7               	subwf	(___lwmod@dividend+1)^(0+128),f
  5671  1ECF                     l3776:	
  5672  1ECF  3001               	movlw	1
  5673  1ED0                     u5135:	
  5674  1ED0  1003               	clrc
  5675  1ED1  0CA5               	rrf	(___lwmod@divisor+1)^(0+128),f
  5676  1ED2  0CA4               	rrf	___lwmod@divisor^(0+128),f
  5677  1ED3  3EFF               	addlw	-1
  5678  1ED4  1D03               	skipz
  5679  1ED5  2ED0               	goto	u5135
  5680  1ED6                     l3778:	
  5681  1ED6  3001               	movlw	1
  5682  1ED7  02A9               	subwf	___lwmod@counter^(0+128),f
  5683  1ED8  1D03               	btfss	3,2
  5684  1ED9  2EDB               	goto	u5141
  5685  1EDA  2EDC               	goto	u5140
  5686  1EDB                     u5141:	
  5687  1EDB  2EBF               	goto	l3772
  5688  1EDC                     u5140:	
  5689  1EDC                     l3780:	
  5690  1EDC  0827               	movf	(___lwmod@dividend+1)^(0+128),w
  5691  1EDD  00A5               	movwf	(?___lwmod+1)^(0+128)
  5692  1EDE  0826               	movf	___lwmod@dividend^(0+128),w
  5693  1EDF  00A4               	movwf	?___lwmod^(0+128)
  5694  1EE0                     l780:	
  5695  1EE0  0008               	return
  5696  1EE1                     __end_of___lwmod:	
  5697                           
  5698                           	psect	text22
  5699  109E                     __ptext22:	
  5700 ;; *************** function ___lwdiv *****************
  5701 ;; Defined at:
  5702 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  5703 ;; Parameters:    Size  Location     Type
  5704 ;;  divisor         2   27[BANK0 ] unsigned int 
  5705 ;;  dividend        2   29[BANK0 ] unsigned int 
  5706 ;; Auto vars:     Size  Location     Type
  5707 ;;  quotient        2    2[BANK1 ] unsigned int 
  5708 ;;  counter         1    1[BANK1 ] unsigned char 
  5709 ;; Return value:  Size  Location     Type
  5710 ;;                  2   27[BANK0 ] unsigned int 
  5711 ;; Registers used:
  5712 ;;		wreg, status,2, status,0
  5713 ;; Tracked objects:
  5714 ;;		On entry : 0/0
  5715 ;;		On exit  : 0/0
  5716 ;;		Unchanged: 0/0
  5717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5718 ;;      Params:         0       4       0       0       0
  5719 ;;      Locals:         0       0       3       0       0
  5720 ;;      Temps:          0       0       1       0       0
  5721 ;;      Totals:         0       4       4       0       0
  5722 ;;Total ram usage:        8 bytes
  5723 ;; Hardware stack levels used:    1
  5724 ;; Hardware stack levels required when called:    4
  5725 ;; This function calls:
  5726 ;;		Nothing
  5727 ;; This function is called by:
  5728 ;;		_sprintf
  5729 ;; This function uses a non-reentrant model
  5730 ;;
  5731                           
  5732                           
  5733                           ;psect for function ___lwdiv
  5734  109E                     ___lwdiv:	
  5735  109E                     l3736:	
  5736                           ;incstack = 0
  5737                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5738                           
  5739  109E  1683               	bsf	3,5	;RP0=1, select bank1
  5740  109F  1303               	bcf	3,6	;RP1=0, select bank1
  5741  10A0  01A2               	clrf	___lwdiv@quotient^(0+128)
  5742  10A1  01A3               	clrf	(___lwdiv@quotient+1)^(0+128)
  5743  10A2                     l3738:	
  5744  10A2  1283               	bcf	3,5	;RP0=0, select bank0
  5745  10A3  1303               	bcf	3,6	;RP1=0, select bank0
  5746  10A4  083B               	movf	___lwdiv@divisor,w
  5747  10A5  043C               	iorwf	___lwdiv@divisor+1,w
  5748  10A6  1903               	btfsc	3,2
  5749  10A7  28A9               	goto	u5021
  5750  10A8  28AA               	goto	u5020
  5751  10A9                     u5021:	
  5752  10A9  28F0               	goto	l3758
  5753  10AA                     u5020:	
  5754  10AA                     l3740:	
  5755  10AA  1683               	bsf	3,5	;RP0=1, select bank1
  5756  10AB  1303               	bcf	3,6	;RP1=0, select bank1
  5757  10AC  01A1               	clrf	___lwdiv@counter^(0+128)
  5758  10AD  0AA1               	incf	___lwdiv@counter^(0+128),f
  5759  10AE  28BC               	goto	l3746
  5760  10AF                     l3742:	
  5761  10AF  3001               	movlw	1
  5762  10B0                     u5035:	
  5763  10B0  1003               	clrc
  5764  10B1  0DBB               	rlf	___lwdiv@divisor,f
  5765  10B2  0DBC               	rlf	___lwdiv@divisor+1,f
  5766  10B3  3EFF               	addlw	-1
  5767  10B4  1D03               	skipz
  5768  10B5  28B0               	goto	u5035
  5769  10B6                     l3744:	
  5770  10B6  3001               	movlw	1
  5771  10B7  1683               	bsf	3,5	;RP0=1, select bank1
  5772  10B8  1303               	bcf	3,6	;RP1=0, select bank1
  5773  10B9  00A0               	movwf	??___lwdiv^(0+128)
  5774  10BA  0820               	movf	??___lwdiv^(0+128),w
  5775  10BB  07A1               	addwf	___lwdiv@counter^(0+128),f
  5776  10BC                     l3746:	
  5777  10BC  1283               	bcf	3,5	;RP0=0, select bank0
  5778  10BD  1303               	bcf	3,6	;RP1=0, select bank0
  5779  10BE  1FBC               	btfss	___lwdiv@divisor+1,7
  5780  10BF  28C1               	goto	u5041
  5781  10C0  28C2               	goto	u5040
  5782  10C1                     u5041:	
  5783  10C1  28AF               	goto	l3742
  5784  10C2                     u5040:	
  5785  10C2                     l3748:	
  5786  10C2  3001               	movlw	1
  5787  10C3  1683               	bsf	3,5	;RP0=1, select bank1
  5788  10C4  1303               	bcf	3,6	;RP1=0, select bank1
  5789  10C5                     u5055:	
  5790  10C5  1003               	clrc
  5791  10C6  0DA2               	rlf	___lwdiv@quotient^(0+128),f
  5792  10C7  0DA3               	rlf	(___lwdiv@quotient+1)^(0+128),f
  5793  10C8  3EFF               	addlw	-1
  5794  10C9  1D03               	skipz
  5795  10CA  28C5               	goto	u5055
  5796  10CB  1283               	bcf	3,5	;RP0=0, select bank0
  5797  10CC  1303               	bcf	3,6	;RP1=0, select bank0
  5798  10CD  083C               	movf	___lwdiv@divisor+1,w
  5799  10CE  023E               	subwf	___lwdiv@dividend+1,w
  5800  10CF  1D03               	skipz
  5801  10D0  28D3               	goto	u5065
  5802  10D1  083B               	movf	___lwdiv@divisor,w
  5803  10D2  023D               	subwf	___lwdiv@dividend,w
  5804  10D3                     u5065:	
  5805  10D3  1C03               	skipc
  5806  10D4  28D6               	goto	u5061
  5807  10D5  28D7               	goto	u5060
  5808  10D6                     u5061:	
  5809  10D6  28E0               	goto	l3754
  5810  10D7                     u5060:	
  5811  10D7                     l3750:	
  5812  10D7  083B               	movf	___lwdiv@divisor,w
  5813  10D8  02BD               	subwf	___lwdiv@dividend,f
  5814  10D9  083C               	movf	___lwdiv@divisor+1,w
  5815  10DA  1C03               	skipc
  5816  10DB  03BE               	decf	___lwdiv@dividend+1,f
  5817  10DC  02BE               	subwf	___lwdiv@dividend+1,f
  5818  10DD                     l3752:	
  5819  10DD  1683               	bsf	3,5	;RP0=1, select bank1
  5820  10DE  1303               	bcf	3,6	;RP1=0, select bank1
  5821  10DF  1422               	bsf	___lwdiv@quotient^(0+128),0
  5822  10E0                     l3754:	
  5823  10E0  3001               	movlw	1
  5824  10E1  1283               	bcf	3,5	;RP0=0, select bank0
  5825  10E2                     u5075:	
  5826  10E2  1003               	clrc
  5827  10E3  0CBC               	rrf	___lwdiv@divisor+1,f
  5828  10E4  0CBB               	rrf	___lwdiv@divisor,f
  5829  10E5  3EFF               	addlw	-1
  5830  10E6  1D03               	skipz
  5831  10E7  28E2               	goto	u5075
  5832  10E8                     l3756:	
  5833  10E8  3001               	movlw	1
  5834  10E9  1683               	bsf	3,5	;RP0=1, select bank1
  5835  10EA  1303               	bcf	3,6	;RP1=0, select bank1
  5836  10EB  02A1               	subwf	___lwdiv@counter^(0+128),f
  5837  10EC  1D03               	btfss	3,2
  5838  10ED  28EF               	goto	u5081
  5839  10EE  28F0               	goto	u5080
  5840  10EF                     u5081:	
  5841  10EF  28C2               	goto	l3748
  5842  10F0                     u5080:	
  5843  10F0                     l3758:	
  5844  10F0  1683               	bsf	3,5	;RP0=1, select bank1
  5845  10F1  1303               	bcf	3,6	;RP1=0, select bank1
  5846  10F2  0823               	movf	(___lwdiv@quotient+1)^(0+128),w
  5847  10F3  1283               	bcf	3,5	;RP0=0, select bank0
  5848  10F4  1303               	bcf	3,6	;RP1=0, select bank0
  5849  10F5  00BC               	movwf	?___lwdiv+1
  5850  10F6  1683               	bsf	3,5	;RP0=1, select bank1
  5851  10F7  1303               	bcf	3,6	;RP1=0, select bank1
  5852  10F8  0822               	movf	___lwdiv@quotient^(0+128),w
  5853  10F9  1283               	bcf	3,5	;RP0=0, select bank0
  5854  10FA  1303               	bcf	3,6	;RP1=0, select bank0
  5855  10FB  00BB               	movwf	?___lwdiv
  5856  10FC                     l770:	
  5857  10FC  0008               	return
  5858  10FD                     __end_of___lwdiv:	
  5859                           
  5860                           	psect	text23
  5861  10FD                     __ptext23:	
  5862 ;; *************** function _UART_Write_Text *****************
  5863 ;; Defined at:
  5864 ;;		line 42 in file "UART.c"
  5865 ;; Parameters:    Size  Location     Type
  5866 ;;  text            2   28[BANK0 ] PTR unsigned char 
  5867 ;;		 -> UART_Write_Decimal@string(10), STR_19(2), STR_18(19), STR_17(2), 
  5868 ;;		 -> STR_16(2), STR_15(17), STR_14(2), STR_13(2), 
  5869 ;;		 -> STR_12(17), read_from_EPPROM@data(10), STR_11(2), STR_10(11), 
  5870 ;;		 -> STR_9(2), STR_8(12), STR_7(18), STR_6(16), 
  5871 ;;		 -> STR_5(12), STR_4(2), STR_3(25), read_from_MR@output(8), 
  5872 ;;		 -> STR_2(2), json(80), 
  5873 ;; Auto vars:     Size  Location     Type
  5874 ;;  i               2    3[BANK1 ] int 
  5875 ;; Return value:  Size  Location     Type
  5876 ;;                  1    wreg      void 
  5877 ;; Registers used:
  5878 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5879 ;; Tracked objects:
  5880 ;;		On entry : 0/0
  5881 ;;		On exit  : 0/0
  5882 ;;		Unchanged: 0/0
  5883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5884 ;;      Params:         0       2       0       0       0
  5885 ;;      Locals:         0       0       2       0       0
  5886 ;;      Temps:          0       0       3       0       0
  5887 ;;      Totals:         0       2       5       0       0
  5888 ;;Total ram usage:        7 bytes
  5889 ;; Hardware stack levels used:    1
  5890 ;; Hardware stack levels required when called:    5
  5891 ;; This function calls:
  5892 ;;		_UART_Write
  5893 ;; This function is called by:
  5894 ;;		_print_json
  5895 ;;		_read_from_MR
  5896 ;;		_read_from_EPPROM
  5897 ;;		_main
  5898 ;;		_UART_Write_Decimal
  5899 ;; This function uses a non-reentrant model
  5900 ;;
  5901                           
  5902                           
  5903                           ;psect for function _UART_Write_Text
  5904  10FD                     _UART_Write_Text:	
  5905  10FD                     l3846:	
  5906                           ;incstack = 0
  5907 ;; using string table level
  5908                           ; Regs used in _UART_Write_Text: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5909                           
  5910                           
  5911                           ;UART.c: 42: void UART_Write_Text(char *text);UART.c: 43: {;UART.c: 44:   int i;;UART.c:
      +                           45:   for(i=0;text[i]!='\0';i++)
  5912  10FD  1683               	bsf	3,5	;RP0=1, select bank1
  5913  10FE  1303               	bcf	3,6	;RP1=0, select bank1
  5914  10FF  01A3               	clrf	UART_Write_Text@i^(0+128)
  5915  1100  01A4               	clrf	(UART_Write_Text@i+1)^(0+128)
  5916  1101  2936               	goto	l3852
  5917  1102                     l3848:	
  5918                           
  5919                           ;UART.c: 46:     UART_Write(text[i]);
  5920  1102  1683               	bsf	3,5	;RP0=1, select bank1
  5921  1103  1303               	bcf	3,6	;RP1=0, select bank1
  5922  1104  0823               	movf	UART_Write_Text@i^(0+128),w
  5923  1105  1283               	bcf	3,5	;RP0=0, select bank0
  5924  1106  1303               	bcf	3,6	;RP1=0, select bank0
  5925  1107  073C               	addwf	UART_Write_Text@text,w
  5926  1108  1683               	bsf	3,5	;RP0=1, select bank1
  5927  1109  1303               	bcf	3,6	;RP1=0, select bank1
  5928  110A  00A1               	movwf	(??_UART_Write_Text+1)^(0+128)
  5929  110B  1283               	bcf	3,5	;RP0=0, select bank0
  5930  110C  1303               	bcf	3,6	;RP1=0, select bank0
  5931  110D  083D               	movf	UART_Write_Text@text+1,w
  5932  110E  1683               	bsf	3,5	;RP0=1, select bank1
  5933  110F  1303               	bcf	3,6	;RP1=0, select bank1
  5934  1110  00A0               	movwf	??_UART_Write_Text^(0+128)
  5935  1111  1803               	skipnc
  5936  1112  0AA0               	incf	??_UART_Write_Text^(0+128),f
  5937  1113  1FA3               	btfss	UART_Write_Text@i^(0+128),7
  5938  1114  2916               	goto	u5220
  5939  1115  03A0               	decf	??_UART_Write_Text^(0+128),f
  5940  1116                     u5220:	
  5941  1116  1683               	bsf	3,5	;RP0=1, select bank1
  5942  1117  1303               	bcf	3,6	;RP1=0, select bank1
  5943  1118  0820               	movf	??_UART_Write_Text^(0+128),w
  5944  1119  00A2               	movwf	((??_UART_Write_Text+1)^(0+128)+1)
  5945  111A  0822               	movf	(??_UART_Write_Text+2)^(0+128),w
  5946  111B  1283               	bcf	3,5	;RP0=0, select bank0
  5947  111C  1303               	bcf	3,6	;RP1=0, select bank0
  5948  111D  00FF               	movwf	btemp+1
  5949  111E  1683               	bsf	3,5	;RP0=1, select bank1
  5950  111F  1303               	bcf	3,6	;RP1=0, select bank1
  5951  1120  0821               	movf	(??_UART_Write_Text+1)^(0+128),w
  5952  1121  0084               	movwf	4
  5953  1122  1283               	bcf	3,5	;RP0=0, select bank0
  5954  1123  1303               	bcf	3,6	;RP1=0, select bank0
  5955  1124  120A  158A  2000  160A  118A  	fcall	stringtab
  5956  1129  160A  158A  2423  160A  118A  	fcall	_UART_Write
  5957  112E                     l3850:	
  5958  112E  3001               	movlw	1
  5959  112F  1683               	bsf	3,5	;RP0=1, select bank1
  5960  1130  1303               	bcf	3,6	;RP1=0, select bank1
  5961  1131  07A3               	addwf	UART_Write_Text@i^(0+128),f
  5962  1132  1803               	skipnc
  5963  1133  0AA4               	incf	(UART_Write_Text@i+1)^(0+128),f
  5964  1134  3000               	movlw	0
  5965  1135  07A4               	addwf	(UART_Write_Text@i+1)^(0+128),f
  5966  1136                     l3852:	
  5967  1136  0823               	movf	UART_Write_Text@i^(0+128),w
  5968  1137  1283               	bcf	3,5	;RP0=0, select bank0
  5969  1138  1303               	bcf	3,6	;RP1=0, select bank0
  5970  1139  073C               	addwf	UART_Write_Text@text,w
  5971  113A  1683               	bsf	3,5	;RP0=1, select bank1
  5972  113B  1303               	bcf	3,6	;RP1=0, select bank1
  5973  113C  00A1               	movwf	(??_UART_Write_Text+1)^(0+128)
  5974  113D  1283               	bcf	3,5	;RP0=0, select bank0
  5975  113E  1303               	bcf	3,6	;RP1=0, select bank0
  5976  113F  083D               	movf	UART_Write_Text@text+1,w
  5977  1140  1683               	bsf	3,5	;RP0=1, select bank1
  5978  1141  1303               	bcf	3,6	;RP1=0, select bank1
  5979  1142  00A0               	movwf	??_UART_Write_Text^(0+128)
  5980  1143  1803               	skipnc
  5981  1144  0AA0               	incf	??_UART_Write_Text^(0+128),f
  5982  1145  1FA3               	btfss	UART_Write_Text@i^(0+128),7
  5983  1146  2948               	goto	u5230
  5984  1147  03A0               	decf	??_UART_Write_Text^(0+128),f
  5985  1148                     u5230:	
  5986  1148  1683               	bsf	3,5	;RP0=1, select bank1
  5987  1149  1303               	bcf	3,6	;RP1=0, select bank1
  5988  114A  0820               	movf	??_UART_Write_Text^(0+128),w
  5989  114B  00A2               	movwf	((??_UART_Write_Text+1)^(0+128)+1)
  5990  114C  0822               	movf	(??_UART_Write_Text+2)^(0+128),w
  5991  114D  1283               	bcf	3,5	;RP0=0, select bank0
  5992  114E  1303               	bcf	3,6	;RP1=0, select bank0
  5993  114F  00FF               	movwf	btemp+1
  5994  1150  1683               	bsf	3,5	;RP0=1, select bank1
  5995  1151  1303               	bcf	3,6	;RP1=0, select bank1
  5996  1152  0821               	movf	(??_UART_Write_Text+1)^(0+128),w
  5997  1153  0084               	movwf	4
  5998  1154  1283               	bcf	3,5	;RP0=0, select bank0
  5999  1155  1303               	bcf	3,6	;RP1=0, select bank0
  6000  1156  120A  158A  2000  160A  118A  	fcall	stringtab
  6001  115B  3A00               	xorlw	0
  6002  115C  1D03               	skipz
  6003  115D  295F               	goto	u5241
  6004  115E  2960               	goto	u5240
  6005  115F                     u5241:	
  6006  115F  2902               	goto	l3848
  6007  1160                     u5240:	
  6008  1160                     l321:	
  6009  1160  0008               	return
  6010  1161                     __end_of_UART_Write_Text:	
  6011                           
  6012                           	psect	text24
  6013  1C23                     __ptext24:	
  6014 ;; *************** function _UART_Write *****************
  6015 ;; Defined at:
  6016 ;;		line 32 in file "UART.c"
  6017 ;; Parameters:    Size  Location     Type
  6018 ;;  data            1    wreg     unsigned char 
  6019 ;; Auto vars:     Size  Location     Type
  6020 ;;  data            1   27[BANK0 ] unsigned char 
  6021 ;; Return value:  Size  Location     Type
  6022 ;;                  1    wreg      void 
  6023 ;; Registers used:
  6024 ;;		wreg
  6025 ;; Tracked objects:
  6026 ;;		On entry : 0/0
  6027 ;;		On exit  : 0/0
  6028 ;;		Unchanged: 0/0
  6029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6030 ;;      Params:         0       0       0       0       0
  6031 ;;      Locals:         0       1       0       0       0
  6032 ;;      Temps:          0       0       0       0       0
  6033 ;;      Totals:         0       1       0       0       0
  6034 ;;Total ram usage:        1 bytes
  6035 ;; Hardware stack levels used:    1
  6036 ;; Hardware stack levels required when called:    4
  6037 ;; This function calls:
  6038 ;;		Nothing
  6039 ;; This function is called by:
  6040 ;;		_main
  6041 ;;		_UART_Write_Text
  6042 ;; This function uses a non-reentrant model
  6043 ;;
  6044                           
  6045                           
  6046                           ;psect for function _UART_Write
  6047  1C23                     _UART_Write:	
  6048                           
  6049                           ;incstack = 0
  6050                           ; Regs used in _UART_Write: [wreg]
  6051                           ;UART_Write@data stored from wreg
  6052  1C23  1283               	bcf	3,5	;RP0=0, select bank0
  6053  1C24  1303               	bcf	3,6	;RP1=0, select bank0
  6054  1C25  00BB               	movwf	UART_Write@data
  6055  1C26                     l3732:	
  6056  1C26                     l309:	
  6057                           ;UART.c: 32: void UART_Write(char data);UART.c: 33: {;UART.c: 35:   while(!TRMT);
  6058                           
  6059  1C26  1683               	bsf	3,5	;RP0=1, select bank1
  6060  1C27  1303               	bcf	3,6	;RP1=0, select bank1
  6061  1C28  1C98               	btfss	24,1	;volatile
  6062  1C29  2C2B               	goto	u5011
  6063  1C2A  2C2C               	goto	u5010
  6064  1C2B                     u5011:	
  6065  1C2B  2C26               	goto	l309
  6066  1C2C                     u5010:	
  6067  1C2C                     l3734:	
  6068                           
  6069                           ;UART.c: 36:   TXREG = data;
  6070  1C2C  1283               	bcf	3,5	;RP0=0, select bank0
  6071  1C2D  1303               	bcf	3,6	;RP1=0, select bank0
  6072  1C2E  083B               	movf	UART_Write@data,w
  6073  1C2F  0099               	movwf	25	;volatile
  6074  1C30                     l312:	
  6075  1C30  0008               	return
  6076  1C31                     __end_of_UART_Write:	
  6077                           
  6078                           	psect	text25
  6079  1715                     __ptext25:	
  6080 ;; *************** function _UART_Init *****************
  6081 ;; Defined at:
  6082 ;;		line 9 in file "UART.c"
  6083 ;; Parameters:    Size  Location     Type
  6084 ;;  baudrate        4   14[BANK1 ] const long 
  6085 ;; Auto vars:     Size  Location     Type
  6086 ;;  x               2   28[BANK0 ] unsigned int 
  6087 ;; Return value:  Size  Location     Type
  6088 ;;                  1    wreg      unsigned char 
  6089 ;; Registers used:
  6090 ;;		wreg, status,2, status,0, pclath, cstack
  6091 ;; Tracked objects:
  6092 ;;		On entry : 0/0
  6093 ;;		On exit  : 0/0
  6094 ;;		Unchanged: 0/0
  6095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6096 ;;      Params:         0       0       4       0       0
  6097 ;;      Locals:         0       2       0       0       0
  6098 ;;      Temps:          0       0      12       0       0
  6099 ;;      Totals:         0       2      16       0       0
  6100 ;;Total ram usage:       18 bytes
  6101 ;; Hardware stack levels used:    1
  6102 ;; Hardware stack levels required when called:    5
  6103 ;; This function calls:
  6104 ;;		___aldiv
  6105 ;; This function is called by:
  6106 ;;		_main
  6107 ;; This function uses a non-reentrant model
  6108 ;;
  6109                           
  6110                           
  6111                           ;psect for function _UART_Init
  6112  1715                     _UART_Init:	
  6113  1715                     l4638:	
  6114                           ;incstack = 0
  6115                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  6116                           
  6117                           
  6118                           ;UART.c: 9: char UART_Init(const long int baudrate);UART.c: 10: {;UART.c: 11:   unsigned
      +                           int x;;UART.c: 12:   x = (4000000 - baudrate*64)/(baudrate*64);
  6119  1715  1683               	bsf	3,5	;RP0=1, select bank1
  6120  1716  1303               	bcf	3,6	;RP1=0, select bank1
  6121  1717  082E               	movf	UART_Init@baudrate^(0+128),w
  6122  1718  00B2               	movwf	??_UART_Init^(0+128)
  6123  1719  082F               	movf	(UART_Init@baudrate+1)^(0+128),w
  6124  171A  00B3               	movwf	(??_UART_Init^(0+128)+1)
  6125  171B  0830               	movf	(UART_Init@baudrate+2)^(0+128),w
  6126  171C  00B4               	movwf	(??_UART_Init^(0+128)+2)
  6127  171D  0831               	movf	(UART_Init@baudrate+3)^(0+128),w
  6128  171E  00B5               	movwf	(??_UART_Init^(0+128)+3)
  6129  171F  3006               	movlw	6
  6130  1720                     u6945:	
  6131  1720  1003               	clrc
  6132  1721  0DB2               	rlf	??_UART_Init^(0+128),f
  6133  1722  0DB3               	rlf	(??_UART_Init^(0+128)+1),f
  6134  1723  0DB4               	rlf	(??_UART_Init^(0+128)+2),f
  6135  1724  0DB5               	rlf	(??_UART_Init^(0+128)+3),f
  6136  1725                     u6940:	
  6137  1725  3EFF               	addlw	-1
  6138  1726  1D03               	skipz
  6139  1727  2F20               	goto	u6945
  6140  1728  0835               	movf	(??_UART_Init+3)^(0+128),w
  6141  1729  00A3               	movwf	(___aldiv@divisor+3)^(0+128)
  6142  172A  0834               	movf	(??_UART_Init+2)^(0+128),w
  6143  172B  00A2               	movwf	(___aldiv@divisor+2)^(0+128)
  6144  172C  0833               	movf	(??_UART_Init+1)^(0+128),w
  6145  172D  00A1               	movwf	(___aldiv@divisor+1)^(0+128)
  6146  172E  0832               	movf	??_UART_Init^(0+128),w
  6147  172F  00A0               	movwf	___aldiv@divisor^(0+128)
  6148  1730  082E               	movf	UART_Init@baudrate^(0+128),w
  6149  1731  00B6               	movwf	(??_UART_Init+4)^(0+128)
  6150  1732  082F               	movf	(UART_Init@baudrate+1)^(0+128),w
  6151  1733  00B7               	movwf	((??_UART_Init+4)^(0+128)+1)
  6152  1734  0830               	movf	(UART_Init@baudrate+2)^(0+128),w
  6153  1735  00B8               	movwf	((??_UART_Init+4)^(0+128)+2)
  6154  1736  0831               	movf	(UART_Init@baudrate+3)^(0+128),w
  6155  1737  00B9               	movwf	((??_UART_Init+4)^(0+128)+3)
  6156  1738  3006               	movlw	6
  6157  1739                     u6955:	
  6158  1739  1003               	clrc
  6159  173A  0DB6               	rlf	(??_UART_Init+4)^(0+128),f
  6160  173B  0DB7               	rlf	((??_UART_Init+4)^(0+128)+1),f
  6161  173C  0DB8               	rlf	((??_UART_Init+4)^(0+128)+2),f
  6162  173D  0DB9               	rlf	((??_UART_Init+4)^(0+128)+3),f
  6163  173E                     u6950:	
  6164  173E  3EFF               	addlw	-1
  6165  173F  1D03               	skipz
  6166  1740  2F39               	goto	u6955
  6167  1741  3000               	movlw	0
  6168  1742  00BA               	movwf	(??_UART_Init+8)^(0+128)
  6169  1743  3009               	movlw	9
  6170  1744  00BB               	movwf	((??_UART_Init+8)^(0+128)+1)
  6171  1745  303D               	movlw	61
  6172  1746  00BC               	movwf	((??_UART_Init+8)^(0+128)+2)
  6173  1747  3000               	movlw	0
  6174  1748  00BD               	movwf	((??_UART_Init+8)^(0+128)+3)
  6175  1749  0836               	movf	(??_UART_Init+4)^(0+128),w
  6176  174A  02BA               	subwf	(??_UART_Init+8)^(0+128),f
  6177  174B  0837               	movf	(??_UART_Init+5)^(0+128),w
  6178  174C  1C03               	skipc
  6179  174D  0F37               	incfsz	(??_UART_Init+5)^(0+128),w
  6180  174E  2F50               	goto	u6961
  6181  174F  2F51               	goto	u6962
  6182  1750                     u6961:	
  6183  1750  02BB               	subwf	((??_UART_Init+8)^(0+128)+1),f
  6184  1751                     u6962:	
  6185  1751  0838               	movf	(??_UART_Init+6)^(0+128),w
  6186  1752  1C03               	skipc
  6187  1753  0F38               	incfsz	(??_UART_Init+6)^(0+128),w
  6188  1754  2F56               	goto	u6963
  6189  1755  2F57               	goto	u6964
  6190  1756                     u6963:	
  6191  1756  02BC               	subwf	((??_UART_Init+8)^(0+128)+2),f
  6192  1757                     u6964:	
  6193  1757  0839               	movf	(??_UART_Init+7)^(0+128),w
  6194  1758  1C03               	skipc
  6195  1759  0F39               	incfsz	(??_UART_Init+7)^(0+128),w
  6196  175A  2F5C               	goto	u6965
  6197  175B  2F5D               	goto	u6966
  6198  175C                     u6965:	
  6199  175C  02BD               	subwf	((??_UART_Init+8)^(0+128)+3),f
  6200  175D                     u6966:	
  6201  175D  083D               	movf	(??_UART_Init+11)^(0+128),w
  6202  175E  00A7               	movwf	(___aldiv@dividend+3)^(0+128)
  6203  175F  083C               	movf	(??_UART_Init+10)^(0+128),w
  6204  1760  00A6               	movwf	(___aldiv@dividend+2)^(0+128)
  6205  1761  083B               	movf	(??_UART_Init+9)^(0+128),w
  6206  1762  00A5               	movwf	(___aldiv@dividend+1)^(0+128)
  6207  1763  083A               	movf	(??_UART_Init+8)^(0+128),w
  6208  1764  00A4               	movwf	___aldiv@dividend^(0+128)
  6209  1765  160A  118A  24D0  160A  118A  	fcall	___aldiv
  6210  176A  1683               	bsf	3,5	;RP0=1, select bank1
  6211  176B  1303               	bcf	3,6	;RP1=0, select bank1
  6212  176C  0821               	movf	(?___aldiv+1)^(0+128),w
  6213  176D  1283               	bcf	3,5	;RP0=0, select bank0
  6214  176E  1303               	bcf	3,6	;RP1=0, select bank0
  6215  176F  00BD               	movwf	UART_Init@x+1
  6216  1770  1683               	bsf	3,5	;RP0=1, select bank1
  6217  1771  1303               	bcf	3,6	;RP1=0, select bank1
  6218  1772  0820               	movf	?___aldiv^(0+128),w
  6219  1773  1283               	bcf	3,5	;RP0=0, select bank0
  6220  1774  1303               	bcf	3,6	;RP1=0, select bank0
  6221  1775  00BC               	movwf	UART_Init@x
  6222  1776                     l4640:	
  6223                           
  6224                           ;UART.c: 13:   if(x>255)
  6225  1776  3001               	movlw	1
  6226  1777  023D               	subwf	UART_Init@x+1,w
  6227  1778  3000               	movlw	0
  6228  1779  1903               	skipnz
  6229  177A  023C               	subwf	UART_Init@x,w
  6230  177B  1C03               	skipc
  6231  177C  2F7E               	goto	u6971
  6232  177D  2F7F               	goto	u6970
  6233  177E                     u6971:	
  6234  177E  2FE3               	goto	l4646
  6235  177F                     u6970:	
  6236  177F                     l4642:	
  6237                           
  6238                           ;UART.c: 14:   {;UART.c: 15:     x = (4000000 - baudrate*16)/(baudrate*16);
  6239  177F  1683               	bsf	3,5	;RP0=1, select bank1
  6240  1780  1303               	bcf	3,6	;RP1=0, select bank1
  6241  1781  082E               	movf	UART_Init@baudrate^(0+128),w
  6242  1782  00B2               	movwf	??_UART_Init^(0+128)
  6243  1783  082F               	movf	(UART_Init@baudrate+1)^(0+128),w
  6244  1784  00B3               	movwf	(??_UART_Init^(0+128)+1)
  6245  1785  0830               	movf	(UART_Init@baudrate+2)^(0+128),w
  6246  1786  00B4               	movwf	(??_UART_Init^(0+128)+2)
  6247  1787  0831               	movf	(UART_Init@baudrate+3)^(0+128),w
  6248  1788  00B5               	movwf	(??_UART_Init^(0+128)+3)
  6249  1789  3004               	movlw	4
  6250  178A                     u6985:	
  6251  178A  1003               	clrc
  6252  178B  0DB2               	rlf	??_UART_Init^(0+128),f
  6253  178C  0DB3               	rlf	(??_UART_Init^(0+128)+1),f
  6254  178D  0DB4               	rlf	(??_UART_Init^(0+128)+2),f
  6255  178E  0DB5               	rlf	(??_UART_Init^(0+128)+3),f
  6256  178F                     u6980:	
  6257  178F  3EFF               	addlw	-1
  6258  1790  1D03               	skipz
  6259  1791  2F8A               	goto	u6985
  6260  1792  0835               	movf	(??_UART_Init+3)^(0+128),w
  6261  1793  00A3               	movwf	(___aldiv@divisor+3)^(0+128)
  6262  1794  0834               	movf	(??_UART_Init+2)^(0+128),w
  6263  1795  00A2               	movwf	(___aldiv@divisor+2)^(0+128)
  6264  1796  0833               	movf	(??_UART_Init+1)^(0+128),w
  6265  1797  00A1               	movwf	(___aldiv@divisor+1)^(0+128)
  6266  1798  0832               	movf	??_UART_Init^(0+128),w
  6267  1799  00A0               	movwf	___aldiv@divisor^(0+128)
  6268  179A  082E               	movf	UART_Init@baudrate^(0+128),w
  6269  179B  00B6               	movwf	(??_UART_Init+4)^(0+128)
  6270  179C  082F               	movf	(UART_Init@baudrate+1)^(0+128),w
  6271  179D  00B7               	movwf	((??_UART_Init+4)^(0+128)+1)
  6272  179E  0830               	movf	(UART_Init@baudrate+2)^(0+128),w
  6273  179F  00B8               	movwf	((??_UART_Init+4)^(0+128)+2)
  6274  17A0  0831               	movf	(UART_Init@baudrate+3)^(0+128),w
  6275  17A1  00B9               	movwf	((??_UART_Init+4)^(0+128)+3)
  6276  17A2  3004               	movlw	4
  6277  17A3                     u6995:	
  6278  17A3  1003               	clrc
  6279  17A4  0DB6               	rlf	(??_UART_Init+4)^(0+128),f
  6280  17A5  0DB7               	rlf	((??_UART_Init+4)^(0+128)+1),f
  6281  17A6  0DB8               	rlf	((??_UART_Init+4)^(0+128)+2),f
  6282  17A7  0DB9               	rlf	((??_UART_Init+4)^(0+128)+3),f
  6283  17A8                     u6990:	
  6284  17A8  3EFF               	addlw	-1
  6285  17A9  1D03               	skipz
  6286  17AA  2FA3               	goto	u6995
  6287  17AB  3000               	movlw	0
  6288  17AC  00BA               	movwf	(??_UART_Init+8)^(0+128)
  6289  17AD  3009               	movlw	9
  6290  17AE  00BB               	movwf	((??_UART_Init+8)^(0+128)+1)
  6291  17AF  303D               	movlw	61
  6292  17B0  00BC               	movwf	((??_UART_Init+8)^(0+128)+2)
  6293  17B1  3000               	movlw	0
  6294  17B2  00BD               	movwf	((??_UART_Init+8)^(0+128)+3)
  6295  17B3  0836               	movf	(??_UART_Init+4)^(0+128),w
  6296  17B4  02BA               	subwf	(??_UART_Init+8)^(0+128),f
  6297  17B5  0837               	movf	(??_UART_Init+5)^(0+128),w
  6298  17B6  1C03               	skipc
  6299  17B7  0F37               	incfsz	(??_UART_Init+5)^(0+128),w
  6300  17B8  2FBA               	goto	u7001
  6301  17B9  2FBB               	goto	u7002
  6302  17BA                     u7001:	
  6303  17BA  02BB               	subwf	((??_UART_Init+8)^(0+128)+1),f
  6304  17BB                     u7002:	
  6305  17BB  0838               	movf	(??_UART_Init+6)^(0+128),w
  6306  17BC  1C03               	skipc
  6307  17BD  0F38               	incfsz	(??_UART_Init+6)^(0+128),w
  6308  17BE  2FC0               	goto	u7003
  6309  17BF  2FC1               	goto	u7004
  6310  17C0                     u7003:	
  6311  17C0  02BC               	subwf	((??_UART_Init+8)^(0+128)+2),f
  6312  17C1                     u7004:	
  6313  17C1  0839               	movf	(??_UART_Init+7)^(0+128),w
  6314  17C2  1C03               	skipc
  6315  17C3  0F39               	incfsz	(??_UART_Init+7)^(0+128),w
  6316  17C4  2FC6               	goto	u7005
  6317  17C5  2FC7               	goto	u7006
  6318  17C6                     u7005:	
  6319  17C6  02BD               	subwf	((??_UART_Init+8)^(0+128)+3),f
  6320  17C7                     u7006:	
  6321  17C7  083D               	movf	(??_UART_Init+11)^(0+128),w
  6322  17C8  00A7               	movwf	(___aldiv@dividend+3)^(0+128)
  6323  17C9  083C               	movf	(??_UART_Init+10)^(0+128),w
  6324  17CA  00A6               	movwf	(___aldiv@dividend+2)^(0+128)
  6325  17CB  083B               	movf	(??_UART_Init+9)^(0+128),w
  6326  17CC  00A5               	movwf	(___aldiv@dividend+1)^(0+128)
  6327  17CD  083A               	movf	(??_UART_Init+8)^(0+128),w
  6328  17CE  00A4               	movwf	___aldiv@dividend^(0+128)
  6329  17CF  160A  118A  24D0  160A  118A  	fcall	___aldiv
  6330  17D4  1683               	bsf	3,5	;RP0=1, select bank1
  6331  17D5  1303               	bcf	3,6	;RP1=0, select bank1
  6332  17D6  0821               	movf	(?___aldiv+1)^(0+128),w
  6333  17D7  1283               	bcf	3,5	;RP0=0, select bank0
  6334  17D8  1303               	bcf	3,6	;RP1=0, select bank0
  6335  17D9  00BD               	movwf	UART_Init@x+1
  6336  17DA  1683               	bsf	3,5	;RP0=1, select bank1
  6337  17DB  1303               	bcf	3,6	;RP1=0, select bank1
  6338  17DC  0820               	movf	?___aldiv^(0+128),w
  6339  17DD  1283               	bcf	3,5	;RP0=0, select bank0
  6340  17DE  1303               	bcf	3,6	;RP1=0, select bank0
  6341  17DF  00BC               	movwf	UART_Init@x
  6342  17E0                     l4644:	
  6343                           
  6344                           ;UART.c: 16:     BRGH = 1;
  6345  17E0  1683               	bsf	3,5	;RP0=1, select bank1
  6346  17E1  1303               	bcf	3,6	;RP1=0, select bank1
  6347  17E2  1518               	bsf	24,2	;volatile
  6348  17E3                     l4646:	
  6349                           
  6350                           ;UART.c: 18:   if(x<256)
  6351  17E3  3001               	movlw	1
  6352  17E4  1283               	bcf	3,5	;RP0=0, select bank0
  6353  17E5  023D               	subwf	UART_Init@x+1,w
  6354  17E6  3000               	movlw	0
  6355  17E7  1903               	skipnz
  6356  17E8  023C               	subwf	UART_Init@x,w
  6357  17E9  1803               	skipnc
  6358  17EA  2FEC               	goto	u7011
  6359  17EB  2FED               	goto	u7010
  6360  17EC                     u7011:	
  6361  17EC  2FFF               	goto	l306
  6362  17ED                     u7010:	
  6363  17ED                     l4648:	
  6364                           
  6365                           ;UART.c: 19:   {;UART.c: 20:     SPBRG = x;
  6366  17ED  083C               	movf	UART_Init@x,w
  6367  17EE  1683               	bsf	3,5	;RP0=1, select bank1
  6368  17EF  1303               	bcf	3,6	;RP1=0, select bank1
  6369  17F0  0099               	movwf	25	;volatile
  6370  17F1                     l4650:	
  6371                           
  6372                           ;UART.c: 21:     SYNC = 0;
  6373  17F1  1218               	bcf	24,4	;volatile
  6374  17F2                     l4652:	
  6375                           
  6376                           ;UART.c: 22:     SPEN = 1;
  6377  17F2  1283               	bcf	3,5	;RP0=0, select bank0
  6378  17F3  1303               	bcf	3,6	;RP1=0, select bank0
  6379  17F4  1798               	bsf	24,7	;volatile
  6380  17F5                     l4654:	
  6381                           
  6382                           ;UART.c: 23:     TRISC7 = 1;
  6383  17F5  1683               	bsf	3,5	;RP0=1, select bank1
  6384  17F6  1303               	bcf	3,6	;RP1=0, select bank1
  6385  17F7  1787               	bsf	7,7	;volatile
  6386  17F8                     l4656:	
  6387                           
  6388                           ;UART.c: 24:     TRISC6 = 1;
  6389  17F8  1707               	bsf	7,6	;volatile
  6390  17F9                     l4658:	
  6391                           
  6392                           ;UART.c: 25:     CREN = 1;
  6393  17F9  1283               	bcf	3,5	;RP0=0, select bank0
  6394  17FA  1303               	bcf	3,6	;RP1=0, select bank0
  6395  17FB  1618               	bsf	24,4	;volatile
  6396  17FC                     l4660:	
  6397                           
  6398                           ;UART.c: 26:     TXEN = 1;
  6399  17FC  1683               	bsf	3,5	;RP0=1, select bank1
  6400  17FD  1303               	bcf	3,6	;RP1=0, select bank1
  6401  17FE  1698               	bsf	24,5	;volatile
  6402  17FF                     l306:	
  6403  17FF  0008               	return
  6404  1800                     __end_of_UART_Init:	
  6405                           
  6406                           	psect	text26
  6407  1BCF                     __ptext26:	
  6408 ;; *************** function _UART_Data_Ready *****************
  6409 ;; Defined at:
  6410 ;;		line 48 in file "UART.c"
  6411 ;; Parameters:    Size  Location     Type
  6412 ;;		None
  6413 ;; Auto vars:     Size  Location     Type
  6414 ;;		None
  6415 ;; Return value:  Size  Location     Type
  6416 ;;                  1    wreg      unsigned char 
  6417 ;; Registers used:
  6418 ;;		wreg
  6419 ;; Tracked objects:
  6420 ;;		On entry : 0/0
  6421 ;;		On exit  : 0/0
  6422 ;;		Unchanged: 0/0
  6423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6424 ;;      Params:         0       0       0       0       0
  6425 ;;      Locals:         0       0       0       0       0
  6426 ;;      Temps:          0       0       0       0       0
  6427 ;;      Totals:         0       0       0       0       0
  6428 ;;Total ram usage:        0 bytes
  6429 ;; Hardware stack levels used:    1
  6430 ;; Hardware stack levels required when called:    4
  6431 ;; This function calls:
  6432 ;;		Nothing
  6433 ;; This function is called by:
  6434 ;;		_main
  6435 ;; This function uses a non-reentrant model
  6436 ;;
  6437                           
  6438                           
  6439                           ;psect for function _UART_Data_Ready
  6440  1BCF                     _UART_Data_Ready:	
  6441  1BCF                     l4676:	
  6442                           ;incstack = 0
  6443                           ; Regs used in _UART_Data_Ready: [wreg]
  6444                           
  6445                           
  6446                           ;UART.c: 50:   return RCIF;
  6447  1BCF  3000               	movlw	0
  6448  1BD0  1283               	bcf	3,5	;RP0=0, select bank0
  6449  1BD1  1303               	bcf	3,6	;RP1=0, select bank0
  6450  1BD2  1A8C               	btfsc	12,5	;volatile
  6451  1BD3  3001               	movlw	1
  6452  1BD4                     l324:	
  6453  1BD4  0008               	return
  6454  1BD5                     __end_of_UART_Data_Ready:	
  6455                           
  6456                           	psect	text27
  6457  07B1                     __ptext27:	
  6458 ;; *************** function _PWM_Initialize *****************
  6459 ;; Defined at:
  6460 ;;		line 63 in file "main.c"
  6461 ;; Parameters:    Size  Location     Type
  6462 ;;		None
  6463 ;; Auto vars:     Size  Location     Type
  6464 ;;		None
  6465 ;; Return value:  Size  Location     Type
  6466 ;;                  1    wreg      void 
  6467 ;; Registers used:
  6468 ;;		wreg, status,2, status,0, pclath, cstack
  6469 ;; Tracked objects:
  6470 ;;		On entry : 0/0
  6471 ;;		On exit  : 0/0
  6472 ;;		Unchanged: 0/0
  6473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6474 ;;      Params:         0       0       0       0       0
  6475 ;;      Locals:         0       0       0       0       0
  6476 ;;      Temps:          0       0       4       0       0
  6477 ;;      Totals:         0       0       4       0       0
  6478 ;;Total ram usage:        4 bytes
  6479 ;; Hardware stack levels used:    1
  6480 ;; Hardware stack levels required when called:    5
  6481 ;; This function calls:
  6482 ;;		___aldiv
  6483 ;; This function is called by:
  6484 ;;		_main
  6485 ;; This function uses a non-reentrant model
  6486 ;;
  6487                           
  6488                           
  6489                           ;psect for function _PWM_Initialize
  6490  07B1                     _PWM_Initialize:	
  6491  07B1                     l4448:	
  6492                           ;incstack = 0
  6493                           ; Regs used in _PWM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6494                           
  6495                           
  6496                           ;main.c: 65:     output[7]='\0';
  6497  07B1  1283               	bcf	3,5	;RP0=0, select bank0
  6498  07B2  1303               	bcf	3,6	;RP1=0, select bank0
  6499  07B3  0851               	movf	_PWM_freq,w
  6500  07B4  1683               	bsf	3,5	;RP0=1, select bank1
  6501  07B5  1303               	bcf	3,6	;RP1=0, select bank1
  6502  07B6  00AE               	movwf	??_PWM_Initialize^(0+128)
  6503  07B7  1283               	bcf	3,5	;RP0=0, select bank0
  6504  07B8  1303               	bcf	3,6	;RP1=0, select bank0
  6505  07B9  0852               	movf	_PWM_freq+1,w
  6506  07BA  1683               	bsf	3,5	;RP0=1, select bank1
  6507  07BB  1303               	bcf	3,6	;RP1=0, select bank1
  6508  07BC  00AF               	movwf	(??_PWM_Initialize^(0+128)+1)
  6509  07BD  1283               	bcf	3,5	;RP0=0, select bank0
  6510  07BE  1303               	bcf	3,6	;RP1=0, select bank0
  6511  07BF  0853               	movf	_PWM_freq+2,w
  6512  07C0  1683               	bsf	3,5	;RP0=1, select bank1
  6513  07C1  1303               	bcf	3,6	;RP1=0, select bank1
  6514  07C2  00B0               	movwf	(??_PWM_Initialize^(0+128)+2)
  6515  07C3  1283               	bcf	3,5	;RP0=0, select bank0
  6516  07C4  1303               	bcf	3,6	;RP1=0, select bank0
  6517  07C5  0854               	movf	_PWM_freq+3,w
  6518  07C6  1683               	bsf	3,5	;RP0=1, select bank1
  6519  07C7  1303               	bcf	3,6	;RP1=0, select bank1
  6520  07C8  00B1               	movwf	(??_PWM_Initialize^(0+128)+3)
  6521  07C9  3002               	movlw	2
  6522  07CA                     u6665:	
  6523  07CA  1003               	clrc
  6524  07CB  0DAE               	rlf	??_PWM_Initialize^(0+128),f
  6525  07CC  0DAF               	rlf	(??_PWM_Initialize^(0+128)+1),f
  6526  07CD  0DB0               	rlf	(??_PWM_Initialize^(0+128)+2),f
  6527  07CE  0DB1               	rlf	(??_PWM_Initialize^(0+128)+3),f
  6528  07CF                     u6660:	
  6529  07CF  3EFF               	addlw	-1
  6530  07D0  1D03               	skipz
  6531  07D1  2FCA               	goto	u6665
  6532  07D2  3002               	movlw	2
  6533  07D3                     u6675:	
  6534  07D3  1003               	clrc
  6535  07D4  0DAE               	rlf	??_PWM_Initialize^(0+128),f
  6536  07D5  0DAF               	rlf	(??_PWM_Initialize^(0+128)+1),f
  6537  07D6  0DB0               	rlf	(??_PWM_Initialize^(0+128)+2),f
  6538  07D7  0DB1               	rlf	(??_PWM_Initialize^(0+128)+3),f
  6539  07D8                     u6670:	
  6540  07D8  3EFF               	addlw	-1
  6541  07D9  1D03               	skipz
  6542  07DA  2FD3               	goto	u6675
  6543  07DB  0831               	movf	(??_PWM_Initialize+3)^(0+128),w
  6544  07DC  00A3               	movwf	(___aldiv@divisor+3)^(0+128)
  6545  07DD  0830               	movf	(??_PWM_Initialize+2)^(0+128),w
  6546  07DE  00A2               	movwf	(___aldiv@divisor+2)^(0+128)
  6547  07DF  082F               	movf	(??_PWM_Initialize+1)^(0+128),w
  6548  07E0  00A1               	movwf	(___aldiv@divisor+1)^(0+128)
  6549  07E1  082E               	movf	??_PWM_Initialize^(0+128),w
  6550  07E2  00A0               	movwf	___aldiv@divisor^(0+128)
  6551  07E3  3000               	movlw	0
  6552  07E4  00A7               	movwf	(___aldiv@dividend+3)^(0+128)
  6553  07E5  303D               	movlw	61
  6554  07E6  00A6               	movwf	(___aldiv@dividend+2)^(0+128)
  6555  07E7  3009               	movlw	9
  6556  07E8  00A5               	movwf	(___aldiv@dividend+1)^(0+128)
  6557  07E9  3000               	movlw	0
  6558  07EA  00A4               	movwf	___aldiv@dividend^(0+128)
  6559  07EB  160A  118A  24D0  120A  118A  	fcall	___aldiv
  6560  07F0  1683               	bsf	3,5	;RP0=1, select bank1
  6561  07F1  1303               	bcf	3,6	;RP1=0, select bank1
  6562  07F2  0820               	movf	?___aldiv^(0+128),w
  6563  07F3  3EFF               	addlw	255
  6564  07F4  0092               	movwf	18	;volatile
  6565  07F5                     l4450:	
  6566                           
  6567                           ;main.c: 66:     output[6]='\n';
  6568  07F5  1283               	bcf	3,5	;RP0=0, select bank0
  6569  07F6  1303               	bcf	3,6	;RP1=0, select bank0
  6570  07F7  1597               	bsf	23,3	;volatile
  6571  07F8                     l4452:	
  6572                           
  6573                           ;main.c: 67:     UART_Write_Text(output);
  6574  07F8  1517               	bsf	23,2	;volatile
  6575  07F9                     l4454:	
  6576                           
  6577                           ;main.c: 68: 
  6578  07F9  1412               	bsf	18,0	;volatile
  6579  07FA                     l4456:	
  6580                           
  6581                           ;main.c: 69:     if(output[0]==49)
  6582  07FA  1092               	bcf	18,1	;volatile
  6583  07FB                     l4458:	
  6584                           
  6585                           ;main.c: 70:     {
  6586  07FB  1512               	bsf	18,2	;volatile
  6587  07FC                     l4460:	
  6588                           
  6589                           ;main.c: 71:         UART_Write_Text("1 Pedido de informacao \n");
  6590  07FC  1683               	bsf	3,5	;RP0=1, select bank1
  6591  07FD  1303               	bcf	3,6	;RP1=0, select bank1
  6592  07FE  1107               	bcf	7,2	;volatile
  6593  07FF                     l127:	
  6594  07FF  0008               	return
  6595  0800                     __end_of_PWM_Initialize:	
  6596                           
  6597                           	psect	text28
  6598  14D0                     __ptext28:	
  6599 ;; *************** function ___aldiv *****************
  6600 ;; Defined at:
  6601 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\aldiv.c"
  6602 ;; Parameters:    Size  Location     Type
  6603 ;;  divisor         4    0[BANK1 ] long 
  6604 ;;  dividend        4    4[BANK1 ] long 
  6605 ;; Auto vars:     Size  Location     Type
  6606 ;;  quotient        4   10[BANK1 ] long 
  6607 ;;  sign            1    9[BANK1 ] unsigned char 
  6608 ;;  counter         1    8[BANK1 ] unsigned char 
  6609 ;; Return value:  Size  Location     Type
  6610 ;;                  4    0[BANK1 ] long 
  6611 ;; Registers used:
  6612 ;;		wreg, status,2, status,0
  6613 ;; Tracked objects:
  6614 ;;		On entry : 0/0
  6615 ;;		On exit  : 0/0
  6616 ;;		Unchanged: 0/0
  6617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6618 ;;      Params:         0       0       8       0       0
  6619 ;;      Locals:         0       0       6       0       0
  6620 ;;      Temps:          0       1       0       0       0
  6621 ;;      Totals:         0       1      14       0       0
  6622 ;;Total ram usage:       15 bytes
  6623 ;; Hardware stack levels used:    1
  6624 ;; Hardware stack levels required when called:    4
  6625 ;; This function calls:
  6626 ;;		Nothing
  6627 ;; This function is called by:
  6628 ;;		_PWM_Initialize
  6629 ;;		_PWM_Duty
  6630 ;;		_UART_Init
  6631 ;; This function uses a non-reentrant model
  6632 ;;
  6633                           
  6634                           
  6635                           ;psect for function ___aldiv
  6636  14D0                     ___aldiv:	
  6637  14D0                     l3892:	
  6638                           ;incstack = 0
  6639                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  6640                           
  6641  14D0  1683               	bsf	3,5	;RP0=1, select bank1
  6642  14D1  1303               	bcf	3,6	;RP1=0, select bank1
  6643  14D2  01A9               	clrf	___aldiv@sign^(0+128)
  6644  14D3                     l3894:	
  6645  14D3  1FA3               	btfss	(___aldiv@divisor+3)^(0+128),7
  6646  14D4  2CD6               	goto	u5331
  6647  14D5  2CD7               	goto	u5330
  6648  14D6                     u5331:	
  6649  14D6  2CE4               	goto	l563
  6650  14D7                     u5330:	
  6651  14D7                     l3896:	
  6652  14D7  09A0               	comf	___aldiv@divisor^(0+128),f
  6653  14D8  09A1               	comf	(___aldiv@divisor+1)^(0+128),f
  6654  14D9  09A2               	comf	(___aldiv@divisor+2)^(0+128),f
  6655  14DA  09A3               	comf	(___aldiv@divisor+3)^(0+128),f
  6656  14DB  0AA0               	incf	___aldiv@divisor^(0+128),f
  6657  14DC  1903               	skipnz
  6658  14DD  0AA1               	incf	(___aldiv@divisor+1)^(0+128),f
  6659  14DE  1903               	skipnz
  6660  14DF  0AA2               	incf	(___aldiv@divisor+2)^(0+128),f
  6661  14E0  1903               	skipnz
  6662  14E1  0AA3               	incf	(___aldiv@divisor+3)^(0+128),f
  6663  14E2  01A9               	clrf	___aldiv@sign^(0+128)
  6664  14E3  0AA9               	incf	___aldiv@sign^(0+128),f
  6665  14E4                     l563:	
  6666  14E4  1FA7               	btfss	(___aldiv@dividend+3)^(0+128),7
  6667  14E5  2CE7               	goto	u5341
  6668  14E6  2CE8               	goto	u5340
  6669  14E7                     u5341:	
  6670  14E7  2CFB               	goto	l3902
  6671  14E8                     u5340:	
  6672  14E8                     l3898:	
  6673  14E8  09A4               	comf	___aldiv@dividend^(0+128),f
  6674  14E9  09A5               	comf	(___aldiv@dividend+1)^(0+128),f
  6675  14EA  09A6               	comf	(___aldiv@dividend+2)^(0+128),f
  6676  14EB  09A7               	comf	(___aldiv@dividend+3)^(0+128),f
  6677  14EC  0AA4               	incf	___aldiv@dividend^(0+128),f
  6678  14ED  1903               	skipnz
  6679  14EE  0AA5               	incf	(___aldiv@dividend+1)^(0+128),f
  6680  14EF  1903               	skipnz
  6681  14F0  0AA6               	incf	(___aldiv@dividend+2)^(0+128),f
  6682  14F1  1903               	skipnz
  6683  14F2  0AA7               	incf	(___aldiv@dividend+3)^(0+128),f
  6684  14F3                     l3900:	
  6685  14F3  3001               	movlw	1
  6686  14F4  1283               	bcf	3,5	;RP0=0, select bank0
  6687  14F5  1303               	bcf	3,6	;RP1=0, select bank0
  6688  14F6  00BB               	movwf	??___aldiv
  6689  14F7  083B               	movf	??___aldiv,w
  6690  14F8  1683               	bsf	3,5	;RP0=1, select bank1
  6691  14F9  1303               	bcf	3,6	;RP1=0, select bank1
  6692  14FA  06A9               	xorwf	___aldiv@sign^(0+128),f
  6693  14FB                     l3902:	
  6694  14FB  3000               	movlw	0
  6695  14FC  00AD               	movwf	(___aldiv@quotient+3)^(0+128)
  6696  14FD  3000               	movlw	0
  6697  14FE  00AC               	movwf	(___aldiv@quotient+2)^(0+128)
  6698  14FF  3000               	movlw	0
  6699  1500  00AB               	movwf	(___aldiv@quotient+1)^(0+128)
  6700  1501  3000               	movlw	0
  6701  1502  00AA               	movwf	___aldiv@quotient^(0+128)
  6702  1503                     l3904:	
  6703  1503  0823               	movf	(___aldiv@divisor+3)^(0+128),w
  6704  1504  0422               	iorwf	(___aldiv@divisor+2)^(0+128),w
  6705  1505  0421               	iorwf	(___aldiv@divisor+1)^(0+128),w
  6706  1506  0420               	iorwf	___aldiv@divisor^(0+128),w
  6707  1507  1903               	skipnz
  6708  1508  2D0A               	goto	u5351
  6709  1509  2D0B               	goto	u5350
  6710  150A                     u5351:	
  6711  150A  2D68               	goto	l3924
  6712  150B                     u5350:	
  6713  150B                     l3906:	
  6714  150B  01A8               	clrf	___aldiv@counter^(0+128)
  6715  150C  0AA8               	incf	___aldiv@counter^(0+128),f
  6716  150D  2D23               	goto	l3910
  6717  150E                     l3908:	
  6718  150E  3001               	movlw	1
  6719  150F  1283               	bcf	3,5	;RP0=0, select bank0
  6720  1510  1303               	bcf	3,6	;RP1=0, select bank0
  6721  1511  00BB               	movwf	??___aldiv
  6722  1512                     u5365:	
  6723  1512  1003               	clrc
  6724  1513  1683               	bsf	3,5	;RP0=1, select bank1
  6725  1514  1303               	bcf	3,6	;RP1=0, select bank1
  6726  1515  0DA0               	rlf	___aldiv@divisor^(0+128),f
  6727  1516  0DA1               	rlf	(___aldiv@divisor+1)^(0+128),f
  6728  1517  0DA2               	rlf	(___aldiv@divisor+2)^(0+128),f
  6729  1518  0DA3               	rlf	(___aldiv@divisor+3)^(0+128),f
  6730  1519  1283               	bcf	3,5	;RP0=0, select bank0
  6731  151A  1303               	bcf	3,6	;RP1=0, select bank0
  6732  151B  0BBB               	decfsz	??___aldiv,f
  6733  151C  2D12               	goto	u5365
  6734  151D  3001               	movlw	1
  6735  151E  00BB               	movwf	??___aldiv
  6736  151F  083B               	movf	??___aldiv,w
  6737  1520  1683               	bsf	3,5	;RP0=1, select bank1
  6738  1521  1303               	bcf	3,6	;RP1=0, select bank1
  6739  1522  07A8               	addwf	___aldiv@counter^(0+128),f
  6740  1523                     l3910:	
  6741  1523  1FA3               	btfss	(___aldiv@divisor+3)^(0+128),7
  6742  1524  2D26               	goto	u5371
  6743  1525  2D27               	goto	u5370
  6744  1526                     u5371:	
  6745  1526  2D0E               	goto	l3908
  6746  1527                     u5370:	
  6747  1527                     l3912:	
  6748  1527  3001               	movlw	1
  6749  1528  1283               	bcf	3,5	;RP0=0, select bank0
  6750  1529  1303               	bcf	3,6	;RP1=0, select bank0
  6751  152A  00BB               	movwf	??___aldiv
  6752  152B                     u5385:	
  6753  152B  1003               	clrc
  6754  152C  1683               	bsf	3,5	;RP0=1, select bank1
  6755  152D  1303               	bcf	3,6	;RP1=0, select bank1
  6756  152E  0DAA               	rlf	___aldiv@quotient^(0+128),f
  6757  152F  0DAB               	rlf	(___aldiv@quotient+1)^(0+128),f
  6758  1530  0DAC               	rlf	(___aldiv@quotient+2)^(0+128),f
  6759  1531  0DAD               	rlf	(___aldiv@quotient+3)^(0+128),f
  6760  1532  1283               	bcf	3,5	;RP0=0, select bank0
  6761  1533  1303               	bcf	3,6	;RP1=0, select bank0
  6762  1534  0BBB               	decfsz	??___aldiv,f
  6763  1535  2D2B               	goto	u5385
  6764  1536                     l3914:	
  6765  1536  1683               	bsf	3,5	;RP0=1, select bank1
  6766  1537  1303               	bcf	3,6	;RP1=0, select bank1
  6767  1538  0823               	movf	(___aldiv@divisor+3)^(0+128),w
  6768  1539  0227               	subwf	(___aldiv@dividend+3)^(0+128),w
  6769  153A  1D03               	skipz
  6770  153B  2D46               	goto	u5395
  6771  153C  0822               	movf	(___aldiv@divisor+2)^(0+128),w
  6772  153D  0226               	subwf	(___aldiv@dividend+2)^(0+128),w
  6773  153E  1D03               	skipz
  6774  153F  2D46               	goto	u5395
  6775  1540  0821               	movf	(___aldiv@divisor+1)^(0+128),w
  6776  1541  0225               	subwf	(___aldiv@dividend+1)^(0+128),w
  6777  1542  1D03               	skipz
  6778  1543  2D46               	goto	u5395
  6779  1544  0820               	movf	___aldiv@divisor^(0+128),w
  6780  1545  0224               	subwf	___aldiv@dividend^(0+128),w
  6781  1546                     u5395:	
  6782  1546  1C03               	skipc
  6783  1547  2D49               	goto	u5391
  6784  1548  2D4A               	goto	u5390
  6785  1549                     u5391:	
  6786  1549  2D59               	goto	l3920
  6787  154A                     u5390:	
  6788  154A                     l3916:	
  6789  154A  0820               	movf	___aldiv@divisor^(0+128),w
  6790  154B  02A4               	subwf	___aldiv@dividend^(0+128),f
  6791  154C  0821               	movf	(___aldiv@divisor+1)^(0+128),w
  6792  154D  1C03               	skipc
  6793  154E  0F21               	incfsz	(___aldiv@divisor+1)^(0+128),w
  6794  154F  02A5               	subwf	(___aldiv@dividend+1)^(0+128),f
  6795  1550  0822               	movf	(___aldiv@divisor+2)^(0+128),w
  6796  1551  1C03               	skipc
  6797  1552  0F22               	incfsz	(___aldiv@divisor+2)^(0+128),w
  6798  1553  02A6               	subwf	(___aldiv@dividend+2)^(0+128),f
  6799  1554  0823               	movf	(___aldiv@divisor+3)^(0+128),w
  6800  1555  1C03               	skipc
  6801  1556  0F23               	incfsz	(___aldiv@divisor+3)^(0+128),w
  6802  1557  02A7               	subwf	(___aldiv@dividend+3)^(0+128),f
  6803  1558                     l3918:	
  6804  1558  142A               	bsf	___aldiv@quotient^(0+128),0
  6805  1559                     l3920:	
  6806  1559  3001               	movlw	1
  6807  155A                     u5405:	
  6808  155A  1003               	clrc
  6809  155B  0CA3               	rrf	(___aldiv@divisor+3)^(0+128),f
  6810  155C  0CA2               	rrf	(___aldiv@divisor+2)^(0+128),f
  6811  155D  0CA1               	rrf	(___aldiv@divisor+1)^(0+128),f
  6812  155E  0CA0               	rrf	___aldiv@divisor^(0+128),f
  6813  155F  3EFF               	addlw	-1
  6814  1560  1D03               	skipz
  6815  1561  2D5A               	goto	u5405
  6816  1562                     l3922:	
  6817  1562  3001               	movlw	1
  6818  1563  02A8               	subwf	___aldiv@counter^(0+128),f
  6819  1564  1D03               	btfss	3,2
  6820  1565  2D67               	goto	u5411
  6821  1566  2D68               	goto	u5410
  6822  1567                     u5411:	
  6823  1567  2D27               	goto	l3912
  6824  1568                     u5410:	
  6825  1568                     l3924:	
  6826  1568  0829               	movf	___aldiv@sign^(0+128),w
  6827  1569  1903               	btfsc	3,2
  6828  156A  2D6C               	goto	u5421
  6829  156B  2D6D               	goto	u5420
  6830  156C                     u5421:	
  6831  156C  2D78               	goto	l3928
  6832  156D                     u5420:	
  6833  156D                     l3926:	
  6834  156D  09AA               	comf	___aldiv@quotient^(0+128),f
  6835  156E  09AB               	comf	(___aldiv@quotient+1)^(0+128),f
  6836  156F  09AC               	comf	(___aldiv@quotient+2)^(0+128),f
  6837  1570  09AD               	comf	(___aldiv@quotient+3)^(0+128),f
  6838  1571  0AAA               	incf	___aldiv@quotient^(0+128),f
  6839  1572  1903               	skipnz
  6840  1573  0AAB               	incf	(___aldiv@quotient+1)^(0+128),f
  6841  1574  1903               	skipnz
  6842  1575  0AAC               	incf	(___aldiv@quotient+2)^(0+128),f
  6843  1576  1903               	skipnz
  6844  1577  0AAD               	incf	(___aldiv@quotient+3)^(0+128),f
  6845  1578                     l3928:	
  6846  1578  082D               	movf	(___aldiv@quotient+3)^(0+128),w
  6847  1579  00A3               	movwf	(?___aldiv+3)^(0+128)
  6848  157A  082C               	movf	(___aldiv@quotient+2)^(0+128),w
  6849  157B  00A2               	movwf	(?___aldiv+2)^(0+128)
  6850  157C  082B               	movf	(___aldiv@quotient+1)^(0+128),w
  6851  157D  00A1               	movwf	(?___aldiv+1)^(0+128)
  6852  157E  082A               	movf	___aldiv@quotient^(0+128),w
  6853  157F  00A0               	movwf	?___aldiv^(0+128)
  6854  1580                     l573:	
  6855  1580  0008               	return
  6856  1581                     __end_of___aldiv:	
  6857                           
  6858                           	psect	text29
  6859  1F61                     __ptext29:	
  6860 ;; *************** function _I2C_init *****************
  6861 ;; Defined at:
  6862 ;;		line 9 in file "I2C.c"
  6863 ;; Parameters:    Size  Location     Type
  6864 ;;  feq_K           4   25[BANK1 ] const unsigned long 
  6865 ;; Auto vars:     Size  Location     Type
  6866 ;;		None
  6867 ;; Return value:  Size  Location     Type
  6868 ;;                  1    wreg      void 
  6869 ;; Registers used:
  6870 ;;		wreg, status,2, status,0, pclath, cstack
  6871 ;; Tracked objects:
  6872 ;;		On entry : 0/0
  6873 ;;		On exit  : 0/0
  6874 ;;		Unchanged: 0/0
  6875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6876 ;;      Params:         0       0       4       0       0
  6877 ;;      Locals:         0       0       0       0       0
  6878 ;;      Temps:          0       0       4       0       0
  6879 ;;      Totals:         0       0       8       0       0
  6880 ;;Total ram usage:        8 bytes
  6881 ;; Hardware stack levels used:    1
  6882 ;; Hardware stack levels required when called:    5
  6883 ;; This function calls:
  6884 ;;		___lldiv
  6885 ;;		___lmul
  6886 ;; This function is called by:
  6887 ;;		_main
  6888 ;; This function uses a non-reentrant model
  6889 ;;
  6890                           
  6891                           
  6892                           ;psect for function _I2C_init
  6893  1F61                     _I2C_init:	
  6894  1F61                     l4664:	
  6895                           ;incstack = 0
  6896                           ; Regs used in _I2C_init: [wreg+status,2+status,0+pclath+cstack]
  6897                           
  6898                           
  6899                           ;I2C.c: 9: void I2C_init(const unsigned long feq_K);I2C.c: 10: {;I2C.c: 11:   TRISC3 = 1
      +                          ; TRISC4 = 1;
  6900  1F61  1683               	bsf	3,5	;RP0=1, select bank1
  6901  1F62  1303               	bcf	3,6	;RP1=0, select bank1
  6902  1F63  1587               	bsf	7,3	;volatile
  6903  1F64  1607               	bsf	7,4	;volatile
  6904  1F65                     l4666:	
  6905                           
  6906                           ;I2C.c: 13:   SSPCON = 0b00101000;
  6907  1F65  3028               	movlw	40
  6908  1F66  1283               	bcf	3,5	;RP0=0, select bank0
  6909  1F67  1303               	bcf	3,6	;RP1=0, select bank0
  6910  1F68  0094               	movwf	20	;volatile
  6911  1F69                     l4668:	
  6912                           
  6913                           ;I2C.c: 14:   SSPCON2 = 0b00000000;
  6914  1F69  1683               	bsf	3,5	;RP0=1, select bank1
  6915  1F6A  1303               	bcf	3,6	;RP1=0, select bank1
  6916  1F6B  0191               	clrf	17	;volatile
  6917  1F6C                     l4670:	
  6918                           
  6919                           ;I2C.c: 16:   SSPADD = (4000000/(4*feq_K*100))-1;
  6920  1F6C  0839               	movf	I2C_init@feq_K^(0+128),w
  6921  1F6D  00BD               	movwf	??_I2C_init^(0+128)
  6922  1F6E  083A               	movf	(I2C_init@feq_K+1)^(0+128),w
  6923  1F6F  00BE               	movwf	(??_I2C_init^(0+128)+1)
  6924  1F70  083B               	movf	(I2C_init@feq_K+2)^(0+128),w
  6925  1F71  00BF               	movwf	(??_I2C_init^(0+128)+2)
  6926  1F72  083C               	movf	(I2C_init@feq_K+3)^(0+128),w
  6927  1F73  00C0               	movwf	(??_I2C_init^(0+128)+3)
  6928  1F74  3002               	movlw	2
  6929  1F75                     u7025:	
  6930  1F75  1003               	clrc
  6931  1F76  0DBD               	rlf	??_I2C_init^(0+128),f
  6932  1F77  0DBE               	rlf	(??_I2C_init^(0+128)+1),f
  6933  1F78  0DBF               	rlf	(??_I2C_init^(0+128)+2),f
  6934  1F79  0DC0               	rlf	(??_I2C_init^(0+128)+3),f
  6935  1F7A                     u7020:	
  6936  1F7A  3EFF               	addlw	-1
  6937  1F7B  1D03               	skipz
  6938  1F7C  2F75               	goto	u7025
  6939  1F7D  0840               	movf	(??_I2C_init+3)^(0+128),w
  6940  1F7E  00A3               	movwf	(___lmul@multiplier+3)^(0+128)
  6941  1F7F  083F               	movf	(??_I2C_init+2)^(0+128),w
  6942  1F80  00A2               	movwf	(___lmul@multiplier+2)^(0+128)
  6943  1F81  083E               	movf	(??_I2C_init+1)^(0+128),w
  6944  1F82  00A1               	movwf	(___lmul@multiplier+1)^(0+128)
  6945  1F83  083D               	movf	??_I2C_init^(0+128),w
  6946  1F84  00A0               	movwf	___lmul@multiplier^(0+128)
  6947  1F85  3000               	movlw	0
  6948  1F86  00A7               	movwf	(___lmul@multiplicand+3)^(0+128)
  6949  1F87  3000               	movlw	0
  6950  1F88  00A6               	movwf	(___lmul@multiplicand+2)^(0+128)
  6951  1F89  3000               	movlw	0
  6952  1F8A  00A5               	movwf	(___lmul@multiplicand+1)^(0+128)
  6953  1F8B  3064               	movlw	100
  6954  1F8C  00A4               	movwf	___lmul@multiplicand^(0+128)
  6955  1F8D  160A  158A  27B0  160A  158A  	fcall	___lmul
  6956  1F92  1683               	bsf	3,5	;RP0=1, select bank1
  6957  1F93  1303               	bcf	3,6	;RP1=0, select bank1
  6958  1F94  0823               	movf	(?___lmul+3)^(0+128),w
  6959  1F95  00AF               	movwf	(___lldiv@divisor+3)^(0+128)
  6960  1F96  0822               	movf	(?___lmul+2)^(0+128),w
  6961  1F97  00AE               	movwf	(___lldiv@divisor+2)^(0+128)
  6962  1F98  0821               	movf	(?___lmul+1)^(0+128),w
  6963  1F99  00AD               	movwf	(___lldiv@divisor+1)^(0+128)
  6964  1F9A  0820               	movf	?___lmul^(0+128),w
  6965  1F9B  00AC               	movwf	___lldiv@divisor^(0+128)
  6966  1F9C  3000               	movlw	0
  6967  1F9D  00B3               	movwf	(___lldiv@dividend+3)^(0+128)
  6968  1F9E  303D               	movlw	61
  6969  1F9F  00B2               	movwf	(___lldiv@dividend+2)^(0+128)
  6970  1FA0  3009               	movlw	9
  6971  1FA1  00B1               	movwf	(___lldiv@dividend+1)^(0+128)
  6972  1FA2  3000               	movlw	0
  6973  1FA3  00B0               	movwf	___lldiv@dividend^(0+128)
  6974  1FA4  160A  118A  223D  160A  158A  	fcall	___lldiv
  6975  1FA9  1683               	bsf	3,5	;RP0=1, select bank1
  6976  1FAA  1303               	bcf	3,6	;RP1=0, select bank1
  6977  1FAB  082C               	movf	?___lldiv^(0+128),w
  6978  1FAC  3EFF               	addlw	255
  6979  1FAD  0093               	movwf	19	;volatile
  6980  1FAE                     l4672:	
  6981                           
  6982                           ;I2C.c: 17:   SSPSTAT = 0b00000000;
  6983  1FAE  0194               	clrf	20	;volatile
  6984  1FAF                     l366:	
  6985  1FAF  0008               	return
  6986  1FB0                     __end_of_I2C_init:	
  6987                           
  6988                           	psect	text30
  6989  1FB0                     __ptext30:	
  6990 ;; *************** function ___lmul *****************
  6991 ;; Defined at:
  6992 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul32.c"
  6993 ;; Parameters:    Size  Location     Type
  6994 ;;  multiplier      4    0[BANK1 ] unsigned long 
  6995 ;;  multiplicand    4    4[BANK1 ] unsigned long 
  6996 ;; Auto vars:     Size  Location     Type
  6997 ;;  product         4    8[BANK1 ] unsigned long 
  6998 ;; Return value:  Size  Location     Type
  6999 ;;                  4    0[BANK1 ] unsigned long 
  7000 ;; Registers used:
  7001 ;;		wreg, status,2, status,0
  7002 ;; Tracked objects:
  7003 ;;		On entry : 0/0
  7004 ;;		On exit  : 0/0
  7005 ;;		Unchanged: 0/0
  7006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7007 ;;      Params:         0       0       8       0       0
  7008 ;;      Locals:         0       0       4       0       0
  7009 ;;      Temps:          0       1       0       0       0
  7010 ;;      Totals:         0       1      12       0       0
  7011 ;;Total ram usage:       13 bytes
  7012 ;; Hardware stack levels used:    1
  7013 ;; Hardware stack levels required when called:    4
  7014 ;; This function calls:
  7015 ;;		Nothing
  7016 ;; This function is called by:
  7017 ;;		_I2C_init
  7018 ;; This function uses a non-reentrant model
  7019 ;;
  7020                           
  7021                           
  7022                           ;psect for function ___lmul
  7023  1FB0                     ___lmul:	
  7024  1FB0                     l4402:	
  7025                           ;incstack = 0
  7026                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  7027                           
  7028  1FB0  3000               	movlw	0
  7029  1FB1  1683               	bsf	3,5	;RP0=1, select bank1
  7030  1FB2  1303               	bcf	3,6	;RP1=0, select bank1
  7031  1FB3  00AB               	movwf	(___lmul@product+3)^(0+128)
  7032  1FB4  3000               	movlw	0
  7033  1FB5  00AA               	movwf	(___lmul@product+2)^(0+128)
  7034  1FB6  3000               	movlw	0
  7035  1FB7  00A9               	movwf	(___lmul@product+1)^(0+128)
  7036  1FB8  3000               	movlw	0
  7037  1FB9  00A8               	movwf	___lmul@product^(0+128)
  7038  1FBA                     l4404:	
  7039  1FBA  1C20               	btfss	___lmul@multiplier^(0+128),0
  7040  1FBB  2FBD               	goto	u6511
  7041  1FBC  2FBE               	goto	u6510
  7042  1FBD                     u6511:	
  7043  1FBD  2FD5               	goto	l4408
  7044  1FBE                     u6510:	
  7045  1FBE                     l4406:	
  7046  1FBE  0824               	movf	___lmul@multiplicand^(0+128),w
  7047  1FBF  07A8               	addwf	___lmul@product^(0+128),f
  7048  1FC0  0825               	movf	(___lmul@multiplicand+1)^(0+128),w
  7049  1FC1  1103               	clrz
  7050  1FC2  1803               	skipnc
  7051  1FC3  3E01               	addlw	1
  7052  1FC4  1903               	skipnz
  7053  1FC5  2FC7               	goto	u6521
  7054  1FC6  07A9               	addwf	(___lmul@product+1)^(0+128),f
  7055  1FC7                     u6521:	
  7056  1FC7  0826               	movf	(___lmul@multiplicand+2)^(0+128),w
  7057  1FC8  1103               	clrz
  7058  1FC9  1803               	skipnc
  7059  1FCA  3E01               	addlw	1
  7060  1FCB  1903               	skipnz
  7061  1FCC  2FCE               	goto	u6522
  7062  1FCD  07AA               	addwf	(___lmul@product+2)^(0+128),f
  7063  1FCE                     u6522:	
  7064  1FCE  0827               	movf	(___lmul@multiplicand+3)^(0+128),w
  7065  1FCF  1103               	clrz
  7066  1FD0  1803               	skipnc
  7067  1FD1  3E01               	addlw	1
  7068  1FD2  1903               	skipnz
  7069  1FD3  2FD5               	goto	u6523
  7070  1FD4  07AB               	addwf	(___lmul@product+3)^(0+128),f
  7071  1FD5                     u6523:	
  7072  1FD5                     l4408:	
  7073  1FD5  3001               	movlw	1
  7074  1FD6  1283               	bcf	3,5	;RP0=0, select bank0
  7075  1FD7  1303               	bcf	3,6	;RP1=0, select bank0
  7076  1FD8  00BB               	movwf	??___lmul
  7077  1FD9                     u6535:	
  7078  1FD9  1003               	clrc
  7079  1FDA  1683               	bsf	3,5	;RP0=1, select bank1
  7080  1FDB  1303               	bcf	3,6	;RP1=0, select bank1
  7081  1FDC  0DA4               	rlf	___lmul@multiplicand^(0+128),f
  7082  1FDD  0DA5               	rlf	(___lmul@multiplicand+1)^(0+128),f
  7083  1FDE  0DA6               	rlf	(___lmul@multiplicand+2)^(0+128),f
  7084  1FDF  0DA7               	rlf	(___lmul@multiplicand+3)^(0+128),f
  7085  1FE0  1283               	bcf	3,5	;RP0=0, select bank0
  7086  1FE1  1303               	bcf	3,6	;RP1=0, select bank0
  7087  1FE2  0BBB               	decfsz	??___lmul,f
  7088  1FE3  2FD9               	goto	u6535
  7089  1FE4                     l4410:	
  7090  1FE4  3001               	movlw	1
  7091  1FE5                     u6545:	
  7092  1FE5  1003               	clrc
  7093  1FE6  1683               	bsf	3,5	;RP0=1, select bank1
  7094  1FE7  1303               	bcf	3,6	;RP1=0, select bank1
  7095  1FE8  0CA3               	rrf	(___lmul@multiplier+3)^(0+128),f
  7096  1FE9  0CA2               	rrf	(___lmul@multiplier+2)^(0+128),f
  7097  1FEA  0CA1               	rrf	(___lmul@multiplier+1)^(0+128),f
  7098  1FEB  0CA0               	rrf	___lmul@multiplier^(0+128),f
  7099  1FEC  3EFF               	addlw	-1
  7100  1FED  1D03               	skipz
  7101  1FEE  2FE5               	goto	u6545
  7102  1FEF  0823               	movf	(___lmul@multiplier+3)^(0+128),w
  7103  1FF0  0422               	iorwf	(___lmul@multiplier+2)^(0+128),w
  7104  1FF1  0421               	iorwf	(___lmul@multiplier+1)^(0+128),w
  7105  1FF2  0420               	iorwf	___lmul@multiplier^(0+128),w
  7106  1FF3  1D03               	skipz
  7107  1FF4  2FF6               	goto	u6551
  7108  1FF5  2FF7               	goto	u6550
  7109  1FF6                     u6551:	
  7110  1FF6  2FBA               	goto	l4404
  7111  1FF7                     u6550:	
  7112  1FF7                     l4412:	
  7113  1FF7  082B               	movf	(___lmul@product+3)^(0+128),w
  7114  1FF8  00A3               	movwf	(?___lmul+3)^(0+128)
  7115  1FF9  082A               	movf	(___lmul@product+2)^(0+128),w
  7116  1FFA  00A2               	movwf	(?___lmul+2)^(0+128)
  7117  1FFB  0829               	movf	(___lmul@product+1)^(0+128),w
  7118  1FFC  00A1               	movwf	(?___lmul+1)^(0+128)
  7119  1FFD  0828               	movf	___lmul@product^(0+128),w
  7120  1FFE  00A0               	movwf	?___lmul^(0+128)
  7121  1FFF                     l512:	
  7122  1FFF  0008               	return
  7123  2000                     __end_of___lmul:	
  7124                           
  7125                           	psect	text31
  7126  123D                     __ptext31:	
  7127 ;; *************** function ___lldiv *****************
  7128 ;; Defined at:
  7129 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  7130 ;; Parameters:    Size  Location     Type
  7131 ;;  divisor         4   12[BANK1 ] unsigned long 
  7132 ;;  dividend        4   16[BANK1 ] unsigned long 
  7133 ;; Auto vars:     Size  Location     Type
  7134 ;;  quotient        4   20[BANK1 ] unsigned long 
  7135 ;;  counter         1   24[BANK1 ] unsigned char 
  7136 ;; Return value:  Size  Location     Type
  7137 ;;                  4   12[BANK1 ] unsigned long 
  7138 ;; Registers used:
  7139 ;;		wreg, status,2, status,0
  7140 ;; Tracked objects:
  7141 ;;		On entry : 0/0
  7142 ;;		On exit  : 0/0
  7143 ;;		Unchanged: 0/0
  7144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7145 ;;      Params:         0       0       8       0       0
  7146 ;;      Locals:         0       0       5       0       0
  7147 ;;      Temps:          0       1       0       0       0
  7148 ;;      Totals:         0       1      13       0       0
  7149 ;;Total ram usage:       14 bytes
  7150 ;; Hardware stack levels used:    1
  7151 ;; Hardware stack levels required when called:    4
  7152 ;; This function calls:
  7153 ;;		Nothing
  7154 ;; This function is called by:
  7155 ;;		_I2C_init
  7156 ;; This function uses a non-reentrant model
  7157 ;;
  7158                           
  7159                           
  7160                           ;psect for function ___lldiv
  7161  123D                     ___lldiv:	
  7162  123D                     l4416:	
  7163                           ;incstack = 0
  7164                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7165                           
  7166  123D  3000               	movlw	0
  7167  123E  1683               	bsf	3,5	;RP0=1, select bank1
  7168  123F  1303               	bcf	3,6	;RP1=0, select bank1
  7169  1240  00B7               	movwf	(___lldiv@quotient+3)^(0+128)
  7170  1241  3000               	movlw	0
  7171  1242  00B6               	movwf	(___lldiv@quotient+2)^(0+128)
  7172  1243  3000               	movlw	0
  7173  1244  00B5               	movwf	(___lldiv@quotient+1)^(0+128)
  7174  1245  3000               	movlw	0
  7175  1246  00B4               	movwf	___lldiv@quotient^(0+128)
  7176  1247  082F               	movf	(___lldiv@divisor+3)^(0+128),w
  7177  1248  042E               	iorwf	(___lldiv@divisor+2)^(0+128),w
  7178  1249  042D               	iorwf	(___lldiv@divisor+1)^(0+128),w
  7179  124A  042C               	iorwf	___lldiv@divisor^(0+128),w
  7180  124B  1903               	skipnz
  7181  124C  2A4E               	goto	u6561
  7182  124D  2A4F               	goto	u6560
  7183  124E                     u6561:	
  7184  124E  2AAC               	goto	l4436
  7185  124F                     u6560:	
  7186  124F                     l4418:	
  7187  124F  01B8               	clrf	___lldiv@counter^(0+128)
  7188  1250  0AB8               	incf	___lldiv@counter^(0+128),f
  7189  1251  2A67               	goto	l4422
  7190  1252                     l4420:	
  7191  1252  3001               	movlw	1
  7192  1253  1283               	bcf	3,5	;RP0=0, select bank0
  7193  1254  1303               	bcf	3,6	;RP1=0, select bank0
  7194  1255  00BC               	movwf	??___lldiv
  7195  1256                     u6575:	
  7196  1256  1003               	clrc
  7197  1257  1683               	bsf	3,5	;RP0=1, select bank1
  7198  1258  1303               	bcf	3,6	;RP1=0, select bank1
  7199  1259  0DAC               	rlf	___lldiv@divisor^(0+128),f
  7200  125A  0DAD               	rlf	(___lldiv@divisor+1)^(0+128),f
  7201  125B  0DAE               	rlf	(___lldiv@divisor+2)^(0+128),f
  7202  125C  0DAF               	rlf	(___lldiv@divisor+3)^(0+128),f
  7203  125D  1283               	bcf	3,5	;RP0=0, select bank0
  7204  125E  1303               	bcf	3,6	;RP1=0, select bank0
  7205  125F  0BBC               	decfsz	??___lldiv,f
  7206  1260  2A56               	goto	u6575
  7207  1261  3001               	movlw	1
  7208  1262  00BC               	movwf	??___lldiv
  7209  1263  083C               	movf	??___lldiv,w
  7210  1264  1683               	bsf	3,5	;RP0=1, select bank1
  7211  1265  1303               	bcf	3,6	;RP1=0, select bank1
  7212  1266  07B8               	addwf	___lldiv@counter^(0+128),f
  7213  1267                     l4422:	
  7214  1267  1FAF               	btfss	(___lldiv@divisor+3)^(0+128),7
  7215  1268  2A6A               	goto	u6581
  7216  1269  2A6B               	goto	u6580
  7217  126A                     u6581:	
  7218  126A  2A52               	goto	l4420
  7219  126B                     u6580:	
  7220  126B                     l4424:	
  7221  126B  3001               	movlw	1
  7222  126C  1283               	bcf	3,5	;RP0=0, select bank0
  7223  126D  1303               	bcf	3,6	;RP1=0, select bank0
  7224  126E  00BC               	movwf	??___lldiv
  7225  126F                     u6595:	
  7226  126F  1003               	clrc
  7227  1270  1683               	bsf	3,5	;RP0=1, select bank1
  7228  1271  1303               	bcf	3,6	;RP1=0, select bank1
  7229  1272  0DB4               	rlf	___lldiv@quotient^(0+128),f
  7230  1273  0DB5               	rlf	(___lldiv@quotient+1)^(0+128),f
  7231  1274  0DB6               	rlf	(___lldiv@quotient+2)^(0+128),f
  7232  1275  0DB7               	rlf	(___lldiv@quotient+3)^(0+128),f
  7233  1276  1283               	bcf	3,5	;RP0=0, select bank0
  7234  1277  1303               	bcf	3,6	;RP1=0, select bank0
  7235  1278  0BBC               	decfsz	??___lldiv,f
  7236  1279  2A6F               	goto	u6595
  7237  127A                     l4426:	
  7238  127A  1683               	bsf	3,5	;RP0=1, select bank1
  7239  127B  1303               	bcf	3,6	;RP1=0, select bank1
  7240  127C  082F               	movf	(___lldiv@divisor+3)^(0+128),w
  7241  127D  0233               	subwf	(___lldiv@dividend+3)^(0+128),w
  7242  127E  1D03               	skipz
  7243  127F  2A8A               	goto	u6605
  7244  1280  082E               	movf	(___lldiv@divisor+2)^(0+128),w
  7245  1281  0232               	subwf	(___lldiv@dividend+2)^(0+128),w
  7246  1282  1D03               	skipz
  7247  1283  2A8A               	goto	u6605
  7248  1284  082D               	movf	(___lldiv@divisor+1)^(0+128),w
  7249  1285  0231               	subwf	(___lldiv@dividend+1)^(0+128),w
  7250  1286  1D03               	skipz
  7251  1287  2A8A               	goto	u6605
  7252  1288  082C               	movf	___lldiv@divisor^(0+128),w
  7253  1289  0230               	subwf	___lldiv@dividend^(0+128),w
  7254  128A                     u6605:	
  7255  128A  1C03               	skipc
  7256  128B  2A8D               	goto	u6601
  7257  128C  2A8E               	goto	u6600
  7258  128D                     u6601:	
  7259  128D  2A9D               	goto	l4432
  7260  128E                     u6600:	
  7261  128E                     l4428:	
  7262  128E  082C               	movf	___lldiv@divisor^(0+128),w
  7263  128F  02B0               	subwf	___lldiv@dividend^(0+128),f
  7264  1290  082D               	movf	(___lldiv@divisor+1)^(0+128),w
  7265  1291  1C03               	skipc
  7266  1292  0F2D               	incfsz	(___lldiv@divisor+1)^(0+128),w
  7267  1293  02B1               	subwf	(___lldiv@dividend+1)^(0+128),f
  7268  1294  082E               	movf	(___lldiv@divisor+2)^(0+128),w
  7269  1295  1C03               	skipc
  7270  1296  0F2E               	incfsz	(___lldiv@divisor+2)^(0+128),w
  7271  1297  02B2               	subwf	(___lldiv@dividend+2)^(0+128),f
  7272  1298  082F               	movf	(___lldiv@divisor+3)^(0+128),w
  7273  1299  1C03               	skipc
  7274  129A  0F2F               	incfsz	(___lldiv@divisor+3)^(0+128),w
  7275  129B  02B3               	subwf	(___lldiv@dividend+3)^(0+128),f
  7276  129C                     l4430:	
  7277  129C  1434               	bsf	___lldiv@quotient^(0+128),0
  7278  129D                     l4432:	
  7279  129D  3001               	movlw	1
  7280  129E                     u6615:	
  7281  129E  1003               	clrc
  7282  129F  0CAF               	rrf	(___lldiv@divisor+3)^(0+128),f
  7283  12A0  0CAE               	rrf	(___lldiv@divisor+2)^(0+128),f
  7284  12A1  0CAD               	rrf	(___lldiv@divisor+1)^(0+128),f
  7285  12A2  0CAC               	rrf	___lldiv@divisor^(0+128),f
  7286  12A3  3EFF               	addlw	-1
  7287  12A4  1D03               	skipz
  7288  12A5  2A9E               	goto	u6615
  7289  12A6                     l4434:	
  7290  12A6  3001               	movlw	1
  7291  12A7  02B8               	subwf	___lldiv@counter^(0+128),f
  7292  12A8  1D03               	btfss	3,2
  7293  12A9  2AAB               	goto	u6621
  7294  12AA  2AAC               	goto	u6620
  7295  12AB                     u6621:	
  7296  12AB  2A6B               	goto	l4424
  7297  12AC                     u6620:	
  7298  12AC                     l4436:	
  7299  12AC  0837               	movf	(___lldiv@quotient+3)^(0+128),w
  7300  12AD  00AF               	movwf	(?___lldiv+3)^(0+128)
  7301  12AE  0836               	movf	(___lldiv@quotient+2)^(0+128),w
  7302  12AF  00AE               	movwf	(?___lldiv+2)^(0+128)
  7303  12B0  0835               	movf	(___lldiv@quotient+1)^(0+128),w
  7304  12B1  00AD               	movwf	(?___lldiv+1)^(0+128)
  7305  12B2  0834               	movf	___lldiv@quotient^(0+128),w
  7306  12B3  00AC               	movwf	?___lldiv^(0+128)
  7307  12B4                     l534:	
  7308  12B4  0008               	return
  7309  12B5                     __end_of___lldiv:	
  7310                           
  7311                           	psect	text32
  7312  1EE1                     __ptext32:	
  7313 ;; *************** function _Aquisicao_Dados *****************
  7314 ;; Defined at:
  7315 ;;		line 259 in file "main.c"
  7316 ;; Parameters:    Size  Location     Type
  7317 ;;		None
  7318 ;; Auto vars:     Size  Location     Type
  7319 ;;  aqui            8   31[BANK3 ] struct .
  7320 ;; Return value:  Size  Location     Type
  7321 ;;                  8   19[BANK3 ] struct .
  7322 ;; Registers used:
  7323 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7324 ;; Tracked objects:
  7325 ;;		On entry : 0/0
  7326 ;;		On exit  : 0/0
  7327 ;;		Unchanged: 0/0
  7328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7329 ;;      Params:         0       0       0       8       0
  7330 ;;      Locals:         0       0       0       8       0
  7331 ;;      Temps:          0       0       0       4       0
  7332 ;;      Totals:         0       0       0      20       0
  7333 ;;Total ram usage:       20 bytes
  7334 ;; Hardware stack levels used:    1
  7335 ;; Hardware stack levels required when called:    7
  7336 ;; This function calls:
  7337 ;;		_get_humidade
  7338 ;;		_get_temperatura
  7339 ;; This function is called by:
  7340 ;;		_main
  7341 ;; This function uses a non-reentrant model
  7342 ;;
  7343                           
  7344                           
  7345                           ;psect for function _Aquisicao_Dados
  7346  1EE1                     _Aquisicao_Dados:	
  7347  1EE1                     l4584:	
  7348                           ;incstack = 0
  7349                           ; Regs used in _Aquisicao_Dados: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7350                           
  7351                           
  7352                           ;main.c: 261:     LAST_ALARM=Data_atual.alarm;;main.c: 262:   }else if(Data_atual.alarm=
      +                          =0){
  7353  1EE1  160A  158A  2444  160A  158A  	fcall	_get_humidade
  7354  1EE6  1683               	bsf	3,5	;RP0=1, select bank1
  7355  1EE7  1303               	bcf	3,6	;RP1=0, select bank1
  7356  1EE8  0822               	movf	(?_get_humidade+1)^(0+128),w
  7357  1EE9  1683               	bsf	3,5	;RP0=1, select bank3
  7358  1EEA  1703               	bsf	3,6	;RP1=1, select bank3
  7359  1EEB  00B2               	movwf	((Aquisicao_Dados@aqui+1)^(0+384)+2)
  7360  1EEC  1683               	bsf	3,5	;RP0=1, select bank1
  7361  1EED  1303               	bcf	3,6	;RP1=0, select bank1
  7362  1EEE  0821               	movf	?_get_humidade^(0+128),w
  7363  1EEF  1683               	bsf	3,5	;RP0=1, select bank3
  7364  1EF0  1703               	bsf	3,6	;RP1=1, select bank3
  7365  1EF1  00B1               	movwf	(Aquisicao_Dados@aqui^(0+384)+2)
  7366  1EF2                     l4586:	
  7367                           
  7368                           ;main.c: 263:     PORTCbits.RC1=0;
  7369  1EF2  160A  118A  21C8  160A  158A  	fcall	_get_temperatura
  7370  1EF7  1683               	bsf	3,5	;RP0=1, select bank3
  7371  1EF8  1703               	bsf	3,6	;RP1=1, select bank3
  7372  1EF9  081E               	movf	(?_get_temperatura+1)^(0+384),w
  7373  1EFA  00B0               	movwf	(Aquisicao_Dados@aqui+1)^(0+384)
  7374  1EFB  081D               	movf	?_get_temperatura^(0+384),w
  7375  1EFC  00AF               	movwf	Aquisicao_Dados@aqui^(0+384)
  7376  1EFD                     l4588:	
  7377                           
  7378                           ;main.c: 264:     PORTBbits.RB7=0;
  7379  1EFD  1683               	bsf	3,5	;RP0=1, select bank1
  7380  1EFE  1303               	bcf	3,6	;RP1=0, select bank1
  7381  1EFF  086F               	movf	(_fan_rpm+1)^(0+128),w
  7382  1F00  1683               	bsf	3,5	;RP0=1, select bank3
  7383  1F01  1703               	bsf	3,6	;RP1=1, select bank3
  7384  1F02  00B4               	movwf	((Aquisicao_Dados@aqui+1)^(0+384)+4)
  7385  1F03  1683               	bsf	3,5	;RP0=1, select bank1
  7386  1F04  1303               	bcf	3,6	;RP1=0, select bank1
  7387  1F05  086E               	movf	_fan_rpm^(0+128),w
  7388  1F06  1683               	bsf	3,5	;RP0=1, select bank3
  7389  1F07  1703               	bsf	3,6	;RP1=1, select bank3
  7390  1F08  00B3               	movwf	(Aquisicao_Dados@aqui^(0+384)+4)
  7391  1F09                     l4590:	
  7392                           
  7393                           ;main.c: 265:     LAST_ALARM=0;
  7394  1F09  30A3               	movlw	?_Aquisicao_Dados& (0+255)
  7395  1F0A  0084               	movwf	4
  7396  1F0B  30AF               	movlw	low Aquisicao_Dados@aqui
  7397  1F0C  00AB               	movwf	??_Aquisicao_Dados^(0+384)
  7398  1F0D  0804               	movf	4,w
  7399  1F0E  00AC               	movwf	(??_Aquisicao_Dados^(0+384)+1)
  7400  1F0F  3008               	movlw	8
  7401  1F10  00AD               	movwf	(??_Aquisicao_Dados^(0+384)+2)
  7402  1F11                     u6870:	
  7403  1F11  082B               	movf	??_Aquisicao_Dados^(0+384),w
  7404  1F12  0084               	movwf	4
  7405  1F13  1783               	bsf	3,7	;select IRP bank3
  7406  1F14  0800               	movf	0,w
  7407  1F15  00AE               	movwf	(??_Aquisicao_Dados^(0+384)+3)
  7408  1F16  0AAB               	incf	??_Aquisicao_Dados^(0+384),f
  7409  1F17  082C               	movf	(??_Aquisicao_Dados^(0+384)+1),w
  7410  1F18  0084               	movwf	4
  7411  1F19  082E               	movf	(??_Aquisicao_Dados^(0+384)+3),w
  7412  1F1A  0080               	movwf	0
  7413  1F1B  0AAC               	incf	(??_Aquisicao_Dados^(0+384)+1),f
  7414  1F1C  0BAD               	decfsz	(??_Aquisicao_Dados^(0+384)+2),f
  7415  1F1D  2F11               	goto	u6870
  7416  1F1E                     l203:	
  7417  1F1E  0008               	return
  7418  1F1F                     __end_of_Aquisicao_Dados:	
  7419                           
  7420                           	psect	text33
  7421  11C8                     __ptext33:	
  7422 ;; *************** function _get_temperatura *****************
  7423 ;; Defined at:
  7424 ;;		line 85 in file "main.c"
  7425 ;; Parameters:    Size  Location     Type
  7426 ;;		None
  7427 ;; Auto vars:     Size  Location     Type
  7428 ;;  b               2   17[BANK3 ] int 
  7429 ;;  a               2   15[BANK3 ] int 
  7430 ;; Return value:  Size  Location     Type
  7431 ;;                  2   13[BANK3 ] int 
  7432 ;; Registers used:
  7433 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7434 ;; Tracked objects:
  7435 ;;		On entry : 0/0
  7436 ;;		On exit  : 0/0
  7437 ;;		Unchanged: 0/0
  7438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7439 ;;      Params:         0       0       0       2       0
  7440 ;;      Locals:         0       0       0       4       0
  7441 ;;      Temps:          0       0       0       0       0
  7442 ;;      Totals:         0       0       0       6       0
  7443 ;;Total ram usage:        6 bytes
  7444 ;; Hardware stack levels used:    1
  7445 ;; Hardware stack levels required when called:    6
  7446 ;; This function calls:
  7447 ;;		_ADC_Read
  7448 ;;		___fldiv
  7449 ;;		___flmul
  7450 ;;		___fltol
  7451 ;;		___xxtofl
  7452 ;; This function is called by:
  7453 ;;		_Aquisicao_Dados
  7454 ;; This function uses a non-reentrant model
  7455 ;;
  7456                           
  7457                           
  7458                           ;psect for function _get_temperatura
  7459  11C8                     _get_temperatura:	
  7460  11C8                     l4308:	
  7461                           ;incstack = 0
  7462                           ; Regs used in _get_temperatura: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7463                           
  7464                           
  7465                           ;main.c: 87:             break;;main.c: 88:         case 50:;main.c: 90:             cal
      +                          ibracao.temperatuta_incendio = int_input;
  7466  11C8  3002               	movlw	2
  7467  11C9  160A  158A  255B  160A  118A  	fcall	_ADC_Read
  7468  11CE  1283               	bcf	3,5	;RP0=0, select bank0
  7469  11CF  1303               	bcf	3,6	;RP1=0, select bank0
  7470  11D0  083C               	movf	?_ADC_Read+1,w
  7471  11D1  1683               	bsf	3,5	;RP0=1, select bank3
  7472  11D2  1703               	bsf	3,6	;RP1=1, select bank3
  7473  11D3  00A0               	movwf	(get_temperatura@a+1)^(0+384)
  7474  11D4  1283               	bcf	3,5	;RP0=0, select bank0
  7475  11D5  1303               	bcf	3,6	;RP1=0, select bank0
  7476  11D6  083B               	movf	?_ADC_Read,w
  7477  11D7  1683               	bsf	3,5	;RP0=1, select bank3
  7478  11D8  1703               	bsf	3,6	;RP1=1, select bank3
  7479  11D9  009F               	movwf	get_temperatura@a^(0+384)
  7480  11DA                     l4310:	
  7481                           
  7482                           ;main.c: 91:             break;
  7483  11DA  081F               	movf	get_temperatura@a^(0+384),w
  7484  11DB  1683               	bsf	3,5	;RP0=1, select bank1
  7485  11DC  1303               	bcf	3,6	;RP1=0, select bank1
  7486  11DD  00AE               	movwf	___xxtofl@val^(0+128)
  7487  11DE  1683               	bsf	3,5	;RP0=1, select bank3
  7488  11DF  1703               	bsf	3,6	;RP1=1, select bank3
  7489  11E0  0820               	movf	(get_temperatura@a+1)^(0+384),w
  7490  11E1  1683               	bsf	3,5	;RP0=1, select bank1
  7491  11E2  1303               	bcf	3,6	;RP1=0, select bank1
  7492  11E3  00AF               	movwf	(___xxtofl@val+1)^(0+128)
  7493  11E4  3000               	movlw	0
  7494  11E5  1BAF               	btfsc	(___xxtofl@val+1)^(0+128),7
  7495  11E6  30FF               	movlw	255
  7496  11E7  00B0               	movwf	(___xxtofl@val+2)^(0+128)
  7497  11E8  00B1               	movwf	(___xxtofl@val+3)^(0+128)
  7498  11E9  3001               	movlw	1
  7499  11EA  160A  118A  2581  160A  118A  	fcall	___xxtofl
  7500  11EF  1683               	bsf	3,5	;RP0=1, select bank1
  7501  11F0  1303               	bcf	3,6	;RP1=0, select bank1
  7502  11F1  0831               	movf	(?___xxtofl+3)^(0+128),w
  7503  11F2  00DD               	movwf	(___flmul@a+3)^(0+128)
  7504  11F3  0830               	movf	(?___xxtofl+2)^(0+128),w
  7505  11F4  00DC               	movwf	(___flmul@a+2)^(0+128)
  7506  11F5  082F               	movf	(?___xxtofl+1)^(0+128),w
  7507  11F6  00DB               	movwf	(___flmul@a+1)^(0+128)
  7508  11F7  082E               	movf	?___xxtofl^(0+128),w
  7509  11F8  00DA               	movwf	___flmul@a^(0+128)
  7510  11F9  3041               	movlw	65
  7511  11FA  00D9               	movwf	(___flmul@b+3)^(0+128)
  7512  11FB  30DC               	movlw	220
  7513  11FC  00D8               	movwf	(___flmul@b+2)^(0+128)
  7514  11FD  3000               	movlw	0
  7515  11FE  00D7               	movwf	(___flmul@b+1)^(0+128)
  7516  11FF  3000               	movlw	0
  7517  1200  00D6               	movwf	___flmul@b^(0+128)
  7518  1201  120A  118A  2051  160A  118A  	fcall	___flmul
  7519  1206  1683               	bsf	3,5	;RP0=1, select bank1
  7520  1207  1303               	bcf	3,6	;RP1=0, select bank1
  7521  1208  0859               	movf	(?___flmul+3)^(0+128),w
  7522  1209  00C3               	movwf	(___fldiv@b+3)^(0+128)
  7523  120A  0858               	movf	(?___flmul+2)^(0+128),w
  7524  120B  00C2               	movwf	(___fldiv@b+2)^(0+128)
  7525  120C  0857               	movf	(?___flmul+1)^(0+128),w
  7526  120D  00C1               	movwf	(___fldiv@b+1)^(0+128)
  7527  120E  0856               	movf	?___flmul^(0+128),w
  7528  120F  00C0               	movwf	___fldiv@b^(0+128)
  7529  1210  3042               	movlw	66
  7530  1211  00BF               	movwf	(___fldiv@a+3)^(0+128)
  7531  1212  3060               	movlw	96
  7532  1213  00BE               	movwf	(___fldiv@a+2)^(0+128)
  7533  1214  3000               	movlw	0
  7534  1215  00BD               	movwf	(___fldiv@a+1)^(0+128)
  7535  1216  3000               	movlw	0
  7536  1217  00BC               	movwf	___fldiv@a^(0+128)
  7537  1218  120A  118A  25D4  160A  118A  	fcall	___fldiv
  7538  121D  1683               	bsf	3,5	;RP0=1, select bank1
  7539  121E  1303               	bcf	3,6	;RP1=0, select bank1
  7540  121F  083F               	movf	(?___fldiv+3)^(0+128),w
  7541  1220  00E6               	movwf	(___fltol@f1+3)^(0+128)
  7542  1221  083E               	movf	(?___fldiv+2)^(0+128),w
  7543  1222  00E5               	movwf	(___fltol@f1+2)^(0+128)
  7544  1223  083D               	movf	(?___fldiv+1)^(0+128),w
  7545  1224  00E4               	movwf	(___fltol@f1+1)^(0+128)
  7546  1225  083C               	movf	?___fldiv^(0+128),w
  7547  1226  00E3               	movwf	___fltol@f1^(0+128)
  7548  1227  160A  118A  22B5  160A  118A  	fcall	___fltol
  7549  122C  1683               	bsf	3,5	;RP0=1, select bank1
  7550  122D  1303               	bcf	3,6	;RP1=0, select bank1
  7551  122E  0864               	movf	(?___fltol+1)^(0+128),w
  7552  122F  1683               	bsf	3,5	;RP0=1, select bank3
  7553  1230  1703               	bsf	3,6	;RP1=1, select bank3
  7554  1231  00A2               	movwf	(get_temperatura@b+1)^(0+384)
  7555  1232  1683               	bsf	3,5	;RP0=1, select bank1
  7556  1233  1303               	bcf	3,6	;RP1=0, select bank1
  7557  1234  0863               	movf	?___fltol^(0+128),w
  7558  1235  1683               	bsf	3,5	;RP0=1, select bank3
  7559  1236  1703               	bsf	3,6	;RP1=1, select bank3
  7560  1237  00A1               	movwf	get_temperatura@b^(0+384)
  7561  1238                     l4312:	
  7562                           
  7563                           ;main.c: 92:     }
  7564  1238  0822               	movf	(get_temperatura@b+1)^(0+384),w
  7565  1239  009E               	movwf	(?_get_temperatura+1)^(0+384)
  7566  123A  0821               	movf	get_temperatura@b^(0+384),w
  7567  123B  009D               	movwf	?_get_temperatura^(0+384)
  7568  123C                     l134:	
  7569  123C  0008               	return
  7570  123D                     __end_of_get_temperatura:	
  7571                           
  7572                           	psect	text34
  7573  1581                     __ptext34:	
  7574 ;; *************** function ___xxtofl *****************
  7575 ;; Defined at:
  7576 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\xxtofl.c"
  7577 ;; Parameters:    Size  Location     Type
  7578 ;;  sign            1    wreg     unsigned char 
  7579 ;;  val             4   14[BANK1 ] long 
  7580 ;; Auto vars:     Size  Location     Type
  7581 ;;  sign            1   22[BANK1 ] unsigned char 
  7582 ;;  arg             4   24[BANK1 ] unsigned long 
  7583 ;;  exp             1   23[BANK1 ] unsigned char 
  7584 ;; Return value:  Size  Location     Type
  7585 ;;                  4   14[BANK1 ] unsigned char 
  7586 ;; Registers used:
  7587 ;;		wreg, status,2, status,0
  7588 ;; Tracked objects:
  7589 ;;		On entry : 0/0
  7590 ;;		On exit  : 0/0
  7591 ;;		Unchanged: 0/0
  7592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7593 ;;      Params:         0       0       4       0       0
  7594 ;;      Locals:         0       0       6       0       0
  7595 ;;      Temps:          0       0       4       0       0
  7596 ;;      Totals:         0       0      14       0       0
  7597 ;;Total ram usage:       14 bytes
  7598 ;; Hardware stack levels used:    1
  7599 ;; Hardware stack levels required when called:    4
  7600 ;; This function calls:
  7601 ;;		Nothing
  7602 ;; This function is called by:
  7603 ;;		_PWM_Duty
  7604 ;;		_get_temperatura
  7605 ;; This function uses a non-reentrant model
  7606 ;;
  7607                           
  7608                           
  7609                           ;psect for function ___xxtofl
  7610  1581                     ___xxtofl:	
  7611                           
  7612                           ;incstack = 0
  7613                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7614                           ;___xxtofl@sign stored from wreg
  7615  1581  1683               	bsf	3,5	;RP0=1, select bank1
  7616  1582  1303               	bcf	3,6	;RP1=0, select bank1
  7617  1583  00B6               	movwf	___xxtofl@sign^(0+128)
  7618  1584                     l4250:	
  7619  1584  0836               	movf	___xxtofl@sign^(0+128),w
  7620  1585  1903               	btfsc	3,2
  7621  1586  2D88               	goto	u6191
  7622  1587  2D89               	goto	u6190
  7623  1588                     u6191:	
  7624  1588  2D9D               	goto	l4256
  7625  1589                     u6190:	
  7626  1589                     l4252:	
  7627  1589  1FB1               	btfss	(___xxtofl@val+3)^(0+128),7
  7628  158A  2D8C               	goto	u6201
  7629  158B  2D8D               	goto	u6200
  7630  158C                     u6201:	
  7631  158C  2D9D               	goto	l4256
  7632  158D                     u6200:	
  7633  158D                     l4254:	
  7634  158D  092E               	comf	___xxtofl@val^(0+128),w
  7635  158E  00B8               	movwf	___xxtofl@arg^(0+128)
  7636  158F  092F               	comf	(___xxtofl@val^(0+128)+1),w
  7637  1590  00B9               	movwf	(___xxtofl@arg+1)^(0+128)
  7638  1591  0930               	comf	(___xxtofl@val^(0+128)+2),w
  7639  1592  00BA               	movwf	(___xxtofl@arg+2)^(0+128)
  7640  1593  0931               	comf	(___xxtofl@val^(0+128)+3),w
  7641  1594  00BB               	movwf	(___xxtofl@arg+3)^(0+128)
  7642  1595  0AB8               	incf	___xxtofl@arg^(0+128),f
  7643  1596  1903               	skipnz
  7644  1597  0AB9               	incf	(___xxtofl@arg+1)^(0+128),f
  7645  1598  1903               	skipnz
  7646  1599  0ABA               	incf	(___xxtofl@arg+2)^(0+128),f
  7647  159A  1903               	skipnz
  7648  159B  0ABB               	incf	(___xxtofl@arg+3)^(0+128),f
  7649  159C  2DA5               	goto	l925
  7650  159D                     l4256:	
  7651  159D  0831               	movf	(___xxtofl@val+3)^(0+128),w
  7652  159E  00BB               	movwf	(___xxtofl@arg+3)^(0+128)
  7653  159F  0830               	movf	(___xxtofl@val+2)^(0+128),w
  7654  15A0  00BA               	movwf	(___xxtofl@arg+2)^(0+128)
  7655  15A1  082F               	movf	(___xxtofl@val+1)^(0+128),w
  7656  15A2  00B9               	movwf	(___xxtofl@arg+1)^(0+128)
  7657  15A3  082E               	movf	___xxtofl@val^(0+128),w
  7658  15A4  00B8               	movwf	___xxtofl@arg^(0+128)
  7659  15A5                     l925:	
  7660  15A5  0831               	movf	(___xxtofl@val+3)^(0+128),w
  7661  15A6  0430               	iorwf	(___xxtofl@val+2)^(0+128),w
  7662  15A7  042F               	iorwf	(___xxtofl@val+1)^(0+128),w
  7663  15A8  042E               	iorwf	___xxtofl@val^(0+128),w
  7664  15A9  1D03               	skipz
  7665  15AA  2DAC               	goto	u6211
  7666  15AB  2DAD               	goto	u6210
  7667  15AC                     u6211:	
  7668  15AC  2DB6               	goto	l4262
  7669  15AD                     u6210:	
  7670  15AD                     l4258:	
  7671  15AD  3000               	movlw	0
  7672  15AE  00B1               	movwf	(?___xxtofl+3)^(0+128)
  7673  15AF  3000               	movlw	0
  7674  15B0  00B0               	movwf	(?___xxtofl+2)^(0+128)
  7675  15B1  3000               	movlw	0
  7676  15B2  00AF               	movwf	(?___xxtofl+1)^(0+128)
  7677  15B3  3000               	movlw	0
  7678  15B4  00AE               	movwf	?___xxtofl^(0+128)
  7679  15B5  2E3C               	goto	l927
  7680  15B6                     l4262:	
  7681  15B6  3096               	movlw	150
  7682  15B7  00B2               	movwf	??___xxtofl^(0+128)
  7683  15B8  0832               	movf	??___xxtofl^(0+128),w
  7684  15B9  00B7               	movwf	___xxtofl@exp^(0+128)
  7685  15BA  2DC8               	goto	l4266
  7686  15BB                     l4264:	
  7687  15BB  3001               	movlw	1
  7688  15BC  00B2               	movwf	??___xxtofl^(0+128)
  7689  15BD  0832               	movf	??___xxtofl^(0+128),w
  7690  15BE  07B7               	addwf	___xxtofl@exp^(0+128),f
  7691  15BF  3001               	movlw	1
  7692  15C0                     u6225:	
  7693  15C0  1003               	clrc
  7694  15C1  0CBB               	rrf	(___xxtofl@arg+3)^(0+128),f
  7695  15C2  0CBA               	rrf	(___xxtofl@arg+2)^(0+128),f
  7696  15C3  0CB9               	rrf	(___xxtofl@arg+1)^(0+128),f
  7697  15C4  0CB8               	rrf	___xxtofl@arg^(0+128),f
  7698  15C5  3EFF               	addlw	-1
  7699  15C6  1D03               	skipz
  7700  15C7  2DC0               	goto	u6225
  7701  15C8                     l4266:	
  7702  15C8  30FE               	movlw	254
  7703  15C9  053B               	andwf	(___xxtofl@arg+3)^(0+128),w
  7704  15CA  1D03               	btfss	3,2
  7705  15CB  2DCD               	goto	u6231
  7706  15CC  2DCE               	goto	u6230
  7707  15CD                     u6231:	
  7708  15CD  2DBB               	goto	l4264
  7709  15CE                     u6230:	
  7710  15CE  2DEA               	goto	l931
  7711  15CF                     l4268:	
  7712  15CF  3001               	movlw	1
  7713  15D0  00B2               	movwf	??___xxtofl^(0+128)
  7714  15D1  0832               	movf	??___xxtofl^(0+128),w
  7715  15D2  07B7               	addwf	___xxtofl@exp^(0+128),f
  7716  15D3                     l4270:	
  7717  15D3  3001               	movlw	1
  7718  15D4  07B8               	addwf	___xxtofl@arg^(0+128),f
  7719  15D5  3000               	movlw	0
  7720  15D6  1803               	skipnc
  7721  15D7  3001               	movlw	1
  7722  15D8  07B9               	addwf	(___xxtofl@arg+1)^(0+128),f
  7723  15D9  3000               	movlw	0
  7724  15DA  1803               	skipnc
  7725  15DB  3001               	movlw	1
  7726  15DC  07BA               	addwf	(___xxtofl@arg+2)^(0+128),f
  7727  15DD  3000               	movlw	0
  7728  15DE  1803               	skipnc
  7729  15DF  3001               	movlw	1
  7730  15E0  07BB               	addwf	(___xxtofl@arg+3)^(0+128),f
  7731  15E1                     l4272:	
  7732  15E1  3001               	movlw	1
  7733  15E2                     u6245:	
  7734  15E2  1003               	clrc
  7735  15E3  0CBB               	rrf	(___xxtofl@arg+3)^(0+128),f
  7736  15E4  0CBA               	rrf	(___xxtofl@arg+2)^(0+128),f
  7737  15E5  0CB9               	rrf	(___xxtofl@arg+1)^(0+128),f
  7738  15E6  0CB8               	rrf	___xxtofl@arg^(0+128),f
  7739  15E7  3EFF               	addlw	-1
  7740  15E8  1D03               	skipz
  7741  15E9  2DE2               	goto	u6245
  7742  15EA                     l931:	
  7743  15EA  30FF               	movlw	255
  7744  15EB  053B               	andwf	(___xxtofl@arg+3)^(0+128),w
  7745  15EC  1D03               	btfss	3,2
  7746  15ED  2DEF               	goto	u6251
  7747  15EE  2DF0               	goto	u6250
  7748  15EF                     u6251:	
  7749  15EF  2DCF               	goto	l4268
  7750  15F0                     u6250:	
  7751  15F0  2DFC               	goto	l4276
  7752  15F1                     l4274:	
  7753  15F1  3001               	movlw	1
  7754  15F2  02B7               	subwf	___xxtofl@exp^(0+128),f
  7755  15F3  3001               	movlw	1
  7756  15F4  00B2               	movwf	??___xxtofl^(0+128)
  7757  15F5                     u6265:	
  7758  15F5  1003               	clrc
  7759  15F6  0DB8               	rlf	___xxtofl@arg^(0+128),f
  7760  15F7  0DB9               	rlf	(___xxtofl@arg+1)^(0+128),f
  7761  15F8  0DBA               	rlf	(___xxtofl@arg+2)^(0+128),f
  7762  15F9  0DBB               	rlf	(___xxtofl@arg+3)^(0+128),f
  7763  15FA  0BB2               	decfsz	??___xxtofl^(0+128),f
  7764  15FB  2DF5               	goto	u6265
  7765  15FC                     l4276:	
  7766  15FC  1BBA               	btfsc	(___xxtofl@arg+2)^(0+128),7
  7767  15FD  2DFF               	goto	u6271
  7768  15FE  2E00               	goto	u6270
  7769  15FF                     u6271:	
  7770  15FF  2E06               	goto	l938
  7771  1600                     u6270:	
  7772  1600                     l4278:	
  7773  1600  3002               	movlw	2
  7774  1601  0237               	subwf	___xxtofl@exp^(0+128),w
  7775  1602  1803               	skipnc
  7776  1603  2E05               	goto	u6281
  7777  1604  2E06               	goto	u6280
  7778  1605                     u6281:	
  7779  1605  2DF1               	goto	l4274
  7780  1606                     u6280:	
  7781  1606                     l938:	
  7782  1606  1837               	btfsc	___xxtofl@exp^(0+128),0
  7783  1607  2E09               	goto	u6291
  7784  1608  2E0A               	goto	u6290
  7785  1609                     u6291:	
  7786  1609  2E12               	goto	l939
  7787  160A                     u6290:	
  7788  160A                     l4280:	
  7789  160A  30FF               	movlw	255
  7790  160B  05B8               	andwf	___xxtofl@arg^(0+128),f
  7791  160C  30FF               	movlw	255
  7792  160D  05B9               	andwf	(___xxtofl@arg+1)^(0+128),f
  7793  160E  307F               	movlw	127
  7794  160F  05BA               	andwf	(___xxtofl@arg+2)^(0+128),f
  7795  1610  30FF               	movlw	255
  7796  1611  05BB               	andwf	(___xxtofl@arg+3)^(0+128),f
  7797  1612                     l939:	
  7798  1612  1003               	clrc
  7799  1613  0CB7               	rrf	___xxtofl@exp^(0+128),f
  7800  1614                     l4282:	
  7801  1614  0837               	movf	___xxtofl@exp^(0+128),w
  7802  1615  00B2               	movwf	??___xxtofl^(0+128)
  7803  1616  01B3               	clrf	(??___xxtofl^(0+128)+1)
  7804  1617  01B4               	clrf	(??___xxtofl^(0+128)+2)
  7805  1618  01B5               	clrf	(??___xxtofl^(0+128)+3)
  7806  1619  3018               	movlw	24
  7807  161A                     u6305:	
  7808  161A  1003               	clrc
  7809  161B  0DB2               	rlf	??___xxtofl^(0+128),f
  7810  161C  0DB3               	rlf	(??___xxtofl^(0+128)+1),f
  7811  161D  0DB4               	rlf	(??___xxtofl^(0+128)+2),f
  7812  161E  0DB5               	rlf	(??___xxtofl^(0+128)+3),f
  7813  161F                     u6300:	
  7814  161F  3EFF               	addlw	-1
  7815  1620  1D03               	skipz
  7816  1621  2E1A               	goto	u6305
  7817  1622  0832               	movf	??___xxtofl^(0+128),w
  7818  1623  04B8               	iorwf	___xxtofl@arg^(0+128),f
  7819  1624  0833               	movf	(??___xxtofl+1)^(0+128),w
  7820  1625  04B9               	iorwf	(___xxtofl@arg+1)^(0+128),f
  7821  1626  0834               	movf	(??___xxtofl+2)^(0+128),w
  7822  1627  04BA               	iorwf	(___xxtofl@arg+2)^(0+128),f
  7823  1628  0835               	movf	(??___xxtofl+3)^(0+128),w
  7824  1629  04BB               	iorwf	(___xxtofl@arg+3)^(0+128),f
  7825  162A                     l4284:	
  7826  162A  0836               	movf	___xxtofl@sign^(0+128),w
  7827  162B  1903               	btfsc	3,2
  7828  162C  2E2E               	goto	u6311
  7829  162D  2E2F               	goto	u6310
  7830  162E                     u6311:	
  7831  162E  2E34               	goto	l4290
  7832  162F                     u6310:	
  7833  162F                     l4286:	
  7834  162F  1FB1               	btfss	(___xxtofl@val+3)^(0+128),7
  7835  1630  2E32               	goto	u6321
  7836  1631  2E33               	goto	u6320
  7837  1632                     u6321:	
  7838  1632  2E34               	goto	l4290
  7839  1633                     u6320:	
  7840  1633                     l4288:	
  7841  1633  17BB               	bsf	(___xxtofl@arg^(0+128)+3),7
  7842  1634                     l4290:	
  7843  1634  083B               	movf	(___xxtofl@arg+3)^(0+128),w
  7844  1635  00B1               	movwf	(?___xxtofl+3)^(0+128)
  7845  1636  083A               	movf	(___xxtofl@arg+2)^(0+128),w
  7846  1637  00B0               	movwf	(?___xxtofl+2)^(0+128)
  7847  1638  0839               	movf	(___xxtofl@arg+1)^(0+128),w
  7848  1639  00AF               	movwf	(?___xxtofl+1)^(0+128)
  7849  163A  0838               	movf	___xxtofl@arg^(0+128),w
  7850  163B  00AE               	movwf	?___xxtofl^(0+128)
  7851  163C                     l927:	
  7852  163C  0008               	return
  7853  163D                     __end_of___xxtofl:	
  7854                           
  7855                           	psect	text35
  7856  12B5                     __ptext35:	
  7857 ;; *************** function ___fltol *****************
  7858 ;; Defined at:
  7859 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fltol.c"
  7860 ;; Parameters:    Size  Location     Type
  7861 ;;  f1              4   67[BANK1 ] unsigned char 
  7862 ;; Auto vars:     Size  Location     Type
  7863 ;;  exp1            1   77[BANK1 ] unsigned char 
  7864 ;;  sign1           1   76[BANK1 ] unsigned char 
  7865 ;; Return value:  Size  Location     Type
  7866 ;;                  4   67[BANK1 ] long 
  7867 ;; Registers used:
  7868 ;;		wreg, status,2, status,0
  7869 ;; Tracked objects:
  7870 ;;		On entry : 0/0
  7871 ;;		On exit  : 0/0
  7872 ;;		Unchanged: 0/0
  7873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7874 ;;      Params:         0       0       4       0       0
  7875 ;;      Locals:         0       0       2       0       0
  7876 ;;      Temps:          0       0       5       0       0
  7877 ;;      Totals:         0       0      11       0       0
  7878 ;;Total ram usage:       11 bytes
  7879 ;; Hardware stack levels used:    1
  7880 ;; Hardware stack levels required when called:    4
  7881 ;; This function calls:
  7882 ;;		Nothing
  7883 ;; This function is called by:
  7884 ;;		_PWM_Duty
  7885 ;;		_get_temperatura
  7886 ;; This function uses a non-reentrant model
  7887 ;;
  7888                           
  7889                           
  7890                           ;psect for function ___fltol
  7891  12B5                     ___fltol:	
  7892  12B5                     l3932:	
  7893                           ;incstack = 0
  7894                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7895                           
  7896  12B5  1003               	clrc
  7897  12B6  1683               	bsf	3,5	;RP0=1, select bank1
  7898  12B7  1303               	bcf	3,6	;RP1=0, select bank1
  7899  12B8  0D65               	rlf	(___fltol@f1+2)^(0+128),w
  7900  12B9  0D66               	rlf	(___fltol@f1+3)^(0+128),w
  7901  12BA  00E7               	movwf	??___fltol^(0+128)
  7902  12BB  0867               	movf	??___fltol^(0+128),w
  7903  12BC  00ED               	movwf	___fltol@exp1^(0+128)
  7904  12BD  086D               	movf	___fltol@exp1^(0+128),w
  7905  12BE  1D03               	btfss	3,2
  7906  12BF  2AC1               	goto	u5431
  7907  12C0  2AC2               	goto	u5430
  7908  12C1                     u5431:	
  7909  12C1  2ACB               	goto	l3938
  7910  12C2                     u5430:	
  7911  12C2                     l3934:	
  7912  12C2  3000               	movlw	0
  7913  12C3  00E6               	movwf	(?___fltol+3)^(0+128)
  7914  12C4  3000               	movlw	0
  7915  12C5  00E5               	movwf	(?___fltol+2)^(0+128)
  7916  12C6  3000               	movlw	0
  7917  12C7  00E4               	movwf	(?___fltol+1)^(0+128)
  7918  12C8  3000               	movlw	0
  7919  12C9  00E3               	movwf	?___fltol^(0+128)
  7920  12CA  2B30               	goto	l684
  7921  12CB                     l3938:	
  7922  12CB  0863               	movf	___fltol@f1^(0+128),w
  7923  12CC  00E7               	movwf	??___fltol^(0+128)
  7924  12CD  0864               	movf	(___fltol@f1+1)^(0+128),w
  7925  12CE  00E8               	movwf	(??___fltol^(0+128)+1)
  7926  12CF  0865               	movf	(___fltol@f1+2)^(0+128),w
  7927  12D0  00E9               	movwf	(??___fltol^(0+128)+2)
  7928  12D1  0866               	movf	(___fltol@f1+3)^(0+128),w
  7929  12D2  00EA               	movwf	(??___fltol^(0+128)+3)
  7930  12D3  301F               	movlw	31
  7931  12D4                     u5445:	
  7932  12D4  1003               	clrc
  7933  12D5  0CEA               	rrf	(??___fltol^(0+128)+3),f
  7934  12D6  0CE9               	rrf	(??___fltol^(0+128)+2),f
  7935  12D7  0CE8               	rrf	(??___fltol^(0+128)+1),f
  7936  12D8  0CE7               	rrf	??___fltol^(0+128),f
  7937  12D9                     u5440:	
  7938  12D9  3EFF               	addlw	-1
  7939  12DA  1D03               	skipz
  7940  12DB  2AD4               	goto	u5445
  7941  12DC  0867               	movf	??___fltol^(0+128),w
  7942  12DD  00EB               	movwf	(??___fltol+4)^(0+128)
  7943  12DE  086B               	movf	(??___fltol+4)^(0+128),w
  7944  12DF  00EC               	movwf	___fltol@sign1^(0+128)
  7945  12E0                     l3940:	
  7946  12E0  17E5               	bsf	(___fltol@f1^(0+128)+2),7
  7947  12E1                     l3942:	
  7948  12E1  30FF               	movlw	255
  7949  12E2  05E3               	andwf	___fltol@f1^(0+128),f
  7950  12E3  30FF               	movlw	255
  7951  12E4  05E4               	andwf	(___fltol@f1+1)^(0+128),f
  7952  12E5  30FF               	movlw	255
  7953  12E6  05E5               	andwf	(___fltol@f1+2)^(0+128),f
  7954  12E7  3000               	movlw	0
  7955  12E8  05E6               	andwf	(___fltol@f1+3)^(0+128),f
  7956  12E9                     l3944:	
  7957  12E9  3096               	movlw	150
  7958  12EA  02ED               	subwf	___fltol@exp1^(0+128),f
  7959  12EB                     l3946:	
  7960  12EB  1FED               	btfss	___fltol@exp1^(0+128),7
  7961  12EC  2AEE               	goto	u5451
  7962  12ED  2AEF               	goto	u5450
  7963  12EE                     u5451:	
  7964  12EE  2B09               	goto	l3956
  7965  12EF                     u5450:	
  7966  12EF                     l3948:	
  7967  12EF  086D               	movf	___fltol@exp1^(0+128),w
  7968  12F0  3A80               	xorlw	128
  7969  12F1  3E97               	addlw	151
  7970  12F2  1803               	skipnc
  7971  12F3  2AF5               	goto	u5461
  7972  12F4  2AF6               	goto	u5460
  7973  12F5                     u5461:	
  7974  12F5  2AF7               	goto	l3954
  7975  12F6                     u5460:	
  7976  12F6  2AC2               	goto	l3934
  7977  12F7                     l3954:	
  7978  12F7  3001               	movlw	1
  7979  12F8                     u5475:	
  7980  12F8  1003               	clrc
  7981  12F9  0CE6               	rrf	(___fltol@f1+3)^(0+128),f
  7982  12FA  0CE5               	rrf	(___fltol@f1+2)^(0+128),f
  7983  12FB  0CE4               	rrf	(___fltol@f1+1)^(0+128),f
  7984  12FC  0CE3               	rrf	___fltol@f1^(0+128),f
  7985  12FD  3EFF               	addlw	-1
  7986  12FE  1D03               	skipz
  7987  12FF  2AF8               	goto	u5475
  7988  1300  3001               	movlw	1
  7989  1301  00E7               	movwf	??___fltol^(0+128)
  7990  1302  0867               	movf	??___fltol^(0+128),w
  7991  1303  07ED               	addwf	___fltol@exp1^(0+128),f
  7992  1304  1D03               	btfss	3,2
  7993  1305  2B07               	goto	u5481
  7994  1306  2B08               	goto	u5480
  7995  1307                     u5481:	
  7996  1307  2AF7               	goto	l3954
  7997  1308                     u5480:	
  7998  1308  2B20               	goto	l3964
  7999  1309                     l3956:	
  8000  1309  3020               	movlw	32
  8001  130A  026D               	subwf	___fltol@exp1^(0+128),w
  8002  130B  1C03               	skipc
  8003  130C  2B0E               	goto	u5491
  8004  130D  2B0F               	goto	u5490
  8005  130E                     u5491:	
  8006  130E  2B1B               	goto	l691
  8007  130F                     u5490:	
  8008  130F  2AC2               	goto	l3934
  8009  1310                     l3962:	
  8010  1310  3001               	movlw	1
  8011  1311  00E7               	movwf	??___fltol^(0+128)
  8012  1312                     u5505:	
  8013  1312  1003               	clrc
  8014  1313  0DE3               	rlf	___fltol@f1^(0+128),f
  8015  1314  0DE4               	rlf	(___fltol@f1+1)^(0+128),f
  8016  1315  0DE5               	rlf	(___fltol@f1+2)^(0+128),f
  8017  1316  0DE6               	rlf	(___fltol@f1+3)^(0+128),f
  8018  1317  0BE7               	decfsz	??___fltol^(0+128),f
  8019  1318  2B12               	goto	u5505
  8020  1319  3001               	movlw	1
  8021  131A  02ED               	subwf	___fltol@exp1^(0+128),f
  8022  131B                     l691:	
  8023  131B  086D               	movf	___fltol@exp1^(0+128),w
  8024  131C  1D03               	btfss	3,2
  8025  131D  2B1F               	goto	u5511
  8026  131E  2B20               	goto	u5510
  8027  131F                     u5511:	
  8028  131F  2B10               	goto	l3962
  8029  1320                     u5510:	
  8030  1320                     l3964:	
  8031  1320  086C               	movf	___fltol@sign1^(0+128),w
  8032  1321  1903               	btfsc	3,2
  8033  1322  2B24               	goto	u5521
  8034  1323  2B25               	goto	u5520
  8035  1324                     u5521:	
  8036  1324  2B30               	goto	l694
  8037  1325                     u5520:	
  8038  1325                     l3966:	
  8039  1325  09E3               	comf	___fltol@f1^(0+128),f
  8040  1326  09E4               	comf	(___fltol@f1+1)^(0+128),f
  8041  1327  09E5               	comf	(___fltol@f1+2)^(0+128),f
  8042  1328  09E6               	comf	(___fltol@f1+3)^(0+128),f
  8043  1329  0AE3               	incf	___fltol@f1^(0+128),f
  8044  132A  1903               	skipnz
  8045  132B  0AE4               	incf	(___fltol@f1+1)^(0+128),f
  8046  132C  1903               	skipnz
  8047  132D  0AE5               	incf	(___fltol@f1+2)^(0+128),f
  8048  132E  1903               	skipnz
  8049  132F  0AE6               	incf	(___fltol@f1+3)^(0+128),f
  8050  1330                     l694:	
  8051  1330                     l684:	
  8052  1330  0008               	return
  8053  1331                     __end_of___fltol:	
  8054                           
  8055                           	psect	text36
  8056  0051                     __ptext36:	
  8057 ;; *************** function ___flmul *****************
  8058 ;; Defined at:
  8059 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcmul.c"
  8060 ;; Parameters:    Size  Location     Type
  8061 ;;  b               4   54[BANK1 ] long 
  8062 ;;  a               4   58[BANK1 ] long 
  8063 ;; Auto vars:     Size  Location     Type
  8064 ;;  prod            4    7[BANK3 ] struct .
  8065 ;;  grs             4    2[BANK3 ] unsigned long 
  8066 ;;  temp            2   11[BANK3 ] struct .
  8067 ;;  bexp            1    6[BANK3 ] unsigned char 
  8068 ;;  aexp            1    1[BANK3 ] unsigned char 
  8069 ;;  sign            1    0[BANK3 ] unsigned char 
  8070 ;; Return value:  Size  Location     Type
  8071 ;;                  4   54[BANK1 ] unsigned char 
  8072 ;; Registers used:
  8073 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8074 ;; Tracked objects:
  8075 ;;		On entry : 0/0
  8076 ;;		On exit  : 0/0
  8077 ;;		Unchanged: 0/0
  8078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8079 ;;      Params:         0       0       8       0       0
  8080 ;;      Locals:         0       0       0      13       0
  8081 ;;      Temps:          0       0       5       0       0
  8082 ;;      Totals:         0       0      13      13       0
  8083 ;;Total ram usage:       26 bytes
  8084 ;; Hardware stack levels used:    1
  8085 ;; Hardware stack levels required when called:    5
  8086 ;; This function calls:
  8087 ;;		__Umul8_16
  8088 ;; This function is called by:
  8089 ;;		_PWM_Duty
  8090 ;;		_get_temperatura
  8091 ;; This function uses a non-reentrant model
  8092 ;;
  8093                           
  8094                           
  8095                           ;psect for function ___flmul
  8096  0051                     ___flmul:	
  8097  0051                     l4110:	
  8098                           ;incstack = 0
  8099                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8100                           
  8101  0051  1683               	bsf	3,5	;RP0=1, select bank1
  8102  0052  1303               	bcf	3,6	;RP1=0, select bank1
  8103  0053  0859               	movf	(___flmul@b^(0+128)+3),w
  8104  0054  3980               	andlw	128
  8105  0055  00DE               	movwf	??___flmul^(0+128)
  8106  0056  085E               	movf	??___flmul^(0+128),w
  8107  0057  1683               	bsf	3,5	;RP0=1, select bank3
  8108  0058  1703               	bsf	3,6	;RP1=1, select bank3
  8109  0059  0090               	movwf	___flmul@sign^(0+384)
  8110  005A                     l4112:	
  8111  005A  1683               	bsf	3,5	;RP0=1, select bank1
  8112  005B  1303               	bcf	3,6	;RP1=0, select bank1
  8113  005C  0859               	movf	(___flmul@b^(0+128)+3),w
  8114  005D  00DE               	movwf	??___flmul^(0+128)
  8115  005E  075E               	addwf	??___flmul^(0+128),w
  8116  005F  00DF               	movwf	(??___flmul+1)^(0+128)
  8117  0060  085F               	movf	(??___flmul+1)^(0+128),w
  8118  0061  1683               	bsf	3,5	;RP0=1, select bank3
  8119  0062  1703               	bsf	3,6	;RP1=1, select bank3
  8120  0063  0096               	movwf	___flmul@bexp^(0+384)
  8121  0064                     l4114:	
  8122  0064  1683               	bsf	3,5	;RP0=1, select bank1
  8123  0065  1303               	bcf	3,6	;RP1=0, select bank1
  8124  0066  1FD8               	btfss	(___flmul@b^(0+128)+2),7
  8125  0067  2869               	goto	u5821
  8126  0068  286A               	goto	u5820
  8127  0069                     u5821:	
  8128  0069  286D               	goto	l4118
  8129  006A                     u5820:	
  8130  006A                     l4116:	
  8131  006A  1683               	bsf	3,5	;RP0=1, select bank3
  8132  006B  1703               	bsf	3,6	;RP1=1, select bank3
  8133  006C  1416               	bsf	___flmul@bexp^(0+384),0
  8134  006D                     l4118:	
  8135  006D  1683               	bsf	3,5	;RP0=1, select bank3
  8136  006E  1703               	bsf	3,6	;RP1=1, select bank3
  8137  006F  0816               	movf	___flmul@bexp^(0+384),w
  8138  0070  1903               	btfsc	3,2
  8139  0071  2873               	goto	u5831
  8140  0072  2874               	goto	u5830
  8141  0073                     u5831:	
  8142  0073  2886               	goto	l4126
  8143  0074                     u5830:	
  8144  0074                     l4120:	
  8145  0074  0A16               	incf	___flmul@bexp^(0+384),w
  8146  0075  1D03               	btfss	3,2
  8147  0076  2878               	goto	u5841
  8148  0077  2879               	goto	u5840
  8149  0078                     u5841:	
  8150  0078  2883               	goto	l4124
  8151  0079                     u5840:	
  8152  0079                     l4122:	
  8153  0079  3000               	movlw	0
  8154  007A  1683               	bsf	3,5	;RP0=1, select bank1
  8155  007B  1303               	bcf	3,6	;RP1=0, select bank1
  8156  007C  00D9               	movwf	(___flmul@b+3)^(0+128)
  8157  007D  3000               	movlw	0
  8158  007E  00D8               	movwf	(___flmul@b+2)^(0+128)
  8159  007F  3000               	movlw	0
  8160  0080  00D7               	movwf	(___flmul@b+1)^(0+128)
  8161  0081  3000               	movlw	0
  8162  0082  00D6               	movwf	___flmul@b^(0+128)
  8163  0083                     l4124:	
  8164  0083  1303               	bcf	3,6	;RP1=0, select bank1
  8165  0084  17D8               	bsf	(___flmul@b^(0+128)+2),7
  8166  0085  2890               	goto	l4128
  8167  0086                     l4126:	
  8168  0086  3000               	movlw	0
  8169  0087  1683               	bsf	3,5	;RP0=1, select bank1
  8170  0088  1303               	bcf	3,6	;RP1=0, select bank1
  8171  0089  00D9               	movwf	(___flmul@b+3)^(0+128)
  8172  008A  3000               	movlw	0
  8173  008B  00D8               	movwf	(___flmul@b+2)^(0+128)
  8174  008C  3000               	movlw	0
  8175  008D  00D7               	movwf	(___flmul@b+1)^(0+128)
  8176  008E  3000               	movlw	0
  8177  008F  00D6               	movwf	___flmul@b^(0+128)
  8178  0090                     l4128:	
  8179  0090  085D               	movf	(___flmul@a^(0+128)+3),w
  8180  0091  3980               	andlw	128
  8181  0092  00DE               	movwf	??___flmul^(0+128)
  8182  0093  085E               	movf	??___flmul^(0+128),w
  8183  0094  1683               	bsf	3,5	;RP0=1, select bank3
  8184  0095  1703               	bsf	3,6	;RP1=1, select bank3
  8185  0096  0690               	xorwf	___flmul@sign^(0+384),f
  8186  0097                     l4130:	
  8187  0097  1683               	bsf	3,5	;RP0=1, select bank1
  8188  0098  1303               	bcf	3,6	;RP1=0, select bank1
  8189  0099  085D               	movf	(___flmul@a^(0+128)+3),w
  8190  009A  00DE               	movwf	??___flmul^(0+128)
  8191  009B  075E               	addwf	??___flmul^(0+128),w
  8192  009C  00DF               	movwf	(??___flmul+1)^(0+128)
  8193  009D  085F               	movf	(??___flmul+1)^(0+128),w
  8194  009E  1683               	bsf	3,5	;RP0=1, select bank3
  8195  009F  1703               	bsf	3,6	;RP1=1, select bank3
  8196  00A0  0091               	movwf	___flmul@aexp^(0+384)
  8197  00A1                     l4132:	
  8198  00A1  1683               	bsf	3,5	;RP0=1, select bank1
  8199  00A2  1303               	bcf	3,6	;RP1=0, select bank1
  8200  00A3  1FDC               	btfss	(___flmul@a^(0+128)+2),7
  8201  00A4  28A6               	goto	u5851
  8202  00A5  28A7               	goto	u5850
  8203  00A6                     u5851:	
  8204  00A6  28AA               	goto	l4136
  8205  00A7                     u5850:	
  8206  00A7                     l4134:	
  8207  00A7  1683               	bsf	3,5	;RP0=1, select bank3
  8208  00A8  1703               	bsf	3,6	;RP1=1, select bank3
  8209  00A9  1411               	bsf	___flmul@aexp^(0+384),0
  8210  00AA                     l4136:	
  8211  00AA  1683               	bsf	3,5	;RP0=1, select bank3
  8212  00AB  1703               	bsf	3,6	;RP1=1, select bank3
  8213  00AC  0811               	movf	___flmul@aexp^(0+384),w
  8214  00AD  1903               	btfsc	3,2
  8215  00AE  28B0               	goto	u5861
  8216  00AF  28B1               	goto	u5860
  8217  00B0                     u5861:	
  8218  00B0  28C3               	goto	l4144
  8219  00B1                     u5860:	
  8220  00B1                     l4138:	
  8221  00B1  0A11               	incf	___flmul@aexp^(0+384),w
  8222  00B2  1D03               	btfss	3,2
  8223  00B3  28B5               	goto	u5871
  8224  00B4  28B6               	goto	u5870
  8225  00B5                     u5871:	
  8226  00B5  28C0               	goto	l4142
  8227  00B6                     u5870:	
  8228  00B6                     l4140:	
  8229  00B6  3000               	movlw	0
  8230  00B7  1683               	bsf	3,5	;RP0=1, select bank1
  8231  00B8  1303               	bcf	3,6	;RP1=0, select bank1
  8232  00B9  00DD               	movwf	(___flmul@a+3)^(0+128)
  8233  00BA  3000               	movlw	0
  8234  00BB  00DC               	movwf	(___flmul@a+2)^(0+128)
  8235  00BC  3000               	movlw	0
  8236  00BD  00DB               	movwf	(___flmul@a+1)^(0+128)
  8237  00BE  3000               	movlw	0
  8238  00BF  00DA               	movwf	___flmul@a^(0+128)
  8239  00C0                     l4142:	
  8240  00C0  1303               	bcf	3,6	;RP1=0, select bank1
  8241  00C1  17DC               	bsf	(___flmul@a^(0+128)+2),7
  8242  00C2  28CD               	goto	l4146
  8243  00C3                     l4144:	
  8244  00C3  3000               	movlw	0
  8245  00C4  1683               	bsf	3,5	;RP0=1, select bank1
  8246  00C5  1303               	bcf	3,6	;RP1=0, select bank1
  8247  00C6  00DD               	movwf	(___flmul@a+3)^(0+128)
  8248  00C7  3000               	movlw	0
  8249  00C8  00DC               	movwf	(___flmul@a+2)^(0+128)
  8250  00C9  3000               	movlw	0
  8251  00CA  00DB               	movwf	(___flmul@a+1)^(0+128)
  8252  00CB  3000               	movlw	0
  8253  00CC  00DA               	movwf	___flmul@a^(0+128)
  8254  00CD                     l4146:	
  8255  00CD  1683               	bsf	3,5	;RP0=1, select bank3
  8256  00CE  1703               	bsf	3,6	;RP1=1, select bank3
  8257  00CF  0811               	movf	___flmul@aexp^(0+384),w
  8258  00D0  1903               	btfsc	3,2
  8259  00D1  28D3               	goto	u5881
  8260  00D2  28D4               	goto	u5880
  8261  00D3                     u5881:	
  8262  00D3  28D9               	goto	l4150
  8263  00D4                     u5880:	
  8264  00D4                     l4148:	
  8265  00D4  0816               	movf	___flmul@bexp^(0+384),w
  8266  00D5  1D03               	btfss	3,2
  8267  00D6  28D8               	goto	u5891
  8268  00D7  28D9               	goto	u5890
  8269  00D8                     u5891:	
  8270  00D8  28E4               	goto	l4154
  8271  00D9                     u5890:	
  8272  00D9                     l4150:	
  8273  00D9  3000               	movlw	0
  8274  00DA  1683               	bsf	3,5	;RP0=1, select bank1
  8275  00DB  1303               	bcf	3,6	;RP1=0, select bank1
  8276  00DC  00D9               	movwf	(?___flmul+3)^(0+128)
  8277  00DD  3000               	movlw	0
  8278  00DE  00D8               	movwf	(?___flmul+2)^(0+128)
  8279  00DF  3000               	movlw	0
  8280  00E0  00D7               	movwf	(?___flmul+1)^(0+128)
  8281  00E1  3000               	movlw	0
  8282  00E2  00D6               	movwf	?___flmul^(0+128)
  8283  00E3  2DD3               	goto	l887
  8284  00E4                     l4154:	
  8285  00E4  1683               	bsf	3,5	;RP0=1, select bank1
  8286  00E5  1303               	bcf	3,6	;RP1=0, select bank1
  8287  00E6  0856               	movf	___flmul@b^(0+128),w
  8288  00E7  00DE               	movwf	??___flmul^(0+128)
  8289  00E8  085E               	movf	??___flmul^(0+128),w
  8290  00E9  1283               	bcf	3,5	;RP0=0, select bank0
  8291  00EA  1303               	bcf	3,6	;RP1=0, select bank0
  8292  00EB  00BB               	movwf	__Umul8_16@multiplicand
  8293  00EC  1683               	bsf	3,5	;RP0=1, select bank1
  8294  00ED  1303               	bcf	3,6	;RP1=0, select bank1
  8295  00EE  085C               	movf	(___flmul@a^(0+128)+2),w
  8296  00EF  160A  158A  25C4  120A  118A  	fcall	__Umul8_16
  8297  00F4  1283               	bcf	3,5	;RP0=0, select bank0
  8298  00F5  1303               	bcf	3,6	;RP1=0, select bank0
  8299  00F6  083C               	movf	?__Umul8_16+1,w
  8300  00F7  1683               	bsf	3,5	;RP0=1, select bank3
  8301  00F8  1703               	bsf	3,6	;RP1=1, select bank3
  8302  00F9  009C               	movwf	(___flmul@temp+1)^(0+384)
  8303  00FA  1283               	bcf	3,5	;RP0=0, select bank0
  8304  00FB  1303               	bcf	3,6	;RP1=0, select bank0
  8305  00FC  083B               	movf	?__Umul8_16,w
  8306  00FD  1683               	bsf	3,5	;RP0=1, select bank3
  8307  00FE  1703               	bsf	3,6	;RP1=1, select bank3
  8308  00FF  009B               	movwf	___flmul@temp^(0+384)
  8309  0100                     l4156:	
  8310  0100  081B               	movf	___flmul@temp^(0+384),w
  8311  0101  1683               	bsf	3,5	;RP0=1, select bank1
  8312  0102  1303               	bcf	3,6	;RP1=0, select bank1
  8313  0103  00DE               	movwf	??___flmul^(0+128)
  8314  0104  01DF               	clrf	(??___flmul^(0+128)+1)
  8315  0105  01E0               	clrf	(??___flmul^(0+128)+2)
  8316  0106  01E1               	clrf	(??___flmul^(0+128)+3)
  8317  0107  0861               	movf	(??___flmul+3)^(0+128),w
  8318  0108  1683               	bsf	3,5	;RP0=1, select bank3
  8319  0109  1703               	bsf	3,6	;RP1=1, select bank3
  8320  010A  0095               	movwf	(___flmul@grs+3)^(0+384)
  8321  010B  1683               	bsf	3,5	;RP0=1, select bank1
  8322  010C  1303               	bcf	3,6	;RP1=0, select bank1
  8323  010D  0860               	movf	(??___flmul+2)^(0+128),w
  8324  010E  1683               	bsf	3,5	;RP0=1, select bank3
  8325  010F  1703               	bsf	3,6	;RP1=1, select bank3
  8326  0110  0094               	movwf	(___flmul@grs+2)^(0+384)
  8327  0111  1683               	bsf	3,5	;RP0=1, select bank1
  8328  0112  1303               	bcf	3,6	;RP1=0, select bank1
  8329  0113  085F               	movf	(??___flmul+1)^(0+128),w
  8330  0114  1683               	bsf	3,5	;RP0=1, select bank3
  8331  0115  1703               	bsf	3,6	;RP1=1, select bank3
  8332  0116  0093               	movwf	(___flmul@grs+1)^(0+384)
  8333  0117  1683               	bsf	3,5	;RP0=1, select bank1
  8334  0118  1303               	bcf	3,6	;RP1=0, select bank1
  8335  0119  085E               	movf	??___flmul^(0+128),w
  8336  011A  1683               	bsf	3,5	;RP0=1, select bank3
  8337  011B  1703               	bsf	3,6	;RP1=1, select bank3
  8338  011C  0092               	movwf	___flmul@grs^(0+384)
  8339  011D                     l4158:	
  8340  011D  081C               	movf	(___flmul@temp^(0+384)+1),w
  8341  011E  1683               	bsf	3,5	;RP0=1, select bank1
  8342  011F  1303               	bcf	3,6	;RP1=0, select bank1
  8343  0120  00DE               	movwf	??___flmul^(0+128)
  8344  0121  01DF               	clrf	(??___flmul^(0+128)+1)
  8345  0122  01E0               	clrf	(??___flmul^(0+128)+2)
  8346  0123  01E1               	clrf	(??___flmul^(0+128)+3)
  8347  0124  0861               	movf	(??___flmul+3)^(0+128),w
  8348  0125  1683               	bsf	3,5	;RP0=1, select bank3
  8349  0126  1703               	bsf	3,6	;RP1=1, select bank3
  8350  0127  009A               	movwf	(___flmul@prod+3)^(0+384)
  8351  0128  1683               	bsf	3,5	;RP0=1, select bank1
  8352  0129  1303               	bcf	3,6	;RP1=0, select bank1
  8353  012A  0860               	movf	(??___flmul+2)^(0+128),w
  8354  012B  1683               	bsf	3,5	;RP0=1, select bank3
  8355  012C  1703               	bsf	3,6	;RP1=1, select bank3
  8356  012D  0099               	movwf	(___flmul@prod+2)^(0+384)
  8357  012E  1683               	bsf	3,5	;RP0=1, select bank1
  8358  012F  1303               	bcf	3,6	;RP1=0, select bank1
  8359  0130  085F               	movf	(??___flmul+1)^(0+128),w
  8360  0131  1683               	bsf	3,5	;RP0=1, select bank3
  8361  0132  1703               	bsf	3,6	;RP1=1, select bank3
  8362  0133  0098               	movwf	(___flmul@prod+1)^(0+384)
  8363  0134  1683               	bsf	3,5	;RP0=1, select bank1
  8364  0135  1303               	bcf	3,6	;RP1=0, select bank1
  8365  0136  085E               	movf	??___flmul^(0+128),w
  8366  0137  1683               	bsf	3,5	;RP0=1, select bank3
  8367  0138  1703               	bsf	3,6	;RP1=1, select bank3
  8368  0139  0097               	movwf	___flmul@prod^(0+384)
  8369  013A  1683               	bsf	3,5	;RP0=1, select bank1
  8370  013B  1303               	bcf	3,6	;RP1=0, select bank1
  8371  013C  0857               	movf	(___flmul@b^(0+128)+1),w
  8372  013D  00DE               	movwf	??___flmul^(0+128)
  8373  013E  085E               	movf	??___flmul^(0+128),w
  8374  013F  1283               	bcf	3,5	;RP0=0, select bank0
  8375  0140  1303               	bcf	3,6	;RP1=0, select bank0
  8376  0141  00BB               	movwf	__Umul8_16@multiplicand
  8377  0142  1683               	bsf	3,5	;RP0=1, select bank1
  8378  0143  1303               	bcf	3,6	;RP1=0, select bank1
  8379  0144  085B               	movf	(___flmul@a^(0+128)+1),w
  8380  0145  160A  158A  25C4  120A  118A  	fcall	__Umul8_16
  8381  014A  1283               	bcf	3,5	;RP0=0, select bank0
  8382  014B  1303               	bcf	3,6	;RP1=0, select bank0
  8383  014C  083C               	movf	?__Umul8_16+1,w
  8384  014D  1683               	bsf	3,5	;RP0=1, select bank3
  8385  014E  1703               	bsf	3,6	;RP1=1, select bank3
  8386  014F  009C               	movwf	(___flmul@temp+1)^(0+384)
  8387  0150  1283               	bcf	3,5	;RP0=0, select bank0
  8388  0151  1303               	bcf	3,6	;RP1=0, select bank0
  8389  0152  083B               	movf	?__Umul8_16,w
  8390  0153  1683               	bsf	3,5	;RP0=1, select bank3
  8391  0154  1703               	bsf	3,6	;RP1=1, select bank3
  8392  0155  009B               	movwf	___flmul@temp^(0+384)
  8393  0156                     l4160:	
  8394  0156  081B               	movf	___flmul@temp^(0+384),w
  8395  0157  1683               	bsf	3,5	;RP0=1, select bank1
  8396  0158  1303               	bcf	3,6	;RP1=0, select bank1
  8397  0159  00DE               	movwf	??___flmul^(0+128)
  8398  015A  01DF               	clrf	(??___flmul^(0+128)+1)
  8399  015B  01E0               	clrf	(??___flmul^(0+128)+2)
  8400  015C  01E1               	clrf	(??___flmul^(0+128)+3)
  8401  015D  085E               	movf	??___flmul^(0+128),w
  8402  015E  1683               	bsf	3,5	;RP0=1, select bank3
  8403  015F  1703               	bsf	3,6	;RP1=1, select bank3
  8404  0160  0792               	addwf	___flmul@grs^(0+384),f
  8405  0161  1683               	bsf	3,5	;RP0=1, select bank1
  8406  0162  1303               	bcf	3,6	;RP1=0, select bank1
  8407  0163  085F               	movf	(??___flmul+1)^(0+128),w
  8408  0164  1103               	clrz
  8409  0165  1803               	skipnc
  8410  0166  3E01               	addlw	1
  8411  0167  1903               	skipnz
  8412  0168  296C               	goto	u5901
  8413  0169  1683               	bsf	3,5	;RP0=1, select bank3
  8414  016A  1703               	bsf	3,6	;RP1=1, select bank3
  8415  016B  0793               	addwf	(___flmul@grs+1)^(0+384),f
  8416  016C                     u5901:	
  8417  016C  1683               	bsf	3,5	;RP0=1, select bank1
  8418  016D  1303               	bcf	3,6	;RP1=0, select bank1
  8419  016E  0860               	movf	(??___flmul+2)^(0+128),w
  8420  016F  1103               	clrz
  8421  0170  1803               	skipnc
  8422  0171  3E01               	addlw	1
  8423  0172  1903               	skipnz
  8424  0173  2977               	goto	u5902
  8425  0174  1683               	bsf	3,5	;RP0=1, select bank3
  8426  0175  1703               	bsf	3,6	;RP1=1, select bank3
  8427  0176  0794               	addwf	(___flmul@grs+2)^(0+384),f
  8428  0177                     u5902:	
  8429  0177  1683               	bsf	3,5	;RP0=1, select bank1
  8430  0178  1303               	bcf	3,6	;RP1=0, select bank1
  8431  0179  0861               	movf	(??___flmul+3)^(0+128),w
  8432  017A  1103               	clrz
  8433  017B  1803               	skipnc
  8434  017C  3E01               	addlw	1
  8435  017D  1903               	skipnz
  8436  017E  2982               	goto	u5903
  8437  017F  1683               	bsf	3,5	;RP0=1, select bank3
  8438  0180  1703               	bsf	3,6	;RP1=1, select bank3
  8439  0181  0795               	addwf	(___flmul@grs+3)^(0+384),f
  8440  0182                     u5903:	
  8441  0182  1683               	bsf	3,5	;RP0=1, select bank1
  8442  0183  1303               	bcf	3,6	;RP1=0, select bank1
  8443  0184  1683               	bsf	3,5	;RP0=1, select bank3
  8444  0185  1703               	bsf	3,6	;RP1=1, select bank3
  8445  0186                     l4162:	
  8446  0186  081C               	movf	(___flmul@temp^(0+384)+1),w
  8447  0187  1683               	bsf	3,5	;RP0=1, select bank1
  8448  0188  1303               	bcf	3,6	;RP1=0, select bank1
  8449  0189  00DE               	movwf	??___flmul^(0+128)
  8450  018A  01DF               	clrf	(??___flmul^(0+128)+1)
  8451  018B  01E0               	clrf	(??___flmul^(0+128)+2)
  8452  018C  01E1               	clrf	(??___flmul^(0+128)+3)
  8453  018D  085E               	movf	??___flmul^(0+128),w
  8454  018E  1683               	bsf	3,5	;RP0=1, select bank3
  8455  018F  1703               	bsf	3,6	;RP1=1, select bank3
  8456  0190  0797               	addwf	___flmul@prod^(0+384),f
  8457  0191  1683               	bsf	3,5	;RP0=1, select bank1
  8458  0192  1303               	bcf	3,6	;RP1=0, select bank1
  8459  0193  085F               	movf	(??___flmul+1)^(0+128),w
  8460  0194  1103               	clrz
  8461  0195  1803               	skipnc
  8462  0196  3E01               	addlw	1
  8463  0197  1903               	skipnz
  8464  0198  299C               	goto	u5911
  8465  0199  1683               	bsf	3,5	;RP0=1, select bank3
  8466  019A  1703               	bsf	3,6	;RP1=1, select bank3
  8467  019B  0798               	addwf	(___flmul@prod+1)^(0+384),f
  8468  019C                     u5911:	
  8469  019C  1683               	bsf	3,5	;RP0=1, select bank1
  8470  019D  1303               	bcf	3,6	;RP1=0, select bank1
  8471  019E  0860               	movf	(??___flmul+2)^(0+128),w
  8472  019F  1103               	clrz
  8473  01A0  1803               	skipnc
  8474  01A1  3E01               	addlw	1
  8475  01A2  1903               	skipnz
  8476  01A3  29A7               	goto	u5912
  8477  01A4  1683               	bsf	3,5	;RP0=1, select bank3
  8478  01A5  1703               	bsf	3,6	;RP1=1, select bank3
  8479  01A6  0799               	addwf	(___flmul@prod+2)^(0+384),f
  8480  01A7                     u5912:	
  8481  01A7  1683               	bsf	3,5	;RP0=1, select bank1
  8482  01A8  1303               	bcf	3,6	;RP1=0, select bank1
  8483  01A9  0861               	movf	(??___flmul+3)^(0+128),w
  8484  01AA  1103               	clrz
  8485  01AB  1803               	skipnc
  8486  01AC  3E01               	addlw	1
  8487  01AD  1903               	skipnz
  8488  01AE  29B2               	goto	u5913
  8489  01AF  1683               	bsf	3,5	;RP0=1, select bank3
  8490  01B0  1703               	bsf	3,6	;RP1=1, select bank3
  8491  01B1  079A               	addwf	(___flmul@prod+3)^(0+384),f
  8492  01B2                     u5913:	
  8493  01B2  1683               	bsf	3,5	;RP0=1, select bank1
  8494  01B3  1303               	bcf	3,6	;RP1=0, select bank1
  8495  01B4  1683               	bsf	3,5	;RP0=1, select bank3
  8496  01B5  1703               	bsf	3,6	;RP1=1, select bank3
  8497  01B6  1683               	bsf	3,5	;RP0=1, select bank1
  8498  01B7  1303               	bcf	3,6	;RP1=0, select bank1
  8499  01B8  0858               	movf	(___flmul@b^(0+128)+2),w
  8500  01B9  00DE               	movwf	??___flmul^(0+128)
  8501  01BA  085E               	movf	??___flmul^(0+128),w
  8502  01BB  1283               	bcf	3,5	;RP0=0, select bank0
  8503  01BC  1303               	bcf	3,6	;RP1=0, select bank0
  8504  01BD  00BB               	movwf	__Umul8_16@multiplicand
  8505  01BE  1683               	bsf	3,5	;RP0=1, select bank1
  8506  01BF  1303               	bcf	3,6	;RP1=0, select bank1
  8507  01C0  085A               	movf	___flmul@a^(0+128),w
  8508  01C1  160A  158A  25C4  120A  118A  	fcall	__Umul8_16
  8509  01C6  1283               	bcf	3,5	;RP0=0, select bank0
  8510  01C7  1303               	bcf	3,6	;RP1=0, select bank0
  8511  01C8  083C               	movf	?__Umul8_16+1,w
  8512  01C9  1683               	bsf	3,5	;RP0=1, select bank3
  8513  01CA  1703               	bsf	3,6	;RP1=1, select bank3
  8514  01CB  009C               	movwf	(___flmul@temp+1)^(0+384)
  8515  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  8516  01CD  1303               	bcf	3,6	;RP1=0, select bank0
  8517  01CE  083B               	movf	?__Umul8_16,w
  8518  01CF  1683               	bsf	3,5	;RP0=1, select bank3
  8519  01D0  1703               	bsf	3,6	;RP1=1, select bank3
  8520  01D1  009B               	movwf	___flmul@temp^(0+384)
  8521  01D2                     l4164:	
  8522  01D2  081B               	movf	___flmul@temp^(0+384),w
  8523  01D3  1683               	bsf	3,5	;RP0=1, select bank1
  8524  01D4  1303               	bcf	3,6	;RP1=0, select bank1
  8525  01D5  00DE               	movwf	??___flmul^(0+128)
  8526  01D6  01DF               	clrf	(??___flmul^(0+128)+1)
  8527  01D7  01E0               	clrf	(??___flmul^(0+128)+2)
  8528  01D8  01E1               	clrf	(??___flmul^(0+128)+3)
  8529  01D9  085E               	movf	??___flmul^(0+128),w
  8530  01DA  1683               	bsf	3,5	;RP0=1, select bank3
  8531  01DB  1703               	bsf	3,6	;RP1=1, select bank3
  8532  01DC  0792               	addwf	___flmul@grs^(0+384),f
  8533  01DD  1683               	bsf	3,5	;RP0=1, select bank1
  8534  01DE  1303               	bcf	3,6	;RP1=0, select bank1
  8535  01DF  085F               	movf	(??___flmul+1)^(0+128),w
  8536  01E0  1103               	clrz
  8537  01E1  1803               	skipnc
  8538  01E2  3E01               	addlw	1
  8539  01E3  1903               	skipnz
  8540  01E4  29E8               	goto	u5921
  8541  01E5  1683               	bsf	3,5	;RP0=1, select bank3
  8542  01E6  1703               	bsf	3,6	;RP1=1, select bank3
  8543  01E7  0793               	addwf	(___flmul@grs+1)^(0+384),f
  8544  01E8                     u5921:	
  8545  01E8  1683               	bsf	3,5	;RP0=1, select bank1
  8546  01E9  1303               	bcf	3,6	;RP1=0, select bank1
  8547  01EA  0860               	movf	(??___flmul+2)^(0+128),w
  8548  01EB  1103               	clrz
  8549  01EC  1803               	skipnc
  8550  01ED  3E01               	addlw	1
  8551  01EE  1903               	skipnz
  8552  01EF  29F3               	goto	u5922
  8553  01F0  1683               	bsf	3,5	;RP0=1, select bank3
  8554  01F1  1703               	bsf	3,6	;RP1=1, select bank3
  8555  01F2  0794               	addwf	(___flmul@grs+2)^(0+384),f
  8556  01F3                     u5922:	
  8557  01F3  1683               	bsf	3,5	;RP0=1, select bank1
  8558  01F4  1303               	bcf	3,6	;RP1=0, select bank1
  8559  01F5  0861               	movf	(??___flmul+3)^(0+128),w
  8560  01F6  1103               	clrz
  8561  01F7  1803               	skipnc
  8562  01F8  3E01               	addlw	1
  8563  01F9  1903               	skipnz
  8564  01FA  29FE               	goto	u5923
  8565  01FB  1683               	bsf	3,5	;RP0=1, select bank3
  8566  01FC  1703               	bsf	3,6	;RP1=1, select bank3
  8567  01FD  0795               	addwf	(___flmul@grs+3)^(0+384),f
  8568  01FE                     u5923:	
  8569  01FE  1683               	bsf	3,5	;RP0=1, select bank1
  8570  01FF  1303               	bcf	3,6	;RP1=0, select bank1
  8571  0200  1683               	bsf	3,5	;RP0=1, select bank3
  8572  0201  1703               	bsf	3,6	;RP1=1, select bank3
  8573  0202                     l4166:	
  8574  0202  081C               	movf	(___flmul@temp^(0+384)+1),w
  8575  0203  1683               	bsf	3,5	;RP0=1, select bank1
  8576  0204  1303               	bcf	3,6	;RP1=0, select bank1
  8577  0205  00DE               	movwf	??___flmul^(0+128)
  8578  0206  01DF               	clrf	(??___flmul^(0+128)+1)
  8579  0207  01E0               	clrf	(??___flmul^(0+128)+2)
  8580  0208  01E1               	clrf	(??___flmul^(0+128)+3)
  8581  0209  085E               	movf	??___flmul^(0+128),w
  8582  020A  1683               	bsf	3,5	;RP0=1, select bank3
  8583  020B  1703               	bsf	3,6	;RP1=1, select bank3
  8584  020C  0797               	addwf	___flmul@prod^(0+384),f
  8585  020D  1683               	bsf	3,5	;RP0=1, select bank1
  8586  020E  1303               	bcf	3,6	;RP1=0, select bank1
  8587  020F  085F               	movf	(??___flmul+1)^(0+128),w
  8588  0210  1103               	clrz
  8589  0211  1803               	skipnc
  8590  0212  3E01               	addlw	1
  8591  0213  1903               	skipnz
  8592  0214  2A18               	goto	u5931
  8593  0215  1683               	bsf	3,5	;RP0=1, select bank3
  8594  0216  1703               	bsf	3,6	;RP1=1, select bank3
  8595  0217  0798               	addwf	(___flmul@prod+1)^(0+384),f
  8596  0218                     u5931:	
  8597  0218  1683               	bsf	3,5	;RP0=1, select bank1
  8598  0219  1303               	bcf	3,6	;RP1=0, select bank1
  8599  021A  0860               	movf	(??___flmul+2)^(0+128),w
  8600  021B  1103               	clrz
  8601  021C  1803               	skipnc
  8602  021D  3E01               	addlw	1
  8603  021E  1903               	skipnz
  8604  021F  2A23               	goto	u5932
  8605  0220  1683               	bsf	3,5	;RP0=1, select bank3
  8606  0221  1703               	bsf	3,6	;RP1=1, select bank3
  8607  0222  0799               	addwf	(___flmul@prod+2)^(0+384),f
  8608  0223                     u5932:	
  8609  0223  1683               	bsf	3,5	;RP0=1, select bank1
  8610  0224  1303               	bcf	3,6	;RP1=0, select bank1
  8611  0225  0861               	movf	(??___flmul+3)^(0+128),w
  8612  0226  1103               	clrz
  8613  0227  1803               	skipnc
  8614  0228  3E01               	addlw	1
  8615  0229  1903               	skipnz
  8616  022A  2A2E               	goto	u5933
  8617  022B  1683               	bsf	3,5	;RP0=1, select bank3
  8618  022C  1703               	bsf	3,6	;RP1=1, select bank3
  8619  022D  079A               	addwf	(___flmul@prod+3)^(0+384),f
  8620  022E                     u5933:	
  8621  022E  1683               	bsf	3,5	;RP0=1, select bank1
  8622  022F  1303               	bcf	3,6	;RP1=0, select bank1
  8623  0230  1683               	bsf	3,5	;RP0=1, select bank3
  8624  0231  1703               	bsf	3,6	;RP1=1, select bank3
  8625  0232                     l4168:	
  8626  0232  3008               	movlw	8
  8627  0233  1683               	bsf	3,5	;RP0=1, select bank1
  8628  0234  1303               	bcf	3,6	;RP1=0, select bank1
  8629  0235  00DE               	movwf	??___flmul^(0+128)
  8630  0236                     u5945:	
  8631  0236  1003               	clrc
  8632  0237  1683               	bsf	3,5	;RP0=1, select bank3
  8633  0238  1703               	bsf	3,6	;RP1=1, select bank3
  8634  0239  0D92               	rlf	___flmul@grs^(0+384),f
  8635  023A  0D93               	rlf	(___flmul@grs+1)^(0+384),f
  8636  023B  0D94               	rlf	(___flmul@grs+2)^(0+384),f
  8637  023C  0D95               	rlf	(___flmul@grs+3)^(0+384),f
  8638  023D  1683               	bsf	3,5	;RP0=1, select bank1
  8639  023E  1303               	bcf	3,6	;RP1=0, select bank1
  8640  023F  0BDE               	decfsz	??___flmul^(0+128),f
  8641  0240  2A36               	goto	u5945
  8642  0241                     l4170:	
  8643  0241  0857               	movf	(___flmul@b^(0+128)+1),w
  8644  0242  00DE               	movwf	??___flmul^(0+128)
  8645  0243  085E               	movf	??___flmul^(0+128),w
  8646  0244  1283               	bcf	3,5	;RP0=0, select bank0
  8647  0245  1303               	bcf	3,6	;RP1=0, select bank0
  8648  0246  00BB               	movwf	__Umul8_16@multiplicand
  8649  0247  1683               	bsf	3,5	;RP0=1, select bank1
  8650  0248  1303               	bcf	3,6	;RP1=0, select bank1
  8651  0249  085A               	movf	___flmul@a^(0+128),w
  8652  024A  160A  158A  25C4  120A  118A  	fcall	__Umul8_16
  8653  024F  1283               	bcf	3,5	;RP0=0, select bank0
  8654  0250  1303               	bcf	3,6	;RP1=0, select bank0
  8655  0251  083C               	movf	?__Umul8_16+1,w
  8656  0252  1683               	bsf	3,5	;RP0=1, select bank3
  8657  0253  1703               	bsf	3,6	;RP1=1, select bank3
  8658  0254  009C               	movwf	(___flmul@temp+1)^(0+384)
  8659  0255  1283               	bcf	3,5	;RP0=0, select bank0
  8660  0256  1303               	bcf	3,6	;RP1=0, select bank0
  8661  0257  083B               	movf	?__Umul8_16,w
  8662  0258  1683               	bsf	3,5	;RP0=1, select bank3
  8663  0259  1703               	bsf	3,6	;RP1=1, select bank3
  8664  025A  009B               	movwf	___flmul@temp^(0+384)
  8665  025B                     l4172:	
  8666  025B  081B               	movf	___flmul@temp^(0+384),w
  8667  025C  1683               	bsf	3,5	;RP0=1, select bank1
  8668  025D  1303               	bcf	3,6	;RP1=0, select bank1
  8669  025E  00DE               	movwf	??___flmul^(0+128)
  8670  025F  1683               	bsf	3,5	;RP0=1, select bank3
  8671  0260  1703               	bsf	3,6	;RP1=1, select bank3
  8672  0261  081C               	movf	(___flmul@temp+1)^(0+384),w
  8673  0262  1683               	bsf	3,5	;RP0=1, select bank1
  8674  0263  1303               	bcf	3,6	;RP1=0, select bank1
  8675  0264  00DF               	movwf	(??___flmul^(0+128)+1)
  8676  0265  01E0               	clrf	(??___flmul^(0+128)+2)
  8677  0266  01E1               	clrf	(??___flmul^(0+128)+3)
  8678  0267  085E               	movf	??___flmul^(0+128),w
  8679  0268  1683               	bsf	3,5	;RP0=1, select bank3
  8680  0269  1703               	bsf	3,6	;RP1=1, select bank3
  8681  026A  0792               	addwf	___flmul@grs^(0+384),f
  8682  026B  1683               	bsf	3,5	;RP0=1, select bank1
  8683  026C  1303               	bcf	3,6	;RP1=0, select bank1
  8684  026D  085F               	movf	(??___flmul+1)^(0+128),w
  8685  026E  1103               	clrz
  8686  026F  1803               	skipnc
  8687  0270  3E01               	addlw	1
  8688  0271  1903               	skipnz
  8689  0272  2A76               	goto	u5951
  8690  0273  1683               	bsf	3,5	;RP0=1, select bank3
  8691  0274  1703               	bsf	3,6	;RP1=1, select bank3
  8692  0275  0793               	addwf	(___flmul@grs+1)^(0+384),f
  8693  0276                     u5951:	
  8694  0276  1683               	bsf	3,5	;RP0=1, select bank1
  8695  0277  1303               	bcf	3,6	;RP1=0, select bank1
  8696  0278  0860               	movf	(??___flmul+2)^(0+128),w
  8697  0279  1103               	clrz
  8698  027A  1803               	skipnc
  8699  027B  3E01               	addlw	1
  8700  027C  1903               	skipnz
  8701  027D  2A81               	goto	u5952
  8702  027E  1683               	bsf	3,5	;RP0=1, select bank3
  8703  027F  1703               	bsf	3,6	;RP1=1, select bank3
  8704  0280  0794               	addwf	(___flmul@grs+2)^(0+384),f
  8705  0281                     u5952:	
  8706  0281  1683               	bsf	3,5	;RP0=1, select bank1
  8707  0282  1303               	bcf	3,6	;RP1=0, select bank1
  8708  0283  0861               	movf	(??___flmul+3)^(0+128),w
  8709  0284  1103               	clrz
  8710  0285  1803               	skipnc
  8711  0286  3E01               	addlw	1
  8712  0287  1903               	skipnz
  8713  0288  2A8C               	goto	u5953
  8714  0289  1683               	bsf	3,5	;RP0=1, select bank3
  8715  028A  1703               	bsf	3,6	;RP1=1, select bank3
  8716  028B  0795               	addwf	(___flmul@grs+3)^(0+384),f
  8717  028C                     u5953:	
  8718  028C  1683               	bsf	3,5	;RP0=1, select bank1
  8719  028D  1303               	bcf	3,6	;RP1=0, select bank1
  8720  028E  1683               	bsf	3,5	;RP0=1, select bank3
  8721  028F  1703               	bsf	3,6	;RP1=1, select bank3
  8722  0290                     l4174:	
  8723  0290  1683               	bsf	3,5	;RP0=1, select bank1
  8724  0291  1303               	bcf	3,6	;RP1=0, select bank1
  8725  0292  0856               	movf	___flmul@b^(0+128),w
  8726  0293  00DE               	movwf	??___flmul^(0+128)
  8727  0294  085E               	movf	??___flmul^(0+128),w
  8728  0295  1283               	bcf	3,5	;RP0=0, select bank0
  8729  0296  1303               	bcf	3,6	;RP1=0, select bank0
  8730  0297  00BB               	movwf	__Umul8_16@multiplicand
  8731  0298  1683               	bsf	3,5	;RP0=1, select bank1
  8732  0299  1303               	bcf	3,6	;RP1=0, select bank1
  8733  029A  085B               	movf	(___flmul@a^(0+128)+1),w
  8734  029B  160A  158A  25C4  120A  118A  	fcall	__Umul8_16
  8735  02A0  1283               	bcf	3,5	;RP0=0, select bank0
  8736  02A1  1303               	bcf	3,6	;RP1=0, select bank0
  8737  02A2  083C               	movf	?__Umul8_16+1,w
  8738  02A3  1683               	bsf	3,5	;RP0=1, select bank3
  8739  02A4  1703               	bsf	3,6	;RP1=1, select bank3
  8740  02A5  009C               	movwf	(___flmul@temp+1)^(0+384)
  8741  02A6  1283               	bcf	3,5	;RP0=0, select bank0
  8742  02A7  1303               	bcf	3,6	;RP1=0, select bank0
  8743  02A8  083B               	movf	?__Umul8_16,w
  8744  02A9  1683               	bsf	3,5	;RP0=1, select bank3
  8745  02AA  1703               	bsf	3,6	;RP1=1, select bank3
  8746  02AB  009B               	movwf	___flmul@temp^(0+384)
  8747  02AC                     l4176:	
  8748  02AC  081B               	movf	___flmul@temp^(0+384),w
  8749  02AD  1683               	bsf	3,5	;RP0=1, select bank1
  8750  02AE  1303               	bcf	3,6	;RP1=0, select bank1
  8751  02AF  00DE               	movwf	??___flmul^(0+128)
  8752  02B0  1683               	bsf	3,5	;RP0=1, select bank3
  8753  02B1  1703               	bsf	3,6	;RP1=1, select bank3
  8754  02B2  081C               	movf	(___flmul@temp+1)^(0+384),w
  8755  02B3  1683               	bsf	3,5	;RP0=1, select bank1
  8756  02B4  1303               	bcf	3,6	;RP1=0, select bank1
  8757  02B5  00DF               	movwf	(??___flmul^(0+128)+1)
  8758  02B6  01E0               	clrf	(??___flmul^(0+128)+2)
  8759  02B7  01E1               	clrf	(??___flmul^(0+128)+3)
  8760  02B8  085E               	movf	??___flmul^(0+128),w
  8761  02B9  1683               	bsf	3,5	;RP0=1, select bank3
  8762  02BA  1703               	bsf	3,6	;RP1=1, select bank3
  8763  02BB  0792               	addwf	___flmul@grs^(0+384),f
  8764  02BC  1683               	bsf	3,5	;RP0=1, select bank1
  8765  02BD  1303               	bcf	3,6	;RP1=0, select bank1
  8766  02BE  085F               	movf	(??___flmul+1)^(0+128),w
  8767  02BF  1103               	clrz
  8768  02C0  1803               	skipnc
  8769  02C1  3E01               	addlw	1
  8770  02C2  1903               	skipnz
  8771  02C3  2AC7               	goto	u5961
  8772  02C4  1683               	bsf	3,5	;RP0=1, select bank3
  8773  02C5  1703               	bsf	3,6	;RP1=1, select bank3
  8774  02C6  0793               	addwf	(___flmul@grs+1)^(0+384),f
  8775  02C7                     u5961:	
  8776  02C7  1683               	bsf	3,5	;RP0=1, select bank1
  8777  02C8  1303               	bcf	3,6	;RP1=0, select bank1
  8778  02C9  0860               	movf	(??___flmul+2)^(0+128),w
  8779  02CA  1103               	clrz
  8780  02CB  1803               	skipnc
  8781  02CC  3E01               	addlw	1
  8782  02CD  1903               	skipnz
  8783  02CE  2AD2               	goto	u5962
  8784  02CF  1683               	bsf	3,5	;RP0=1, select bank3
  8785  02D0  1703               	bsf	3,6	;RP1=1, select bank3
  8786  02D1  0794               	addwf	(___flmul@grs+2)^(0+384),f
  8787  02D2                     u5962:	
  8788  02D2  1683               	bsf	3,5	;RP0=1, select bank1
  8789  02D3  1303               	bcf	3,6	;RP1=0, select bank1
  8790  02D4  0861               	movf	(??___flmul+3)^(0+128),w
  8791  02D5  1103               	clrz
  8792  02D6  1803               	skipnc
  8793  02D7  3E01               	addlw	1
  8794  02D8  1903               	skipnz
  8795  02D9  2ADD               	goto	u5963
  8796  02DA  1683               	bsf	3,5	;RP0=1, select bank3
  8797  02DB  1703               	bsf	3,6	;RP1=1, select bank3
  8798  02DC  0795               	addwf	(___flmul@grs+3)^(0+384),f
  8799  02DD                     u5963:	
  8800  02DD  1683               	bsf	3,5	;RP0=1, select bank1
  8801  02DE  1303               	bcf	3,6	;RP1=0, select bank1
  8802  02DF  1683               	bsf	3,5	;RP0=1, select bank3
  8803  02E0  1703               	bsf	3,6	;RP1=1, select bank3
  8804  02E1                     l4178:	
  8805  02E1  3008               	movlw	8
  8806  02E2  1683               	bsf	3,5	;RP0=1, select bank1
  8807  02E3  1303               	bcf	3,6	;RP1=0, select bank1
  8808  02E4  00DE               	movwf	??___flmul^(0+128)
  8809  02E5                     u5975:	
  8810  02E5  1003               	clrc
  8811  02E6  1683               	bsf	3,5	;RP0=1, select bank3
  8812  02E7  1703               	bsf	3,6	;RP1=1, select bank3
  8813  02E8  0D92               	rlf	___flmul@grs^(0+384),f
  8814  02E9  0D93               	rlf	(___flmul@grs+1)^(0+384),f
  8815  02EA  0D94               	rlf	(___flmul@grs+2)^(0+384),f
  8816  02EB  0D95               	rlf	(___flmul@grs+3)^(0+384),f
  8817  02EC  1683               	bsf	3,5	;RP0=1, select bank1
  8818  02ED  1303               	bcf	3,6	;RP1=0, select bank1
  8819  02EE  0BDE               	decfsz	??___flmul^(0+128),f
  8820  02EF  2AE5               	goto	u5975
  8821  02F0  0856               	movf	___flmul@b^(0+128),w
  8822  02F1  00DE               	movwf	??___flmul^(0+128)
  8823  02F2  085E               	movf	??___flmul^(0+128),w
  8824  02F3  1283               	bcf	3,5	;RP0=0, select bank0
  8825  02F4  1303               	bcf	3,6	;RP1=0, select bank0
  8826  02F5  00BB               	movwf	__Umul8_16@multiplicand
  8827  02F6  1683               	bsf	3,5	;RP0=1, select bank1
  8828  02F7  1303               	bcf	3,6	;RP1=0, select bank1
  8829  02F8  085A               	movf	___flmul@a^(0+128),w
  8830  02F9  160A  158A  25C4  120A  118A  	fcall	__Umul8_16
  8831  02FE  1283               	bcf	3,5	;RP0=0, select bank0
  8832  02FF  1303               	bcf	3,6	;RP1=0, select bank0
  8833  0300  083C               	movf	?__Umul8_16+1,w
  8834  0301  1683               	bsf	3,5	;RP0=1, select bank3
  8835  0302  1703               	bsf	3,6	;RP1=1, select bank3
  8836  0303  009C               	movwf	(___flmul@temp+1)^(0+384)
  8837  0304  1283               	bcf	3,5	;RP0=0, select bank0
  8838  0305  1303               	bcf	3,6	;RP1=0, select bank0
  8839  0306  083B               	movf	?__Umul8_16,w
  8840  0307  1683               	bsf	3,5	;RP0=1, select bank3
  8841  0308  1703               	bsf	3,6	;RP1=1, select bank3
  8842  0309  009B               	movwf	___flmul@temp^(0+384)
  8843  030A                     l4180:	
  8844  030A  081B               	movf	___flmul@temp^(0+384),w
  8845  030B  1683               	bsf	3,5	;RP0=1, select bank1
  8846  030C  1303               	bcf	3,6	;RP1=0, select bank1
  8847  030D  00DE               	movwf	??___flmul^(0+128)
  8848  030E  1683               	bsf	3,5	;RP0=1, select bank3
  8849  030F  1703               	bsf	3,6	;RP1=1, select bank3
  8850  0310  081C               	movf	(___flmul@temp+1)^(0+384),w
  8851  0311  1683               	bsf	3,5	;RP0=1, select bank1
  8852  0312  1303               	bcf	3,6	;RP1=0, select bank1
  8853  0313  00DF               	movwf	(??___flmul^(0+128)+1)
  8854  0314  01E0               	clrf	(??___flmul^(0+128)+2)
  8855  0315  01E1               	clrf	(??___flmul^(0+128)+3)
  8856  0316  085E               	movf	??___flmul^(0+128),w
  8857  0317  1683               	bsf	3,5	;RP0=1, select bank3
  8858  0318  1703               	bsf	3,6	;RP1=1, select bank3
  8859  0319  0792               	addwf	___flmul@grs^(0+384),f
  8860  031A  1683               	bsf	3,5	;RP0=1, select bank1
  8861  031B  1303               	bcf	3,6	;RP1=0, select bank1
  8862  031C  085F               	movf	(??___flmul+1)^(0+128),w
  8863  031D  1103               	clrz
  8864  031E  1803               	skipnc
  8865  031F  3E01               	addlw	1
  8866  0320  1903               	skipnz
  8867  0321  2B25               	goto	u5981
  8868  0322  1683               	bsf	3,5	;RP0=1, select bank3
  8869  0323  1703               	bsf	3,6	;RP1=1, select bank3
  8870  0324  0793               	addwf	(___flmul@grs+1)^(0+384),f
  8871  0325                     u5981:	
  8872  0325  1683               	bsf	3,5	;RP0=1, select bank1
  8873  0326  1303               	bcf	3,6	;RP1=0, select bank1
  8874  0327  0860               	movf	(??___flmul+2)^(0+128),w
  8875  0328  1103               	clrz
  8876  0329  1803               	skipnc
  8877  032A  3E01               	addlw	1
  8878  032B  1903               	skipnz
  8879  032C  2B30               	goto	u5982
  8880  032D  1683               	bsf	3,5	;RP0=1, select bank3
  8881  032E  1703               	bsf	3,6	;RP1=1, select bank3
  8882  032F  0794               	addwf	(___flmul@grs+2)^(0+384),f
  8883  0330                     u5982:	
  8884  0330  1683               	bsf	3,5	;RP0=1, select bank1
  8885  0331  1303               	bcf	3,6	;RP1=0, select bank1
  8886  0332  0861               	movf	(??___flmul+3)^(0+128),w
  8887  0333  1103               	clrz
  8888  0334  1803               	skipnc
  8889  0335  3E01               	addlw	1
  8890  0336  1903               	skipnz
  8891  0337  2B3B               	goto	u5983
  8892  0338  1683               	bsf	3,5	;RP0=1, select bank3
  8893  0339  1703               	bsf	3,6	;RP1=1, select bank3
  8894  033A  0795               	addwf	(___flmul@grs+3)^(0+384),f
  8895  033B                     u5983:	
  8896  033B  1683               	bsf	3,5	;RP0=1, select bank1
  8897  033C  1303               	bcf	3,6	;RP1=0, select bank1
  8898  033D  1683               	bsf	3,5	;RP0=1, select bank3
  8899  033E  1703               	bsf	3,6	;RP1=1, select bank3
  8900  033F                     l4182:	
  8901  033F  1683               	bsf	3,5	;RP0=1, select bank1
  8902  0340  1303               	bcf	3,6	;RP1=0, select bank1
  8903  0341  0857               	movf	(___flmul@b^(0+128)+1),w
  8904  0342  00DE               	movwf	??___flmul^(0+128)
  8905  0343  085E               	movf	??___flmul^(0+128),w
  8906  0344  1283               	bcf	3,5	;RP0=0, select bank0
  8907  0345  1303               	bcf	3,6	;RP1=0, select bank0
  8908  0346  00BB               	movwf	__Umul8_16@multiplicand
  8909  0347  1683               	bsf	3,5	;RP0=1, select bank1
  8910  0348  1303               	bcf	3,6	;RP1=0, select bank1
  8911  0349  085C               	movf	(___flmul@a^(0+128)+2),w
  8912  034A  160A  158A  25C4  120A  118A  	fcall	__Umul8_16
  8913  034F  1283               	bcf	3,5	;RP0=0, select bank0
  8914  0350  1303               	bcf	3,6	;RP1=0, select bank0
  8915  0351  083C               	movf	?__Umul8_16+1,w
  8916  0352  1683               	bsf	3,5	;RP0=1, select bank3
  8917  0353  1703               	bsf	3,6	;RP1=1, select bank3
  8918  0354  009C               	movwf	(___flmul@temp+1)^(0+384)
  8919  0355  1283               	bcf	3,5	;RP0=0, select bank0
  8920  0356  1303               	bcf	3,6	;RP1=0, select bank0
  8921  0357  083B               	movf	?__Umul8_16,w
  8922  0358  1683               	bsf	3,5	;RP0=1, select bank3
  8923  0359  1703               	bsf	3,6	;RP1=1, select bank3
  8924  035A  009B               	movwf	___flmul@temp^(0+384)
  8925  035B  081B               	movf	___flmul@temp^(0+384),w
  8926  035C  1683               	bsf	3,5	;RP0=1, select bank1
  8927  035D  1303               	bcf	3,6	;RP1=0, select bank1
  8928  035E  00DE               	movwf	??___flmul^(0+128)
  8929  035F  1683               	bsf	3,5	;RP0=1, select bank3
  8930  0360  1703               	bsf	3,6	;RP1=1, select bank3
  8931  0361  081C               	movf	(___flmul@temp+1)^(0+384),w
  8932  0362  1683               	bsf	3,5	;RP0=1, select bank1
  8933  0363  1303               	bcf	3,6	;RP1=0, select bank1
  8934  0364  00DF               	movwf	(??___flmul^(0+128)+1)
  8935  0365  01E0               	clrf	(??___flmul^(0+128)+2)
  8936  0366  01E1               	clrf	(??___flmul^(0+128)+3)
  8937  0367  085E               	movf	??___flmul^(0+128),w
  8938  0368  1683               	bsf	3,5	;RP0=1, select bank3
  8939  0369  1703               	bsf	3,6	;RP1=1, select bank3
  8940  036A  0797               	addwf	___flmul@prod^(0+384),f
  8941  036B  1683               	bsf	3,5	;RP0=1, select bank1
  8942  036C  1303               	bcf	3,6	;RP1=0, select bank1
  8943  036D  085F               	movf	(??___flmul+1)^(0+128),w
  8944  036E  1103               	clrz
  8945  036F  1803               	skipnc
  8946  0370  3E01               	addlw	1
  8947  0371  1903               	skipnz
  8948  0372  2B76               	goto	u5991
  8949  0373  1683               	bsf	3,5	;RP0=1, select bank3
  8950  0374  1703               	bsf	3,6	;RP1=1, select bank3
  8951  0375  0798               	addwf	(___flmul@prod+1)^(0+384),f
  8952  0376                     u5991:	
  8953  0376  1683               	bsf	3,5	;RP0=1, select bank1
  8954  0377  1303               	bcf	3,6	;RP1=0, select bank1
  8955  0378  0860               	movf	(??___flmul+2)^(0+128),w
  8956  0379  1103               	clrz
  8957  037A  1803               	skipnc
  8958  037B  3E01               	addlw	1
  8959  037C  1903               	skipnz
  8960  037D  2B81               	goto	u5992
  8961  037E  1683               	bsf	3,5	;RP0=1, select bank3
  8962  037F  1703               	bsf	3,6	;RP1=1, select bank3
  8963  0380  0799               	addwf	(___flmul@prod+2)^(0+384),f
  8964  0381                     u5992:	
  8965  0381  1683               	bsf	3,5	;RP0=1, select bank1
  8966  0382  1303               	bcf	3,6	;RP1=0, select bank1
  8967  0383  0861               	movf	(??___flmul+3)^(0+128),w
  8968  0384  1103               	clrz
  8969  0385  1803               	skipnc
  8970  0386  3E01               	addlw	1
  8971  0387  1903               	skipnz
  8972  0388  2B8C               	goto	u5993
  8973  0389  1683               	bsf	3,5	;RP0=1, select bank3
  8974  038A  1703               	bsf	3,6	;RP1=1, select bank3
  8975  038B  079A               	addwf	(___flmul@prod+3)^(0+384),f
  8976  038C                     u5993:	
  8977  038C  1683               	bsf	3,5	;RP0=1, select bank1
  8978  038D  1303               	bcf	3,6	;RP1=0, select bank1
  8979  038E  1683               	bsf	3,5	;RP0=1, select bank3
  8980  038F  1703               	bsf	3,6	;RP1=1, select bank3
  8981  0390                     l4184:	
  8982  0390  1683               	bsf	3,5	;RP0=1, select bank1
  8983  0391  1303               	bcf	3,6	;RP1=0, select bank1
  8984  0392  0858               	movf	(___flmul@b^(0+128)+2),w
  8985  0393  00DE               	movwf	??___flmul^(0+128)
  8986  0394  085E               	movf	??___flmul^(0+128),w
  8987  0395  1283               	bcf	3,5	;RP0=0, select bank0
  8988  0396  1303               	bcf	3,6	;RP1=0, select bank0
  8989  0397  00BB               	movwf	__Umul8_16@multiplicand
  8990  0398  1683               	bsf	3,5	;RP0=1, select bank1
  8991  0399  1303               	bcf	3,6	;RP1=0, select bank1
  8992  039A  085B               	movf	(___flmul@a^(0+128)+1),w
  8993  039B  160A  158A  25C4  120A  118A  	fcall	__Umul8_16
  8994  03A0  1283               	bcf	3,5	;RP0=0, select bank0
  8995  03A1  1303               	bcf	3,6	;RP1=0, select bank0
  8996  03A2  083C               	movf	?__Umul8_16+1,w
  8997  03A3  1683               	bsf	3,5	;RP0=1, select bank3
  8998  03A4  1703               	bsf	3,6	;RP1=1, select bank3
  8999  03A5  009C               	movwf	(___flmul@temp+1)^(0+384)
  9000  03A6  1283               	bcf	3,5	;RP0=0, select bank0
  9001  03A7  1303               	bcf	3,6	;RP1=0, select bank0
  9002  03A8  083B               	movf	?__Umul8_16,w
  9003  03A9  1683               	bsf	3,5	;RP0=1, select bank3
  9004  03AA  1703               	bsf	3,6	;RP1=1, select bank3
  9005  03AB  009B               	movwf	___flmul@temp^(0+384)
  9006  03AC                     l4186:	
  9007  03AC  081B               	movf	___flmul@temp^(0+384),w
  9008  03AD  1683               	bsf	3,5	;RP0=1, select bank1
  9009  03AE  1303               	bcf	3,6	;RP1=0, select bank1
  9010  03AF  00DE               	movwf	??___flmul^(0+128)
  9011  03B0  1683               	bsf	3,5	;RP0=1, select bank3
  9012  03B1  1703               	bsf	3,6	;RP1=1, select bank3
  9013  03B2  081C               	movf	(___flmul@temp+1)^(0+384),w
  9014  03B3  1683               	bsf	3,5	;RP0=1, select bank1
  9015  03B4  1303               	bcf	3,6	;RP1=0, select bank1
  9016  03B5  00DF               	movwf	(??___flmul^(0+128)+1)
  9017  03B6  01E0               	clrf	(??___flmul^(0+128)+2)
  9018  03B7  01E1               	clrf	(??___flmul^(0+128)+3)
  9019  03B8  085E               	movf	??___flmul^(0+128),w
  9020  03B9  1683               	bsf	3,5	;RP0=1, select bank3
  9021  03BA  1703               	bsf	3,6	;RP1=1, select bank3
  9022  03BB  0797               	addwf	___flmul@prod^(0+384),f
  9023  03BC  1683               	bsf	3,5	;RP0=1, select bank1
  9024  03BD  1303               	bcf	3,6	;RP1=0, select bank1
  9025  03BE  085F               	movf	(??___flmul+1)^(0+128),w
  9026  03BF  1103               	clrz
  9027  03C0  1803               	skipnc
  9028  03C1  3E01               	addlw	1
  9029  03C2  1903               	skipnz
  9030  03C3  2BC7               	goto	u6001
  9031  03C4  1683               	bsf	3,5	;RP0=1, select bank3
  9032  03C5  1703               	bsf	3,6	;RP1=1, select bank3
  9033  03C6  0798               	addwf	(___flmul@prod+1)^(0+384),f
  9034  03C7                     u6001:	
  9035  03C7  1683               	bsf	3,5	;RP0=1, select bank1
  9036  03C8  1303               	bcf	3,6	;RP1=0, select bank1
  9037  03C9  0860               	movf	(??___flmul+2)^(0+128),w
  9038  03CA  1103               	clrz
  9039  03CB  1803               	skipnc
  9040  03CC  3E01               	addlw	1
  9041  03CD  1903               	skipnz
  9042  03CE  2BD2               	goto	u6002
  9043  03CF  1683               	bsf	3,5	;RP0=1, select bank3
  9044  03D0  1703               	bsf	3,6	;RP1=1, select bank3
  9045  03D1  0799               	addwf	(___flmul@prod+2)^(0+384),f
  9046  03D2                     u6002:	
  9047  03D2  1683               	bsf	3,5	;RP0=1, select bank1
  9048  03D3  1303               	bcf	3,6	;RP1=0, select bank1
  9049  03D4  0861               	movf	(??___flmul+3)^(0+128),w
  9050  03D5  1103               	clrz
  9051  03D6  1803               	skipnc
  9052  03D7  3E01               	addlw	1
  9053  03D8  1903               	skipnz
  9054  03D9  2BDD               	goto	u6003
  9055  03DA  1683               	bsf	3,5	;RP0=1, select bank3
  9056  03DB  1703               	bsf	3,6	;RP1=1, select bank3
  9057  03DC  079A               	addwf	(___flmul@prod+3)^(0+384),f
  9058  03DD                     u6003:	
  9059  03DD  1683               	bsf	3,5	;RP0=1, select bank1
  9060  03DE  1303               	bcf	3,6	;RP1=0, select bank1
  9061  03DF  1683               	bsf	3,5	;RP0=1, select bank3
  9062  03E0  1703               	bsf	3,6	;RP1=1, select bank3
  9063  03E1  1683               	bsf	3,5	;RP0=1, select bank1
  9064  03E2  1303               	bcf	3,6	;RP1=0, select bank1
  9065  03E3  0858               	movf	(___flmul@b^(0+128)+2),w
  9066  03E4  00DE               	movwf	??___flmul^(0+128)
  9067  03E5  085E               	movf	??___flmul^(0+128),w
  9068  03E6  1283               	bcf	3,5	;RP0=0, select bank0
  9069  03E7  1303               	bcf	3,6	;RP1=0, select bank0
  9070  03E8  00BB               	movwf	__Umul8_16@multiplicand
  9071  03E9  1683               	bsf	3,5	;RP0=1, select bank1
  9072  03EA  1303               	bcf	3,6	;RP1=0, select bank1
  9073  03EB  085C               	movf	(___flmul@a^(0+128)+2),w
  9074  03EC  160A  158A  25C4  120A  118A  	fcall	__Umul8_16
  9075  03F1  1283               	bcf	3,5	;RP0=0, select bank0
  9076  03F2  1303               	bcf	3,6	;RP1=0, select bank0
  9077  03F3  083C               	movf	?__Umul8_16+1,w
  9078  03F4  1683               	bsf	3,5	;RP0=1, select bank3
  9079  03F5  1703               	bsf	3,6	;RP1=1, select bank3
  9080  03F6  009C               	movwf	(___flmul@temp+1)^(0+384)
  9081  03F7  1283               	bcf	3,5	;RP0=0, select bank0
  9082  03F8  1303               	bcf	3,6	;RP1=0, select bank0
  9083  03F9  083B               	movf	?__Umul8_16,w
  9084  03FA  1683               	bsf	3,5	;RP0=1, select bank3
  9085  03FB  1703               	bsf	3,6	;RP1=1, select bank3
  9086  03FC  009B               	movwf	___flmul@temp^(0+384)
  9087  03FD                     l4188:	
  9088  03FD  081B               	movf	___flmul@temp^(0+384),w
  9089  03FE  1683               	bsf	3,5	;RP0=1, select bank1
  9090  03FF  1303               	bcf	3,6	;RP1=0, select bank1
  9091  0400  00DE               	movwf	??___flmul^(0+128)
  9092  0401  1683               	bsf	3,5	;RP0=1, select bank3
  9093  0402  1703               	bsf	3,6	;RP1=1, select bank3
  9094  0403  081C               	movf	(___flmul@temp+1)^(0+384),w
  9095  0404  1683               	bsf	3,5	;RP0=1, select bank1
  9096  0405  1303               	bcf	3,6	;RP1=0, select bank1
  9097  0406  00DF               	movwf	(??___flmul^(0+128)+1)
  9098  0407  01E0               	clrf	(??___flmul^(0+128)+2)
  9099  0408  01E1               	clrf	(??___flmul^(0+128)+3)
  9100  0409  3008               	movlw	8
  9101  040A                     u6015:	
  9102  040A  1003               	clrc
  9103  040B  0DDE               	rlf	??___flmul^(0+128),f
  9104  040C  0DDF               	rlf	(??___flmul^(0+128)+1),f
  9105  040D  0DE0               	rlf	(??___flmul^(0+128)+2),f
  9106  040E  0DE1               	rlf	(??___flmul^(0+128)+3),f
  9107  040F                     u6010:	
  9108  040F  3EFF               	addlw	-1
  9109  0410  1D03               	skipz
  9110  0411  2C0A               	goto	u6015
  9111  0412  085E               	movf	??___flmul^(0+128),w
  9112  0413  1683               	bsf	3,5	;RP0=1, select bank3
  9113  0414  1703               	bsf	3,6	;RP1=1, select bank3
  9114  0415  0797               	addwf	___flmul@prod^(0+384),f
  9115  0416  1683               	bsf	3,5	;RP0=1, select bank1
  9116  0417  1303               	bcf	3,6	;RP1=0, select bank1
  9117  0418  085F               	movf	(??___flmul+1)^(0+128),w
  9118  0419  1103               	clrz
  9119  041A  1803               	skipnc
  9120  041B  3E01               	addlw	1
  9121  041C  1903               	skipnz
  9122  041D  2C21               	goto	u6021
  9123  041E  1683               	bsf	3,5	;RP0=1, select bank3
  9124  041F  1703               	bsf	3,6	;RP1=1, select bank3
  9125  0420  0798               	addwf	(___flmul@prod+1)^(0+384),f
  9126  0421                     u6021:	
  9127  0421  1683               	bsf	3,5	;RP0=1, select bank1
  9128  0422  1303               	bcf	3,6	;RP1=0, select bank1
  9129  0423  0860               	movf	(??___flmul+2)^(0+128),w
  9130  0424  1103               	clrz
  9131  0425  1803               	skipnc
  9132  0426  3E01               	addlw	1
  9133  0427  1903               	skipnz
  9134  0428  2C2C               	goto	u6022
  9135  0429  1683               	bsf	3,5	;RP0=1, select bank3
  9136  042A  1703               	bsf	3,6	;RP1=1, select bank3
  9137  042B  0799               	addwf	(___flmul@prod+2)^(0+384),f
  9138  042C                     u6022:	
  9139  042C  1683               	bsf	3,5	;RP0=1, select bank1
  9140  042D  1303               	bcf	3,6	;RP1=0, select bank1
  9141  042E  0861               	movf	(??___flmul+3)^(0+128),w
  9142  042F  1103               	clrz
  9143  0430  1803               	skipnc
  9144  0431  3E01               	addlw	1
  9145  0432  1903               	skipnz
  9146  0433  2C37               	goto	u6023
  9147  0434  1683               	bsf	3,5	;RP0=1, select bank3
  9148  0435  1703               	bsf	3,6	;RP1=1, select bank3
  9149  0436  079A               	addwf	(___flmul@prod+3)^(0+384),f
  9150  0437                     u6023:	
  9151  0437  1683               	bsf	3,5	;RP0=1, select bank1
  9152  0438  1303               	bcf	3,6	;RP1=0, select bank1
  9153  0439  1683               	bsf	3,5	;RP0=1, select bank3
  9154  043A  1703               	bsf	3,6	;RP1=1, select bank3
  9155  043B                     l4190:	
  9156  043B  0812               	movf	___flmul@grs^(0+384),w
  9157  043C  1683               	bsf	3,5	;RP0=1, select bank1
  9158  043D  1303               	bcf	3,6	;RP1=0, select bank1
  9159  043E  00DE               	movwf	??___flmul^(0+128)
  9160  043F  1683               	bsf	3,5	;RP0=1, select bank3
  9161  0440  1703               	bsf	3,6	;RP1=1, select bank3
  9162  0441  0813               	movf	(___flmul@grs+1)^(0+384),w
  9163  0442  1683               	bsf	3,5	;RP0=1, select bank1
  9164  0443  1303               	bcf	3,6	;RP1=0, select bank1
  9165  0444  00DF               	movwf	(??___flmul^(0+128)+1)
  9166  0445  1683               	bsf	3,5	;RP0=1, select bank3
  9167  0446  1703               	bsf	3,6	;RP1=1, select bank3
  9168  0447  0814               	movf	(___flmul@grs+2)^(0+384),w
  9169  0448  1683               	bsf	3,5	;RP0=1, select bank1
  9170  0449  1303               	bcf	3,6	;RP1=0, select bank1
  9171  044A  00E0               	movwf	(??___flmul^(0+128)+2)
  9172  044B  1683               	bsf	3,5	;RP0=1, select bank3
  9173  044C  1703               	bsf	3,6	;RP1=1, select bank3
  9174  044D  0815               	movf	(___flmul@grs+3)^(0+384),w
  9175  044E  1683               	bsf	3,5	;RP0=1, select bank1
  9176  044F  1303               	bcf	3,6	;RP1=0, select bank1
  9177  0450  00E1               	movwf	(??___flmul^(0+128)+3)
  9178  0451  3018               	movlw	24
  9179  0452                     u6035:	
  9180  0452  1003               	clrc
  9181  0453  0CE1               	rrf	(??___flmul^(0+128)+3),f
  9182  0454  0CE0               	rrf	(??___flmul^(0+128)+2),f
  9183  0455  0CDF               	rrf	(??___flmul^(0+128)+1),f
  9184  0456  0CDE               	rrf	??___flmul^(0+128),f
  9185  0457                     u6030:	
  9186  0457  3EFF               	addlw	-1
  9187  0458  1D03               	skipz
  9188  0459  2C52               	goto	u6035
  9189  045A  085E               	movf	??___flmul^(0+128),w
  9190  045B  1683               	bsf	3,5	;RP0=1, select bank3
  9191  045C  1703               	bsf	3,6	;RP1=1, select bank3
  9192  045D  0797               	addwf	___flmul@prod^(0+384),f
  9193  045E  1683               	bsf	3,5	;RP0=1, select bank1
  9194  045F  1303               	bcf	3,6	;RP1=0, select bank1
  9195  0460  085F               	movf	(??___flmul+1)^(0+128),w
  9196  0461  1103               	clrz
  9197  0462  1803               	skipnc
  9198  0463  3E01               	addlw	1
  9199  0464  1903               	skipnz
  9200  0465  2C69               	goto	u6041
  9201  0466  1683               	bsf	3,5	;RP0=1, select bank3
  9202  0467  1703               	bsf	3,6	;RP1=1, select bank3
  9203  0468  0798               	addwf	(___flmul@prod+1)^(0+384),f
  9204  0469                     u6041:	
  9205  0469  1683               	bsf	3,5	;RP0=1, select bank1
  9206  046A  1303               	bcf	3,6	;RP1=0, select bank1
  9207  046B  0860               	movf	(??___flmul+2)^(0+128),w
  9208  046C  1103               	clrz
  9209  046D  1803               	skipnc
  9210  046E  3E01               	addlw	1
  9211  046F  1903               	skipnz
  9212  0470  2C74               	goto	u6042
  9213  0471  1683               	bsf	3,5	;RP0=1, select bank3
  9214  0472  1703               	bsf	3,6	;RP1=1, select bank3
  9215  0473  0799               	addwf	(___flmul@prod+2)^(0+384),f
  9216  0474                     u6042:	
  9217  0474  1683               	bsf	3,5	;RP0=1, select bank1
  9218  0475  1303               	bcf	3,6	;RP1=0, select bank1
  9219  0476  0861               	movf	(??___flmul+3)^(0+128),w
  9220  0477  1103               	clrz
  9221  0478  1803               	skipnc
  9222  0479  3E01               	addlw	1
  9223  047A  1903               	skipnz
  9224  047B  2C7F               	goto	u6043
  9225  047C  1683               	bsf	3,5	;RP0=1, select bank3
  9226  047D  1703               	bsf	3,6	;RP1=1, select bank3
  9227  047E  079A               	addwf	(___flmul@prod+3)^(0+384),f
  9228  047F                     u6043:	
  9229  047F  1683               	bsf	3,5	;RP0=1, select bank1
  9230  0480  1303               	bcf	3,6	;RP1=0, select bank1
  9231  0481  1683               	bsf	3,5	;RP0=1, select bank3
  9232  0482  1703               	bsf	3,6	;RP1=1, select bank3
  9233  0483                     l4192:	
  9234  0483  3008               	movlw	8
  9235  0484  1683               	bsf	3,5	;RP0=1, select bank1
  9236  0485  1303               	bcf	3,6	;RP1=0, select bank1
  9237  0486  00DE               	movwf	??___flmul^(0+128)
  9238  0487                     u6055:	
  9239  0487  1003               	clrc
  9240  0488  1683               	bsf	3,5	;RP0=1, select bank3
  9241  0489  1703               	bsf	3,6	;RP1=1, select bank3
  9242  048A  0D92               	rlf	___flmul@grs^(0+384),f
  9243  048B  0D93               	rlf	(___flmul@grs+1)^(0+384),f
  9244  048C  0D94               	rlf	(___flmul@grs+2)^(0+384),f
  9245  048D  0D95               	rlf	(___flmul@grs+3)^(0+384),f
  9246  048E  1683               	bsf	3,5	;RP0=1, select bank1
  9247  048F  1303               	bcf	3,6	;RP1=0, select bank1
  9248  0490  0BDE               	decfsz	??___flmul^(0+128),f
  9249  0491  2C87               	goto	u6055
  9250  0492                     l4194:	
  9251  0492  1683               	bsf	3,5	;RP0=1, select bank3
  9252  0493  1703               	bsf	3,6	;RP1=1, select bank3
  9253  0494  0816               	movf	___flmul@bexp^(0+384),w
  9254  0495  0711               	addwf	___flmul@aexp^(0+384),w
  9255  0496  1683               	bsf	3,5	;RP0=1, select bank1
  9256  0497  1303               	bcf	3,6	;RP1=0, select bank1
  9257  0498  00DE               	movwf	??___flmul^(0+128)
  9258  0499  01DF               	clrf	(??___flmul^(0+128)+1)
  9259  049A  0DDF               	rlf	(??___flmul+1)^(0+128),f
  9260  049B  085E               	movf	??___flmul^(0+128),w
  9261  049C  3E82               	addlw	130
  9262  049D  1683               	bsf	3,5	;RP0=1, select bank3
  9263  049E  1703               	bsf	3,6	;RP1=1, select bank3
  9264  049F  009B               	movwf	___flmul@temp^(0+384)
  9265  04A0  1683               	bsf	3,5	;RP0=1, select bank1
  9266  04A1  1303               	bcf	3,6	;RP1=0, select bank1
  9267  04A2  085F               	movf	(??___flmul+1)^(0+128),w
  9268  04A3  1803               	skipnc
  9269  04A4  3E01               	addlw	1
  9270  04A5  3EFF               	addlw	255
  9271  04A6  1683               	bsf	3,5	;RP0=1, select bank3
  9272  04A7  1703               	bsf	3,6	;RP1=1, select bank3
  9273  04A8  009C               	movwf	(___flmul@temp+1)^(0+384)
  9274  04A9  2CD7               	goto	l4206
  9275  04AA                     l4196:	
  9276  04AA  3001               	movlw	1
  9277  04AB  1683               	bsf	3,5	;RP0=1, select bank1
  9278  04AC  1303               	bcf	3,6	;RP1=0, select bank1
  9279  04AD  00DE               	movwf	??___flmul^(0+128)
  9280  04AE                     u6065:	
  9281  04AE  1003               	clrc
  9282  04AF  1683               	bsf	3,5	;RP0=1, select bank3
  9283  04B0  1703               	bsf	3,6	;RP1=1, select bank3
  9284  04B1  0D97               	rlf	___flmul@prod^(0+384),f
  9285  04B2  0D98               	rlf	(___flmul@prod+1)^(0+384),f
  9286  04B3  0D99               	rlf	(___flmul@prod+2)^(0+384),f
  9287  04B4  0D9A               	rlf	(___flmul@prod+3)^(0+384),f
  9288  04B5  1683               	bsf	3,5	;RP0=1, select bank1
  9289  04B6  1303               	bcf	3,6	;RP1=0, select bank1
  9290  04B7  0BDE               	decfsz	??___flmul^(0+128),f
  9291  04B8  2CAE               	goto	u6065
  9292  04B9                     l4198:	
  9293  04B9  1683               	bsf	3,5	;RP0=1, select bank3
  9294  04BA  1703               	bsf	3,6	;RP1=1, select bank3
  9295  04BB  1F95               	btfss	(___flmul@grs+3)^(0+384),7
  9296  04BC  2CBE               	goto	u6071
  9297  04BD  2CBF               	goto	u6070
  9298  04BE                     u6071:	
  9299  04BE  2CC0               	goto	l4202
  9300  04BF                     u6070:	
  9301  04BF                     l4200:	
  9302  04BF  1417               	bsf	___flmul@prod^(0+384),0
  9303  04C0                     l4202:	
  9304  04C0  3001               	movlw	1
  9305  04C1  1683               	bsf	3,5	;RP0=1, select bank1
  9306  04C2  1303               	bcf	3,6	;RP1=0, select bank1
  9307  04C3  00DE               	movwf	??___flmul^(0+128)
  9308  04C4                     u6085:	
  9309  04C4  1003               	clrc
  9310  04C5  1683               	bsf	3,5	;RP0=1, select bank3
  9311  04C6  1703               	bsf	3,6	;RP1=1, select bank3
  9312  04C7  0D92               	rlf	___flmul@grs^(0+384),f
  9313  04C8  0D93               	rlf	(___flmul@grs+1)^(0+384),f
  9314  04C9  0D94               	rlf	(___flmul@grs+2)^(0+384),f
  9315  04CA  0D95               	rlf	(___flmul@grs+3)^(0+384),f
  9316  04CB  1683               	bsf	3,5	;RP0=1, select bank1
  9317  04CC  1303               	bcf	3,6	;RP1=0, select bank1
  9318  04CD  0BDE               	decfsz	??___flmul^(0+128),f
  9319  04CE  2CC4               	goto	u6085
  9320  04CF                     l4204:	
  9321  04CF  30FF               	movlw	255
  9322  04D0  1683               	bsf	3,5	;RP0=1, select bank3
  9323  04D1  1703               	bsf	3,6	;RP1=1, select bank3
  9324  04D2  079B               	addwf	___flmul@temp^(0+384),f
  9325  04D3  1803               	skipnc
  9326  04D4  0A9C               	incf	(___flmul@temp+1)^(0+384),f
  9327  04D5  30FF               	movlw	255
  9328  04D6  079C               	addwf	(___flmul@temp+1)^(0+384),f
  9329  04D7                     l4206:	
  9330  04D7  1F99               	btfss	(___flmul@prod+2)^(0+384),7
  9331  04D8  2CDA               	goto	u6091
  9332  04D9  2CDB               	goto	u6090
  9333  04DA                     u6091:	
  9334  04DA  2CAA               	goto	l4196
  9335  04DB                     u6090:	
  9336  04DB                     l4208:	
  9337  04DB  0191               	clrf	___flmul@aexp^(0+384)
  9338  04DC                     l4210:	
  9339  04DC  1F95               	btfss	(___flmul@grs+3)^(0+384),7
  9340  04DD  2CDF               	goto	u6101
  9341  04DE  2CE0               	goto	u6100
  9342  04DF                     u6101:	
  9343  04DF  2D0E               	goto	l4218
  9344  04E0                     u6100:	
  9345  04E0                     l4212:	
  9346  04E0  30FF               	movlw	255
  9347  04E1  0512               	andwf	___flmul@grs^(0+384),w
  9348  04E2  1683               	bsf	3,5	;RP0=1, select bank1
  9349  04E3  1303               	bcf	3,6	;RP1=0, select bank1
  9350  04E4  00DE               	movwf	??___flmul^(0+128)
  9351  04E5  30FF               	movlw	255
  9352  04E6  1683               	bsf	3,5	;RP0=1, select bank3
  9353  04E7  1703               	bsf	3,6	;RP1=1, select bank3
  9354  04E8  0513               	andwf	(___flmul@grs+1)^(0+384),w
  9355  04E9  1683               	bsf	3,5	;RP0=1, select bank1
  9356  04EA  1303               	bcf	3,6	;RP1=0, select bank1
  9357  04EB  00DF               	movwf	(??___flmul^(0+128)+1)
  9358  04EC  30FF               	movlw	255
  9359  04ED  1683               	bsf	3,5	;RP0=1, select bank3
  9360  04EE  1703               	bsf	3,6	;RP1=1, select bank3
  9361  04EF  0514               	andwf	(___flmul@grs+2)^(0+384),w
  9362  04F0  1683               	bsf	3,5	;RP0=1, select bank1
  9363  04F1  1303               	bcf	3,6	;RP1=0, select bank1
  9364  04F2  00E0               	movwf	(??___flmul^(0+128)+2)
  9365  04F3  307F               	movlw	127
  9366  04F4  1683               	bsf	3,5	;RP0=1, select bank3
  9367  04F5  1703               	bsf	3,6	;RP1=1, select bank3
  9368  04F6  0515               	andwf	(___flmul@grs+3)^(0+384),w
  9369  04F7  1683               	bsf	3,5	;RP0=1, select bank1
  9370  04F8  1303               	bcf	3,6	;RP1=0, select bank1
  9371  04F9  00E1               	movwf	(??___flmul^(0+128)+3)
  9372  04FA  0861               	movf	(??___flmul+3)^(0+128),w
  9373  04FB  0460               	iorwf	(??___flmul+2)^(0+128),w
  9374  04FC  045F               	iorwf	(??___flmul+1)^(0+128),w
  9375  04FD  045E               	iorwf	??___flmul^(0+128),w
  9376  04FE  1903               	skipnz
  9377  04FF  2D01               	goto	u6111
  9378  0500  2D02               	goto	u6110
  9379  0501                     u6111:	
  9380  0501  2D07               	goto	l893
  9381  0502                     u6110:	
  9382  0502                     l4214:	
  9383  0502  1683               	bsf	3,5	;RP0=1, select bank3
  9384  0503  1703               	bsf	3,6	;RP1=1, select bank3
  9385  0504  0191               	clrf	___flmul@aexp^(0+384)
  9386  0505  0A91               	incf	___flmul@aexp^(0+384),f
  9387  0506  2D0E               	goto	l4218
  9388  0507                     l893:	
  9389  0507  1683               	bsf	3,5	;RP0=1, select bank3
  9390  0508  1703               	bsf	3,6	;RP1=1, select bank3
  9391  0509  1C17               	btfss	___flmul@prod^(0+384),0
  9392  050A  2D0C               	goto	u6121
  9393  050B  2D0D               	goto	u6120
  9394  050C                     u6121:	
  9395  050C  2D0E               	goto	l4218
  9396  050D                     u6120:	
  9397  050D  2D02               	goto	l4214
  9398  050E                     l4218:	
  9399  050E  0811               	movf	___flmul@aexp^(0+384),w
  9400  050F  1903               	btfsc	3,2
  9401  0510  2D12               	goto	u6131
  9402  0511  2D13               	goto	u6130
  9403  0512                     u6131:	
  9404  0512  2D60               	goto	l4228
  9405  0513                     u6130:	
  9406  0513                     l4220:	
  9407  0513  3001               	movlw	1
  9408  0514  0797               	addwf	___flmul@prod^(0+384),f
  9409  0515  3000               	movlw	0
  9410  0516  1803               	skipnc
  9411  0517  3001               	movlw	1
  9412  0518  0798               	addwf	(___flmul@prod+1)^(0+384),f
  9413  0519  3000               	movlw	0
  9414  051A  1803               	skipnc
  9415  051B  3001               	movlw	1
  9416  051C  0799               	addwf	(___flmul@prod+2)^(0+384),f
  9417  051D  3000               	movlw	0
  9418  051E  1803               	skipnc
  9419  051F  3001               	movlw	1
  9420  0520  079A               	addwf	(___flmul@prod+3)^(0+384),f
  9421  0521                     l4222:	
  9422  0521  1C1A               	btfss	(___flmul@prod+3)^(0+384),0
  9423  0522  2D24               	goto	u6141
  9424  0523  2D25               	goto	u6140
  9425  0524                     u6141:	
  9426  0524  2D60               	goto	l4228
  9427  0525                     u6140:	
  9428  0525                     l4224:	
  9429  0525  0817               	movf	___flmul@prod^(0+384),w
  9430  0526  1683               	bsf	3,5	;RP0=1, select bank1
  9431  0527  1303               	bcf	3,6	;RP1=0, select bank1
  9432  0528  00DE               	movwf	??___flmul^(0+128)
  9433  0529  1683               	bsf	3,5	;RP0=1, select bank3
  9434  052A  1703               	bsf	3,6	;RP1=1, select bank3
  9435  052B  0818               	movf	(___flmul@prod+1)^(0+384),w
  9436  052C  1683               	bsf	3,5	;RP0=1, select bank1
  9437  052D  1303               	bcf	3,6	;RP1=0, select bank1
  9438  052E  00DF               	movwf	(??___flmul^(0+128)+1)
  9439  052F  1683               	bsf	3,5	;RP0=1, select bank3
  9440  0530  1703               	bsf	3,6	;RP1=1, select bank3
  9441  0531  0819               	movf	(___flmul@prod+2)^(0+384),w
  9442  0532  1683               	bsf	3,5	;RP0=1, select bank1
  9443  0533  1303               	bcf	3,6	;RP1=0, select bank1
  9444  0534  00E0               	movwf	(??___flmul^(0+128)+2)
  9445  0535  1683               	bsf	3,5	;RP0=1, select bank3
  9446  0536  1703               	bsf	3,6	;RP1=1, select bank3
  9447  0537  081A               	movf	(___flmul@prod+3)^(0+384),w
  9448  0538  1683               	bsf	3,5	;RP0=1, select bank1
  9449  0539  1303               	bcf	3,6	;RP1=0, select bank1
  9450  053A  00E1               	movwf	(??___flmul^(0+128)+3)
  9451  053B  3001               	movlw	1
  9452  053C  00E2               	movwf	(??___flmul+4)^(0+128)
  9453  053D                     u6155:	
  9454  053D  0D61               	rlf	(??___flmul^(0+128)+3),w
  9455  053E  0CE1               	rrf	(??___flmul^(0+128)+3),f
  9456  053F  0CE0               	rrf	(??___flmul^(0+128)+2),f
  9457  0540  0CDF               	rrf	(??___flmul^(0+128)+1),f
  9458  0541  0CDE               	rrf	??___flmul^(0+128),f
  9459  0542                     u6150:	
  9460  0542  0BE2               	decfsz	(??___flmul+4)^(0+128),f
  9461  0543  2D3D               	goto	u6155
  9462  0544  0861               	movf	(??___flmul+3)^(0+128),w
  9463  0545  1683               	bsf	3,5	;RP0=1, select bank3
  9464  0546  1703               	bsf	3,6	;RP1=1, select bank3
  9465  0547  009A               	movwf	(___flmul@prod+3)^(0+384)
  9466  0548  1683               	bsf	3,5	;RP0=1, select bank1
  9467  0549  1303               	bcf	3,6	;RP1=0, select bank1
  9468  054A  0860               	movf	(??___flmul+2)^(0+128),w
  9469  054B  1683               	bsf	3,5	;RP0=1, select bank3
  9470  054C  1703               	bsf	3,6	;RP1=1, select bank3
  9471  054D  0099               	movwf	(___flmul@prod+2)^(0+384)
  9472  054E  1683               	bsf	3,5	;RP0=1, select bank1
  9473  054F  1303               	bcf	3,6	;RP1=0, select bank1
  9474  0550  085F               	movf	(??___flmul+1)^(0+128),w
  9475  0551  1683               	bsf	3,5	;RP0=1, select bank3
  9476  0552  1703               	bsf	3,6	;RP1=1, select bank3
  9477  0553  0098               	movwf	(___flmul@prod+1)^(0+384)
  9478  0554  1683               	bsf	3,5	;RP0=1, select bank1
  9479  0555  1303               	bcf	3,6	;RP1=0, select bank1
  9480  0556  085E               	movf	??___flmul^(0+128),w
  9481  0557  1683               	bsf	3,5	;RP0=1, select bank3
  9482  0558  1703               	bsf	3,6	;RP1=1, select bank3
  9483  0559  0097               	movwf	___flmul@prod^(0+384)
  9484  055A                     l4226:	
  9485  055A  3001               	movlw	1
  9486  055B  079B               	addwf	___flmul@temp^(0+384),f
  9487  055C  1803               	skipnc
  9488  055D  0A9C               	incf	(___flmul@temp+1)^(0+384),f
  9489  055E  3000               	movlw	0
  9490  055F  079C               	addwf	(___flmul@temp+1)^(0+384),f
  9491  0560                     l4228:	
  9492  0560  081C               	movf	(___flmul@temp+1)^(0+384),w
  9493  0561  3A80               	xorlw	128
  9494  0562  00FF               	movwf	btemp+1
  9495  0563  3080               	movlw	128
  9496  0564  027F               	subwf	btemp+1,w
  9497  0565  1D03               	skipz
  9498  0566  2D69               	goto	u6165
  9499  0567  30FF               	movlw	255
  9500  0568  021B               	subwf	___flmul@temp^(0+384),w
  9501  0569                     u6165:	
  9502  0569  1C03               	skipc
  9503  056A  2D6C               	goto	u6161
  9504  056B  2D6D               	goto	u6160
  9505  056C                     u6161:	
  9506  056C  2D78               	goto	l4232
  9507  056D                     u6160:	
  9508  056D                     l4230:	
  9509  056D  307F               	movlw	127
  9510  056E  1683               	bsf	3,5	;RP0=1, select bank3
  9511  056F  1703               	bsf	3,6	;RP1=1, select bank3
  9512  0570  009A               	movwf	(___flmul@prod+3)^(0+384)
  9513  0571  3080               	movlw	128
  9514  0572  0099               	movwf	(___flmul@prod+2)^(0+384)
  9515  0573  3000               	movlw	0
  9516  0574  0098               	movwf	(___flmul@prod+1)^(0+384)
  9517  0575  3000               	movlw	0
  9518  0576  0097               	movwf	___flmul@prod^(0+384)
  9519  0577  2DB5               	goto	l899
  9520  0578                     l4232:	
  9521  0578  1683               	bsf	3,5	;RP0=1, select bank3
  9522  0579  1703               	bsf	3,6	;RP1=1, select bank3
  9523  057A  081C               	movf	(___flmul@temp+1)^(0+384),w
  9524  057B  3A80               	xorlw	128
  9525  057C  00FF               	movwf	btemp+1
  9526  057D  3080               	movlw	128
  9527  057E  027F               	subwf	btemp+1,w
  9528  057F  1D03               	skipz
  9529  0580  2D83               	goto	u6175
  9530  0581  3001               	movlw	1
  9531  0582  021B               	subwf	___flmul@temp^(0+384),w
  9532  0583                     u6175:	
  9533  0583  1803               	skipnc
  9534  0584  2D86               	goto	u6171
  9535  0585  2D87               	goto	u6170
  9536  0586                     u6171:	
  9537  0586  2D93               	goto	l4238
  9538  0587                     u6170:	
  9539  0587                     l4234:	
  9540  0587  3000               	movlw	0
  9541  0588  1683               	bsf	3,5	;RP0=1, select bank3
  9542  0589  1703               	bsf	3,6	;RP1=1, select bank3
  9543  058A  009A               	movwf	(___flmul@prod+3)^(0+384)
  9544  058B  3000               	movlw	0
  9545  058C  0099               	movwf	(___flmul@prod+2)^(0+384)
  9546  058D  3000               	movlw	0
  9547  058E  0098               	movwf	(___flmul@prod+1)^(0+384)
  9548  058F  3000               	movlw	0
  9549  0590  0097               	movwf	___flmul@prod^(0+384)
  9550  0591                     l4236:	
  9551  0591  0190               	clrf	___flmul@sign^(0+384)
  9552  0592  2DB5               	goto	l899
  9553  0593                     l4238:	
  9554  0593  1683               	bsf	3,5	;RP0=1, select bank3
  9555  0594  1703               	bsf	3,6	;RP1=1, select bank3
  9556  0595  081B               	movf	___flmul@temp^(0+384),w
  9557  0596  1683               	bsf	3,5	;RP0=1, select bank1
  9558  0597  1303               	bcf	3,6	;RP1=0, select bank1
  9559  0598  00DE               	movwf	??___flmul^(0+128)
  9560  0599  085E               	movf	??___flmul^(0+128),w
  9561  059A  1683               	bsf	3,5	;RP0=1, select bank3
  9562  059B  1703               	bsf	3,6	;RP1=1, select bank3
  9563  059C  0096               	movwf	___flmul@bexp^(0+384)
  9564  059D  30FF               	movlw	255
  9565  059E  0597               	andwf	___flmul@prod^(0+384),f
  9566  059F  30FF               	movlw	255
  9567  05A0  0598               	andwf	(___flmul@prod+1)^(0+384),f
  9568  05A1  307F               	movlw	127
  9569  05A2  0599               	andwf	(___flmul@prod+2)^(0+384),f
  9570  05A3  3000               	movlw	0
  9571  05A4  059A               	andwf	(___flmul@prod+3)^(0+384),f
  9572  05A5                     l4240:	
  9573  05A5  1C16               	btfss	___flmul@bexp^(0+384),0
  9574  05A6  2DA8               	goto	u6181
  9575  05A7  2DA9               	goto	u6180
  9576  05A8                     u6181:	
  9577  05A8  2DAA               	goto	l4244
  9578  05A9                     u6180:	
  9579  05A9                     l4242:	
  9580  05A9  1799               	bsf	(___flmul@prod^(0+384)+2),7
  9581  05AA                     l4244:	
  9582  05AA  0816               	movf	___flmul@bexp^(0+384),w
  9583  05AB  1683               	bsf	3,5	;RP0=1, select bank1
  9584  05AC  1303               	bcf	3,6	;RP1=0, select bank1
  9585  05AD  00DE               	movwf	??___flmul^(0+128)
  9586  05AE  1003               	clrc
  9587  05AF  0C5E               	rrf	??___flmul^(0+128),w
  9588  05B0  00DF               	movwf	(??___flmul+1)^(0+128)
  9589  05B1  085F               	movf	(??___flmul+1)^(0+128),w
  9590  05B2  1683               	bsf	3,5	;RP0=1, select bank3
  9591  05B3  1703               	bsf	3,6	;RP1=1, select bank3
  9592  05B4  009A               	movwf	(___flmul@prod^(0+384)+3)
  9593  05B5                     l899:	
  9594  05B5  0810               	movf	___flmul@sign^(0+384),w
  9595  05B6  1683               	bsf	3,5	;RP0=1, select bank1
  9596  05B7  1303               	bcf	3,6	;RP1=0, select bank1
  9597  05B8  00DE               	movwf	??___flmul^(0+128)
  9598  05B9  085E               	movf	??___flmul^(0+128),w
  9599  05BA  1683               	bsf	3,5	;RP0=1, select bank3
  9600  05BB  1703               	bsf	3,6	;RP1=1, select bank3
  9601  05BC  049A               	iorwf	(___flmul@prod^(0+384)+3),f
  9602  05BD                     l4246:	
  9603  05BD  081A               	movf	(___flmul@prod+3)^(0+384),w
  9604  05BE  1683               	bsf	3,5	;RP0=1, select bank1
  9605  05BF  1303               	bcf	3,6	;RP1=0, select bank1
  9606  05C0  00D9               	movwf	(?___flmul+3)^(0+128)
  9607  05C1  1683               	bsf	3,5	;RP0=1, select bank3
  9608  05C2  1703               	bsf	3,6	;RP1=1, select bank3
  9609  05C3  0819               	movf	(___flmul@prod+2)^(0+384),w
  9610  05C4  1683               	bsf	3,5	;RP0=1, select bank1
  9611  05C5  1303               	bcf	3,6	;RP1=0, select bank1
  9612  05C6  00D8               	movwf	(?___flmul+2)^(0+128)
  9613  05C7  1683               	bsf	3,5	;RP0=1, select bank3
  9614  05C8  1703               	bsf	3,6	;RP1=1, select bank3
  9615  05C9  0818               	movf	(___flmul@prod+1)^(0+384),w
  9616  05CA  1683               	bsf	3,5	;RP0=1, select bank1
  9617  05CB  1303               	bcf	3,6	;RP1=0, select bank1
  9618  05CC  00D7               	movwf	(?___flmul+1)^(0+128)
  9619  05CD  1683               	bsf	3,5	;RP0=1, select bank3
  9620  05CE  1703               	bsf	3,6	;RP1=1, select bank3
  9621  05CF  0817               	movf	___flmul@prod^(0+384),w
  9622  05D0  1683               	bsf	3,5	;RP0=1, select bank1
  9623  05D1  1303               	bcf	3,6	;RP1=0, select bank1
  9624  05D2  00D6               	movwf	?___flmul^(0+128)
  9625  05D3                     l887:	
  9626  05D3  0008               	return
  9627  05D4                     __end_of___flmul:	
  9628                           
  9629                           	psect	text37
  9630  1DC4                     __ptext37:	
  9631 ;; *************** function __Umul8_16 *****************
  9632 ;; Defined at:
  9633 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8_16.c"
  9634 ;; Parameters:    Size  Location     Type
  9635 ;;  multiplier      1    wreg     unsigned char 
  9636 ;;  multiplicand    1   27[BANK0 ] unsigned char 
  9637 ;; Auto vars:     Size  Location     Type
  9638 ;;  multiplier      1    4[BANK1 ] unsigned char 
  9639 ;;  word_mpld       2    2[BANK1 ] unsigned int 
  9640 ;;  product         2    0[BANK1 ] unsigned int 
  9641 ;; Return value:  Size  Location     Type
  9642 ;;                  2   27[BANK0 ] unsigned int 
  9643 ;; Registers used:
  9644 ;;		wreg, status,2, status,0
  9645 ;; Tracked objects:
  9646 ;;		On entry : 0/0
  9647 ;;		On exit  : 0/0
  9648 ;;		Unchanged: 0/0
  9649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9650 ;;      Params:         0       2       0       0       0
  9651 ;;      Locals:         0       0       5       0       0
  9652 ;;      Temps:          0       2       0       0       0
  9653 ;;      Totals:         0       4       5       0       0
  9654 ;;Total ram usage:        9 bytes
  9655 ;; Hardware stack levels used:    1
  9656 ;; Hardware stack levels required when called:    4
  9657 ;; This function calls:
  9658 ;;		Nothing
  9659 ;; This function is called by:
  9660 ;;		___flmul
  9661 ;; This function uses a non-reentrant model
  9662 ;;
  9663                           
  9664                           
  9665                           ;psect for function __Umul8_16
  9666  1DC4                     __Umul8_16:	
  9667                           
  9668                           ;incstack = 0
  9669                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9670                           ;__Umul8_16@multiplier stored from wreg
  9671  1DC4  1683               	bsf	3,5	;RP0=1, select bank1
  9672  1DC5  1303               	bcf	3,6	;RP1=0, select bank1
  9673  1DC6  00A4               	movwf	__Umul8_16@multiplier^(0+128)
  9674  1DC7                     l3854:	
  9675  1DC7  01A0               	clrf	__Umul8_16@product^(0+128)
  9676  1DC8  01A1               	clrf	(__Umul8_16@product+1)^(0+128)
  9677  1DC9                     l3856:	
  9678  1DC9  1283               	bcf	3,5	;RP0=0, select bank0
  9679  1DCA  1303               	bcf	3,6	;RP1=0, select bank0
  9680  1DCB  083B               	movf	__Umul8_16@multiplicand,w
  9681  1DCC  00BD               	movwf	??__Umul8_16
  9682  1DCD  01BE               	clrf	??__Umul8_16+1
  9683  1DCE  083D               	movf	??__Umul8_16,w
  9684  1DCF  1683               	bsf	3,5	;RP0=1, select bank1
  9685  1DD0  1303               	bcf	3,6	;RP1=0, select bank1
  9686  1DD1  00A2               	movwf	__Umul8_16@word_mpld^(0+128)
  9687  1DD2  1283               	bcf	3,5	;RP0=0, select bank0
  9688  1DD3  1303               	bcf	3,6	;RP1=0, select bank0
  9689  1DD4  083E               	movf	??__Umul8_16+1,w
  9690  1DD5  1683               	bsf	3,5	;RP0=1, select bank1
  9691  1DD6  1303               	bcf	3,6	;RP1=0, select bank1
  9692  1DD7  00A3               	movwf	(__Umul8_16@word_mpld+1)^(0+128)
  9693  1DD8                     l3858:	
  9694  1DD8  1C24               	btfss	__Umul8_16@multiplier^(0+128),0
  9695  1DD9  2DDB               	goto	u5251
  9696  1DDA  2DDC               	goto	u5250
  9697  1DDB                     u5251:	
  9698  1DDB  2DE2               	goto	l950
  9699  1DDC                     u5250:	
  9700  1DDC                     l3860:	
  9701  1DDC  0822               	movf	__Umul8_16@word_mpld^(0+128),w
  9702  1DDD  07A0               	addwf	__Umul8_16@product^(0+128),f
  9703  1DDE  1803               	skipnc
  9704  1DDF  0AA1               	incf	(__Umul8_16@product+1)^(0+128),f
  9705  1DE0  0823               	movf	(__Umul8_16@word_mpld+1)^(0+128),w
  9706  1DE1  07A1               	addwf	(__Umul8_16@product+1)^(0+128),f
  9707  1DE2                     l950:	
  9708  1DE2  3001               	movlw	1
  9709  1DE3                     u5265:	
  9710  1DE3  1003               	clrc
  9711  1DE4  0DA2               	rlf	__Umul8_16@word_mpld^(0+128),f
  9712  1DE5  0DA3               	rlf	(__Umul8_16@word_mpld+1)^(0+128),f
  9713  1DE6  3EFF               	addlw	-1
  9714  1DE7  1D03               	skipz
  9715  1DE8  2DE3               	goto	u5265
  9716  1DE9  1003               	clrc
  9717  1DEA  0CA4               	rrf	__Umul8_16@multiplier^(0+128),f
  9718  1DEB                     l3862:	
  9719  1DEB  0824               	movf	__Umul8_16@multiplier^(0+128),w
  9720  1DEC  1D03               	btfss	3,2
  9721  1DED  2DEF               	goto	u5271
  9722  1DEE  2DF0               	goto	u5270
  9723  1DEF                     u5271:	
  9724  1DEF  2DD8               	goto	l3858
  9725  1DF0                     u5270:	
  9726  1DF0                     l3864:	
  9727  1DF0  0821               	movf	(__Umul8_16@product+1)^(0+128),w
  9728  1DF1  1283               	bcf	3,5	;RP0=0, select bank0
  9729  1DF2  1303               	bcf	3,6	;RP1=0, select bank0
  9730  1DF3  00BC               	movwf	?__Umul8_16+1
  9731  1DF4  1683               	bsf	3,5	;RP0=1, select bank1
  9732  1DF5  1303               	bcf	3,6	;RP1=0, select bank1
  9733  1DF6  0820               	movf	__Umul8_16@product^(0+128),w
  9734  1DF7  1283               	bcf	3,5	;RP0=0, select bank0
  9735  1DF8  1303               	bcf	3,6	;RP1=0, select bank0
  9736  1DF9  00BB               	movwf	?__Umul8_16
  9737  1DFA                     l952:	
  9738  1DFA  0008               	return
  9739  1DFB                     __end_of__Umul8_16:	
  9740                           
  9741                           	psect	text38
  9742  05D4                     __ptext38:	
  9743 ;; *************** function ___fldiv *****************
  9744 ;; Defined at:
  9745 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcdiv.c"
  9746 ;; Parameters:    Size  Location     Type
  9747 ;;  a               4   28[BANK1 ] unsigned int 
  9748 ;;  b               4   32[BANK1 ] unsigned int 
  9749 ;; Auto vars:     Size  Location     Type
  9750 ;;  grs             4   48[BANK1 ] unsigned long 
  9751 ;;  rem             4   41[BANK1 ] unsigned long 
  9752 ;;  new_exp         2   46[BANK1 ] int 
  9753 ;;  aexp            1   53[BANK1 ] unsigned char 
  9754 ;;  bexp            1   52[BANK1 ] unsigned char 
  9755 ;;  sign            1   45[BANK1 ] unsigned char 
  9756 ;; Return value:  Size  Location     Type
  9757 ;;                  4   28[BANK1 ] unsigned char 
  9758 ;; Registers used:
  9759 ;;		wreg, status,2, status,0, btemp+1
  9760 ;; Tracked objects:
  9761 ;;		On entry : 0/0
  9762 ;;		On exit  : 0/0
  9763 ;;		Unchanged: 0/0
  9764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9765 ;;      Params:         0       0       8       0       0
  9766 ;;      Locals:         0       0      13       0       0
  9767 ;;      Temps:          0       0       5       0       0
  9768 ;;      Totals:         0       0      26       0       0
  9769 ;;Total ram usage:       26 bytes
  9770 ;; Hardware stack levels used:    1
  9771 ;; Hardware stack levels required when called:    4
  9772 ;; This function calls:
  9773 ;;		Nothing
  9774 ;; This function is called by:
  9775 ;;		_PWM_Duty
  9776 ;;		_get_temperatura
  9777 ;; This function uses a non-reentrant model
  9778 ;;
  9779                           
  9780                           
  9781                           ;psect for function ___fldiv
  9782  05D4                     ___fldiv:	
  9783  05D4                     l3968:	
  9784                           ;incstack = 0
  9785                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  9786                           
  9787  05D4  1683               	bsf	3,5	;RP0=1, select bank1
  9788  05D5  1303               	bcf	3,6	;RP1=0, select bank1
  9789  05D6  0843               	movf	(___fldiv@b^(0+128)+3),w
  9790  05D7  3980               	andlw	128
  9791  05D8  00C4               	movwf	??___fldiv^(0+128)
  9792  05D9  0844               	movf	??___fldiv^(0+128),w
  9793  05DA  00CD               	movwf	___fldiv@sign^(0+128)
  9794  05DB                     l3970:	
  9795  05DB  0843               	movf	(___fldiv@b^(0+128)+3),w
  9796  05DC  00C4               	movwf	??___fldiv^(0+128)
  9797  05DD  0744               	addwf	??___fldiv^(0+128),w
  9798  05DE  00C5               	movwf	(??___fldiv+1)^(0+128)
  9799  05DF  0845               	movf	(??___fldiv+1)^(0+128),w
  9800  05E0  00D4               	movwf	___fldiv@bexp^(0+128)
  9801  05E1                     l3972:	
  9802  05E1  1FC2               	btfss	(___fldiv@b^(0+128)+2),7
  9803  05E2  2DE4               	goto	u5531
  9804  05E3  2DE5               	goto	u5530
  9805  05E4                     u5531:	
  9806  05E4  2DE6               	goto	l3976
  9807  05E5                     u5530:	
  9808  05E5                     l3974:	
  9809  05E5  1454               	bsf	___fldiv@bexp^(0+128),0
  9810  05E6                     l3976:	
  9811  05E6  0854               	movf	___fldiv@bexp^(0+128),w
  9812  05E7  1903               	btfsc	3,2
  9813  05E8  2DEA               	goto	u5541
  9814  05E9  2DEB               	goto	u5540
  9815  05EA                     u5541:	
  9816  05EA  2DFB               	goto	l3986
  9817  05EB                     u5540:	
  9818  05EB                     l3978:	
  9819  05EB  0A54               	incf	___fldiv@bexp^(0+128),w
  9820  05EC  1D03               	btfss	3,2
  9821  05ED  2DEF               	goto	u5551
  9822  05EE  2DF0               	goto	u5550
  9823  05EF                     u5551:	
  9824  05EF  2DF8               	goto	l3982
  9825  05F0                     u5550:	
  9826  05F0                     l3980:	
  9827  05F0  3000               	movlw	0
  9828  05F1  00C3               	movwf	(___fldiv@b+3)^(0+128)
  9829  05F2  3000               	movlw	0
  9830  05F3  00C2               	movwf	(___fldiv@b+2)^(0+128)
  9831  05F4  3000               	movlw	0
  9832  05F5  00C1               	movwf	(___fldiv@b+1)^(0+128)
  9833  05F6  3000               	movlw	0
  9834  05F7  00C0               	movwf	___fldiv@b^(0+128)
  9835  05F8                     l3982:	
  9836  05F8  17C2               	bsf	(___fldiv@b^(0+128)+2),7
  9837  05F9                     l3984:	
  9838  05F9  01C3               	clrf	(___fldiv@b^(0+128)+3)
  9839  05FA  2E03               	goto	l3988
  9840  05FB                     l3986:	
  9841  05FB  3000               	movlw	0
  9842  05FC  00C3               	movwf	(___fldiv@b+3)^(0+128)
  9843  05FD  3000               	movlw	0
  9844  05FE  00C2               	movwf	(___fldiv@b+2)^(0+128)
  9845  05FF  3000               	movlw	0
  9846  0600  00C1               	movwf	(___fldiv@b+1)^(0+128)
  9847  0601  3000               	movlw	0
  9848  0602  00C0               	movwf	___fldiv@b^(0+128)
  9849  0603                     l3988:	
  9850  0603  083F               	movf	(___fldiv@a^(0+128)+3),w
  9851  0604  3980               	andlw	128
  9852  0605  00C4               	movwf	??___fldiv^(0+128)
  9853  0606  0844               	movf	??___fldiv^(0+128),w
  9854  0607  06CD               	xorwf	___fldiv@sign^(0+128),f
  9855  0608                     l3990:	
  9856  0608  083F               	movf	(___fldiv@a^(0+128)+3),w
  9857  0609  00C4               	movwf	??___fldiv^(0+128)
  9858  060A  0744               	addwf	??___fldiv^(0+128),w
  9859  060B  00C5               	movwf	(??___fldiv+1)^(0+128)
  9860  060C  0845               	movf	(??___fldiv+1)^(0+128),w
  9861  060D  00D5               	movwf	___fldiv@aexp^(0+128)
  9862  060E                     l3992:	
  9863  060E  1FBE               	btfss	(___fldiv@a^(0+128)+2),7
  9864  060F  2E11               	goto	u5561
  9865  0610  2E12               	goto	u5560
  9866  0611                     u5561:	
  9867  0611  2E13               	goto	l3996
  9868  0612                     u5560:	
  9869  0612                     l3994:	
  9870  0612  1455               	bsf	___fldiv@aexp^(0+128),0
  9871  0613                     l3996:	
  9872  0613  0855               	movf	___fldiv@aexp^(0+128),w
  9873  0614  1903               	btfsc	3,2
  9874  0615  2E17               	goto	u5571
  9875  0616  2E18               	goto	u5570
  9876  0617                     u5571:	
  9877  0617  2E28               	goto	l4006
  9878  0618                     u5570:	
  9879  0618                     l3998:	
  9880  0618  0A55               	incf	___fldiv@aexp^(0+128),w
  9881  0619  1D03               	btfss	3,2
  9882  061A  2E1C               	goto	u5581
  9883  061B  2E1D               	goto	u5580
  9884  061C                     u5581:	
  9885  061C  2E25               	goto	l4002
  9886  061D                     u5580:	
  9887  061D                     l4000:	
  9888  061D  3000               	movlw	0
  9889  061E  00BF               	movwf	(___fldiv@a+3)^(0+128)
  9890  061F  3000               	movlw	0
  9891  0620  00BE               	movwf	(___fldiv@a+2)^(0+128)
  9892  0621  3000               	movlw	0
  9893  0622  00BD               	movwf	(___fldiv@a+1)^(0+128)
  9894  0623  3000               	movlw	0
  9895  0624  00BC               	movwf	___fldiv@a^(0+128)
  9896  0625                     l4002:	
  9897  0625  17BE               	bsf	(___fldiv@a^(0+128)+2),7
  9898  0626                     l4004:	
  9899  0626  01BF               	clrf	(___fldiv@a^(0+128)+3)
  9900  0627  2E30               	goto	l847
  9901  0628                     l4006:	
  9902  0628  3000               	movlw	0
  9903  0629  00BF               	movwf	(___fldiv@a+3)^(0+128)
  9904  062A  3000               	movlw	0
  9905  062B  00BE               	movwf	(___fldiv@a+2)^(0+128)
  9906  062C  3000               	movlw	0
  9907  062D  00BD               	movwf	(___fldiv@a+1)^(0+128)
  9908  062E  3000               	movlw	0
  9909  062F  00BC               	movwf	___fldiv@a^(0+128)
  9910  0630                     l847:	
  9911  0630  083F               	movf	(___fldiv@a+3)^(0+128),w
  9912  0631  043E               	iorwf	(___fldiv@a+2)^(0+128),w
  9913  0632  043D               	iorwf	(___fldiv@a+1)^(0+128),w
  9914  0633  043C               	iorwf	___fldiv@a^(0+128),w
  9915  0634  1D03               	skipz
  9916  0635  2E37               	goto	u5591
  9917  0636  2E38               	goto	u5590
  9918  0637                     u5591:	
  9919  0637  2E51               	goto	l4016
  9920  0638                     u5590:	
  9921  0638                     l4008:	
  9922  0638  3000               	movlw	0
  9923  0639  00C3               	movwf	(___fldiv@b+3)^(0+128)
  9924  063A  3000               	movlw	0
  9925  063B  00C2               	movwf	(___fldiv@b+2)^(0+128)
  9926  063C  3000               	movlw	0
  9927  063D  00C1               	movwf	(___fldiv@b+1)^(0+128)
  9928  063E  3000               	movlw	0
  9929  063F  00C0               	movwf	___fldiv@b^(0+128)
  9930  0640  3080               	movlw	128
  9931  0641  04C2               	iorwf	(___fldiv@b^(0+128)+2),f
  9932  0642  307F               	movlw	127
  9933  0643  04C3               	iorwf	((___fldiv@b+1)^(0+128)+2),f
  9934  0644                     l4010:	
  9935  0644  084D               	movf	___fldiv@sign^(0+128),w
  9936  0645  00C4               	movwf	??___fldiv^(0+128)
  9937  0646  0844               	movf	??___fldiv^(0+128),w
  9938  0647  04C3               	iorwf	(___fldiv@b^(0+128)+3),f
  9939  0648                     l4012:	
  9940  0648  0843               	movf	(___fldiv@b+3)^(0+128),w
  9941  0649  00BF               	movwf	(?___fldiv+3)^(0+128)
  9942  064A  0842               	movf	(___fldiv@b+2)^(0+128),w
  9943  064B  00BE               	movwf	(?___fldiv+2)^(0+128)
  9944  064C  0841               	movf	(___fldiv@b+1)^(0+128),w
  9945  064D  00BD               	movwf	(?___fldiv+1)^(0+128)
  9946  064E  0840               	movf	___fldiv@b^(0+128),w
  9947  064F  00BC               	movwf	?___fldiv^(0+128)
  9948  0650  2FB0               	goto	l849
  9949  0651                     l4016:	
  9950  0651  0854               	movf	___fldiv@bexp^(0+128),w
  9951  0652  1D03               	btfss	3,2
  9952  0653  2E55               	goto	u5601
  9953  0654  2E56               	goto	u5600
  9954  0655                     u5601:	
  9955  0655  2E5F               	goto	l4022
  9956  0656                     u5600:	
  9957  0656                     l4018:	
  9958  0656  3000               	movlw	0
  9959  0657  00BF               	movwf	(?___fldiv+3)^(0+128)
  9960  0658  3000               	movlw	0
  9961  0659  00BE               	movwf	(?___fldiv+2)^(0+128)
  9962  065A  3000               	movlw	0
  9963  065B  00BD               	movwf	(?___fldiv+1)^(0+128)
  9964  065C  3000               	movlw	0
  9965  065D  00BC               	movwf	?___fldiv^(0+128)
  9966  065E  2FB0               	goto	l849
  9967  065F                     l4022:	
  9968  065F  0854               	movf	___fldiv@bexp^(0+128),w
  9969  0660  00C4               	movwf	??___fldiv^(0+128)
  9970  0661  01C5               	clrf	(??___fldiv^(0+128)+1)
  9971  0662  0845               	movf	(??___fldiv+1)^(0+128),w
  9972  0663  00C7               	movwf	((??___fldiv+2)^(0+128)+1)
  9973  0664  0855               	movf	___fldiv@aexp^(0+128),w
  9974  0665  0244               	subwf	??___fldiv^(0+128),w
  9975  0666  00C6               	movwf	(??___fldiv+2)^(0+128)
  9976  0667  1C03               	skipc
  9977  0668  03C7               	decf	((??___fldiv+2)^(0+128)+1),f
  9978  0669  0846               	movf	(??___fldiv+2)^(0+128),w
  9979  066A  3E7F               	addlw	127
  9980  066B  00CE               	movwf	___fldiv@new_exp^(0+128)
  9981  066C  0847               	movf	(??___fldiv+3)^(0+128),w
  9982  066D  1803               	skipnc
  9983  066E  3E01               	addlw	1
  9984  066F  3E00               	addlw	0
  9985  0670  00CF               	movwf	(___fldiv@new_exp+1)^(0+128)
  9986  0671                     l4024:	
  9987  0671  0843               	movf	(___fldiv@b+3)^(0+128),w
  9988  0672  00CC               	movwf	(___fldiv@rem+3)^(0+128)
  9989  0673  0842               	movf	(___fldiv@b+2)^(0+128),w
  9990  0674  00CB               	movwf	(___fldiv@rem+2)^(0+128)
  9991  0675  0841               	movf	(___fldiv@b+1)^(0+128),w
  9992  0676  00CA               	movwf	(___fldiv@rem+1)^(0+128)
  9993  0677  0840               	movf	___fldiv@b^(0+128),w
  9994  0678  00C9               	movwf	___fldiv@rem^(0+128)
  9995  0679                     l4026:	
  9996  0679  3000               	movlw	0
  9997  067A  00C3               	movwf	(___fldiv@b+3)^(0+128)
  9998  067B  3000               	movlw	0
  9999  067C  00C2               	movwf	(___fldiv@b+2)^(0+128)
 10000  067D  3000               	movlw	0
 10001  067E  00C1               	movwf	(___fldiv@b+1)^(0+128)
 10002  067F  3000               	movlw	0
 10003  0680  00C0               	movwf	___fldiv@b^(0+128)
 10004  0681                     l4028:	
 10005  0681  3000               	movlw	0
 10006  0682  00D3               	movwf	(___fldiv@grs+3)^(0+128)
 10007  0683  3000               	movlw	0
 10008  0684  00D2               	movwf	(___fldiv@grs+2)^(0+128)
 10009  0685  3000               	movlw	0
 10010  0686  00D1               	movwf	(___fldiv@grs+1)^(0+128)
 10011  0687  3000               	movlw	0
 10012  0688  00D0               	movwf	___fldiv@grs^(0+128)
 10013  0689                     l4030:	
 10014  0689  01D5               	clrf	___fldiv@aexp^(0+128)
 10015  068A  2ED5               	goto	l4050
 10016  068B                     l4032:	
 10017  068B  0855               	movf	___fldiv@aexp^(0+128),w
 10018  068C  1903               	btfsc	3,2
 10019  068D  2E8F               	goto	u5611
 10020  068E  2E90               	goto	u5610
 10021  068F                     u5611:	
 10022  068F  2EB0               	goto	l4042
 10023  0690                     u5610:	
 10024  0690                     l4034:	
 10025  0690  3001               	movlw	1
 10026  0691  00C4               	movwf	??___fldiv^(0+128)
 10027  0692                     u5625:	
 10028  0692  1003               	clrc
 10029  0693  0DC9               	rlf	___fldiv@rem^(0+128),f
 10030  0694  0DCA               	rlf	(___fldiv@rem+1)^(0+128),f
 10031  0695  0DCB               	rlf	(___fldiv@rem+2)^(0+128),f
 10032  0696  0DCC               	rlf	(___fldiv@rem+3)^(0+128),f
 10033  0697  0BC4               	decfsz	??___fldiv^(0+128),f
 10034  0698  2E92               	goto	u5625
 10035  0699  3001               	movlw	1
 10036  069A  00C4               	movwf	??___fldiv^(0+128)
 10037  069B                     u5635:	
 10038  069B  1003               	clrc
 10039  069C  0DC0               	rlf	___fldiv@b^(0+128),f
 10040  069D  0DC1               	rlf	(___fldiv@b+1)^(0+128),f
 10041  069E  0DC2               	rlf	(___fldiv@b+2)^(0+128),f
 10042  069F  0DC3               	rlf	(___fldiv@b+3)^(0+128),f
 10043  06A0  0BC4               	decfsz	??___fldiv^(0+128),f
 10044  06A1  2E9B               	goto	u5635
 10045  06A2                     l4036:	
 10046  06A2  1FD3               	btfss	(___fldiv@grs+3)^(0+128),7
 10047  06A3  2EA5               	goto	u5641
 10048  06A4  2EA6               	goto	u5640
 10049  06A5                     u5641:	
 10050  06A5  2EA7               	goto	l4040
 10051  06A6                     u5640:	
 10052  06A6                     l4038:	
 10053  06A6  1440               	bsf	___fldiv@b^(0+128),0
 10054  06A7                     l4040:	
 10055  06A7  3001               	movlw	1
 10056  06A8  00C4               	movwf	??___fldiv^(0+128)
 10057  06A9                     u5655:	
 10058  06A9  1003               	clrc
 10059  06AA  0DD0               	rlf	___fldiv@grs^(0+128),f
 10060  06AB  0DD1               	rlf	(___fldiv@grs+1)^(0+128),f
 10061  06AC  0DD2               	rlf	(___fldiv@grs+2)^(0+128),f
 10062  06AD  0DD3               	rlf	(___fldiv@grs+3)^(0+128),f
 10063  06AE  0BC4               	decfsz	??___fldiv^(0+128),f
 10064  06AF  2EA9               	goto	u5655
 10065  06B0                     l4042:	
 10066  06B0  083F               	movf	(___fldiv@a+3)^(0+128),w
 10067  06B1  024C               	subwf	(___fldiv@rem+3)^(0+128),w
 10068  06B2  1D03               	skipz
 10069  06B3  2EBE               	goto	u5665
 10070  06B4  083E               	movf	(___fldiv@a+2)^(0+128),w
 10071  06B5  024B               	subwf	(___fldiv@rem+2)^(0+128),w
 10072  06B6  1D03               	skipz
 10073  06B7  2EBE               	goto	u5665
 10074  06B8  083D               	movf	(___fldiv@a+1)^(0+128),w
 10075  06B9  024A               	subwf	(___fldiv@rem+1)^(0+128),w
 10076  06BA  1D03               	skipz
 10077  06BB  2EBE               	goto	u5665
 10078  06BC  083C               	movf	___fldiv@a^(0+128),w
 10079  06BD  0249               	subwf	___fldiv@rem^(0+128),w
 10080  06BE                     u5665:	
 10081  06BE  1C03               	skipc
 10082  06BF  2EC1               	goto	u5661
 10083  06C0  2EC2               	goto	u5660
 10084  06C1                     u5661:	
 10085  06C1  2ED1               	goto	l4048
 10086  06C2                     u5660:	
 10087  06C2                     l4044:	
 10088  06C2  1753               	bsf	(___fldiv@grs^(0+128)+3),6
 10089  06C3                     l4046:	
 10090  06C3  083C               	movf	___fldiv@a^(0+128),w
 10091  06C4  02C9               	subwf	___fldiv@rem^(0+128),f
 10092  06C5  083D               	movf	(___fldiv@a+1)^(0+128),w
 10093  06C6  1C03               	skipc
 10094  06C7  0F3D               	incfsz	(___fldiv@a+1)^(0+128),w
 10095  06C8  02CA               	subwf	(___fldiv@rem+1)^(0+128),f
 10096  06C9  083E               	movf	(___fldiv@a+2)^(0+128),w
 10097  06CA  1C03               	skipc
 10098  06CB  0F3E               	incfsz	(___fldiv@a+2)^(0+128),w
 10099  06CC  02CB               	subwf	(___fldiv@rem+2)^(0+128),f
 10100  06CD  083F               	movf	(___fldiv@a+3)^(0+128),w
 10101  06CE  1C03               	skipc
 10102  06CF  0F3F               	incfsz	(___fldiv@a+3)^(0+128),w
 10103  06D0  02CC               	subwf	(___fldiv@rem+3)^(0+128),f
 10104  06D1                     l4048:	
 10105  06D1  3001               	movlw	1
 10106  06D2  00C4               	movwf	??___fldiv^(0+128)
 10107  06D3  0844               	movf	??___fldiv^(0+128),w
 10108  06D4  07D5               	addwf	___fldiv@aexp^(0+128),f
 10109  06D5                     l4050:	
 10110  06D5  301A               	movlw	26
 10111  06D6  0255               	subwf	___fldiv@aexp^(0+128),w
 10112  06D7  1C03               	skipc
 10113  06D8  2EDA               	goto	u5671
 10114  06D9  2EDB               	goto	u5670
 10115  06DA                     u5671:	
 10116  06DA  2E8B               	goto	l4032
 10117  06DB                     u5670:	
 10118  06DB                     l4052:	
 10119  06DB  084C               	movf	(___fldiv@rem+3)^(0+128),w
 10120  06DC  044B               	iorwf	(___fldiv@rem+2)^(0+128),w
 10121  06DD  044A               	iorwf	(___fldiv@rem+1)^(0+128),w
 10122  06DE  0449               	iorwf	___fldiv@rem^(0+128),w
 10123  06DF  1903               	skipnz
 10124  06E0  2EE2               	goto	u5681
 10125  06E1  2EE3               	goto	u5680
 10126  06E2                     u5681:	
 10127  06E2  2F02               	goto	l4066
 10128  06E3                     u5680:	
 10129  06E3                     l4054:	
 10130  06E3  1450               	bsf	___fldiv@grs^(0+128),0
 10131  06E4  2F02               	goto	l4066
 10132  06E5                     l4056:	
 10133  06E5  3001               	movlw	1
 10134  06E6  00C4               	movwf	??___fldiv^(0+128)
 10135  06E7                     u5695:	
 10136  06E7  1003               	clrc
 10137  06E8  0DC0               	rlf	___fldiv@b^(0+128),f
 10138  06E9  0DC1               	rlf	(___fldiv@b+1)^(0+128),f
 10139  06EA  0DC2               	rlf	(___fldiv@b+2)^(0+128),f
 10140  06EB  0DC3               	rlf	(___fldiv@b+3)^(0+128),f
 10141  06EC  0BC4               	decfsz	??___fldiv^(0+128),f
 10142  06ED  2EE7               	goto	u5695
 10143  06EE                     l4058:	
 10144  06EE  1FD3               	btfss	(___fldiv@grs+3)^(0+128),7
 10145  06EF  2EF1               	goto	u5701
 10146  06F0  2EF2               	goto	u5700
 10147  06F1                     u5701:	
 10148  06F1  2EF3               	goto	l4062
 10149  06F2                     u5700:	
 10150  06F2                     l4060:	
 10151  06F2  1440               	bsf	___fldiv@b^(0+128),0
 10152  06F3                     l4062:	
 10153  06F3  3001               	movlw	1
 10154  06F4  00C4               	movwf	??___fldiv^(0+128)
 10155  06F5                     u5715:	
 10156  06F5  1003               	clrc
 10157  06F6  0DD0               	rlf	___fldiv@grs^(0+128),f
 10158  06F7  0DD1               	rlf	(___fldiv@grs+1)^(0+128),f
 10159  06F8  0DD2               	rlf	(___fldiv@grs+2)^(0+128),f
 10160  06F9  0DD3               	rlf	(___fldiv@grs+3)^(0+128),f
 10161  06FA  0BC4               	decfsz	??___fldiv^(0+128),f
 10162  06FB  2EF5               	goto	u5715
 10163  06FC                     l4064:	
 10164  06FC  30FF               	movlw	255
 10165  06FD  07CE               	addwf	___fldiv@new_exp^(0+128),f
 10166  06FE  1803               	skipnc
 10167  06FF  0ACF               	incf	(___fldiv@new_exp+1)^(0+128),f
 10168  0700  30FF               	movlw	255
 10169  0701  07CF               	addwf	(___fldiv@new_exp+1)^(0+128),f
 10170  0702                     l4066:	
 10171  0702  1FC2               	btfss	(___fldiv@b+2)^(0+128),7
 10172  0703  2F05               	goto	u5721
 10173  0704  2F06               	goto	u5720
 10174  0705                     u5721:	
 10175  0705  2EE5               	goto	l4056
 10176  0706                     u5720:	
 10177  0706                     l4068:	
 10178  0706  01D5               	clrf	___fldiv@aexp^(0+128)
 10179  0707                     l4070:	
 10180  0707  1FD3               	btfss	(___fldiv@grs+3)^(0+128),7
 10181  0708  2F0A               	goto	u5731
 10182  0709  2F0B               	goto	u5730
 10183  070A                     u5731:	
 10184  070A  2F27               	goto	l4078
 10185  070B                     u5730:	
 10186  070B                     l4072:	
 10187  070B  30FF               	movlw	255
 10188  070C  0550               	andwf	___fldiv@grs^(0+128),w
 10189  070D  00C4               	movwf	??___fldiv^(0+128)
 10190  070E  30FF               	movlw	255
 10191  070F  0551               	andwf	(___fldiv@grs+1)^(0+128),w
 10192  0710  00C5               	movwf	(??___fldiv^(0+128)+1)
 10193  0711  30FF               	movlw	255
 10194  0712  0552               	andwf	(___fldiv@grs+2)^(0+128),w
 10195  0713  00C6               	movwf	(??___fldiv^(0+128)+2)
 10196  0714  307F               	movlw	127
 10197  0715  0553               	andwf	(___fldiv@grs+3)^(0+128),w
 10198  0716  00C7               	movwf	(??___fldiv^(0+128)+3)
 10199  0717  0847               	movf	(??___fldiv+3)^(0+128),w
 10200  0718  0446               	iorwf	(??___fldiv+2)^(0+128),w
 10201  0719  0445               	iorwf	(??___fldiv+1)^(0+128),w
 10202  071A  0444               	iorwf	??___fldiv^(0+128),w
 10203  071B  1903               	skipnz
 10204  071C  2F1E               	goto	u5741
 10205  071D  2F1F               	goto	u5740
 10206  071E                     u5741:	
 10207  071E  2F22               	goto	l863
 10208  071F                     u5740:	
 10209  071F                     l4074:	
 10210  071F  01D5               	clrf	___fldiv@aexp^(0+128)
 10211  0720  0AD5               	incf	___fldiv@aexp^(0+128),f
 10212  0721  2F27               	goto	l4078
 10213  0722                     l863:	
 10214  0722  1C40               	btfss	___fldiv@b^(0+128),0
 10215  0723  2F25               	goto	u5751
 10216  0724  2F26               	goto	u5750
 10217  0725                     u5751:	
 10218  0725  2F27               	goto	l4078
 10219  0726                     u5750:	
 10220  0726  2F1F               	goto	l4074
 10221  0727                     l4078:	
 10222  0727  0855               	movf	___fldiv@aexp^(0+128),w
 10223  0728  1903               	btfsc	3,2
 10224  0729  2F2B               	goto	u5761
 10225  072A  2F2C               	goto	u5760
 10226  072B                     u5761:	
 10227  072B  2F5D               	goto	l4088
 10228  072C                     u5760:	
 10229  072C                     l4080:	
 10230  072C  3001               	movlw	1
 10231  072D  07C0               	addwf	___fldiv@b^(0+128),f
 10232  072E  3000               	movlw	0
 10233  072F  1803               	skipnc
 10234  0730  3001               	movlw	1
 10235  0731  07C1               	addwf	(___fldiv@b+1)^(0+128),f
 10236  0732  3000               	movlw	0
 10237  0733  1803               	skipnc
 10238  0734  3001               	movlw	1
 10239  0735  07C2               	addwf	(___fldiv@b+2)^(0+128),f
 10240  0736  3000               	movlw	0
 10241  0737  1803               	skipnc
 10242  0738  3001               	movlw	1
 10243  0739  07C3               	addwf	(___fldiv@b+3)^(0+128),f
 10244  073A                     l4082:	
 10245  073A  1C43               	btfss	(___fldiv@b+3)^(0+128),0
 10246  073B  2F3D               	goto	u5771
 10247  073C  2F3E               	goto	u5770
 10248  073D                     u5771:	
 10249  073D  2F5D               	goto	l4088
 10250  073E                     u5770:	
 10251  073E                     l4084:	
 10252  073E  0840               	movf	___fldiv@b^(0+128),w
 10253  073F  00C4               	movwf	??___fldiv^(0+128)
 10254  0740  0841               	movf	(___fldiv@b+1)^(0+128),w
 10255  0741  00C5               	movwf	(??___fldiv^(0+128)+1)
 10256  0742  0842               	movf	(___fldiv@b+2)^(0+128),w
 10257  0743  00C6               	movwf	(??___fldiv^(0+128)+2)
 10258  0744  0843               	movf	(___fldiv@b+3)^(0+128),w
 10259  0745  00C7               	movwf	(??___fldiv^(0+128)+3)
 10260  0746  3001               	movlw	1
 10261  0747  00C8               	movwf	(??___fldiv+4)^(0+128)
 10262  0748                     u5785:	
 10263  0748  0D47               	rlf	(??___fldiv^(0+128)+3),w
 10264  0749  0CC7               	rrf	(??___fldiv^(0+128)+3),f
 10265  074A  0CC6               	rrf	(??___fldiv^(0+128)+2),f
 10266  074B  0CC5               	rrf	(??___fldiv^(0+128)+1),f
 10267  074C  0CC4               	rrf	??___fldiv^(0+128),f
 10268  074D                     u5780:	
 10269  074D  0BC8               	decfsz	(??___fldiv+4)^(0+128),f
 10270  074E  2F48               	goto	u5785
 10271  074F  0847               	movf	(??___fldiv+3)^(0+128),w
 10272  0750  00C3               	movwf	(___fldiv@b+3)^(0+128)
 10273  0751  0846               	movf	(??___fldiv+2)^(0+128),w
 10274  0752  00C2               	movwf	(___fldiv@b+2)^(0+128)
 10275  0753  0845               	movf	(??___fldiv+1)^(0+128),w
 10276  0754  00C1               	movwf	(___fldiv@b+1)^(0+128)
 10277  0755  0844               	movf	??___fldiv^(0+128),w
 10278  0756  00C0               	movwf	___fldiv@b^(0+128)
 10279  0757                     l4086:	
 10280  0757  3001               	movlw	1
 10281  0758  07CE               	addwf	___fldiv@new_exp^(0+128),f
 10282  0759  1803               	skipnc
 10283  075A  0ACF               	incf	(___fldiv@new_exp+1)^(0+128),f
 10284  075B  3000               	movlw	0
 10285  075C  07CF               	addwf	(___fldiv@new_exp+1)^(0+128),f
 10286  075D                     l4088:	
 10287  075D  084F               	movf	(___fldiv@new_exp+1)^(0+128),w
 10288  075E  3A80               	xorlw	128
 10289  075F  00FF               	movwf	btemp+1
 10290  0760  3080               	movlw	128
 10291  0761  027F               	subwf	btemp+1,w
 10292  0762  1D03               	skipz
 10293  0763  2F66               	goto	u5795
 10294  0764  30FF               	movlw	255
 10295  0765  024E               	subwf	___fldiv@new_exp^(0+128),w
 10296  0766                     u5795:	
 10297  0766  1C03               	skipc
 10298  0767  2F69               	goto	u5791
 10299  0768  2F6A               	goto	u5790
 10300  0769                     u5791:	
 10301  0769  2F78               	goto	l4092
 10302  076A                     u5790:	
 10303  076A                     l4090:	
 10304  076A  30FF               	movlw	255
 10305  076B  1683               	bsf	3,5	;RP0=1, select bank1
 10306  076C  1303               	bcf	3,6	;RP1=0, select bank1
 10307  076D  00CE               	movwf	___fldiv@new_exp^(0+128)
 10308  076E  3000               	movlw	0
 10309  076F  00CF               	movwf	(___fldiv@new_exp^(0+128)+1)
 10310  0770  3000               	movlw	0
 10311  0771  00C3               	movwf	(___fldiv@b+3)^(0+128)
 10312  0772  3000               	movlw	0
 10313  0773  00C2               	movwf	(___fldiv@b+2)^(0+128)
 10314  0774  3000               	movlw	0
 10315  0775  00C1               	movwf	(___fldiv@b+1)^(0+128)
 10316  0776  3000               	movlw	0
 10317  0777  00C0               	movwf	___fldiv@b^(0+128)
 10318  0778                     l4092:	
 10319  0778  1683               	bsf	3,5	;RP0=1, select bank1
 10320  0779  1303               	bcf	3,6	;RP1=0, select bank1
 10321  077A  084F               	movf	(___fldiv@new_exp+1)^(0+128),w
 10322  077B  3A80               	xorlw	128
 10323  077C  00FF               	movwf	btemp+1
 10324  077D  3080               	movlw	128
 10325  077E  027F               	subwf	btemp+1,w
 10326  077F  1D03               	skipz
 10327  0780  2F83               	goto	u5805
 10328  0781  3001               	movlw	1
 10329  0782  024E               	subwf	___fldiv@new_exp^(0+128),w
 10330  0783                     u5805:	
 10331  0783  1803               	skipnc
 10332  0784  2F86               	goto	u5801
 10333  0785  2F87               	goto	u5800
 10334  0786                     u5801:	
 10335  0786  2F94               	goto	l869
 10336  0787                     u5800:	
 10337  0787                     l4094:	
 10338  0787  1683               	bsf	3,5	;RP0=1, select bank1
 10339  0788  1303               	bcf	3,6	;RP1=0, select bank1
 10340  0789  01CE               	clrf	___fldiv@new_exp^(0+128)
 10341  078A  01CF               	clrf	(___fldiv@new_exp+1)^(0+128)
 10342  078B                     l4096:	
 10343  078B  3000               	movlw	0
 10344  078C  00C3               	movwf	(___fldiv@b+3)^(0+128)
 10345  078D  3000               	movlw	0
 10346  078E  00C2               	movwf	(___fldiv@b+2)^(0+128)
 10347  078F  3000               	movlw	0
 10348  0790  00C1               	movwf	(___fldiv@b+1)^(0+128)
 10349  0791  3000               	movlw	0
 10350  0792  00C0               	movwf	___fldiv@b^(0+128)
 10351  0793                     l4098:	
 10352  0793  01CD               	clrf	___fldiv@sign^(0+128)
 10353  0794                     l869:	
 10354  0794  1683               	bsf	3,5	;RP0=1, select bank1
 10355  0795  1303               	bcf	3,6	;RP1=0, select bank1
 10356  0796  084E               	movf	___fldiv@new_exp^(0+128),w
 10357  0797  00C4               	movwf	??___fldiv^(0+128)
 10358  0798  0844               	movf	??___fldiv^(0+128),w
 10359  0799  00D4               	movwf	___fldiv@bexp^(0+128)
 10360  079A                     l4100:	
 10361  079A  1C54               	btfss	___fldiv@bexp^(0+128),0
 10362  079B  2F9D               	goto	u5811
 10363  079C  2F9E               	goto	u5810
 10364  079D                     u5811:	
 10365  079D  2FA0               	goto	l4104
 10366  079E                     u5810:	
 10367  079E                     l4102:	
 10368  079E  17C2               	bsf	(___fldiv@b^(0+128)+2),7
 10369  079F  2FA4               	goto	l871
 10370  07A0                     l4104:	
 10371  07A0  307F               	movlw	127
 10372  07A1  00C4               	movwf	??___fldiv^(0+128)
 10373  07A2  0844               	movf	??___fldiv^(0+128),w
 10374  07A3  05C2               	andwf	(___fldiv@b^(0+128)+2),f
 10375  07A4                     l871:	
 10376  07A4  0854               	movf	___fldiv@bexp^(0+128),w
 10377  07A5  00C4               	movwf	??___fldiv^(0+128)
 10378  07A6  1003               	clrc
 10379  07A7  0C44               	rrf	??___fldiv^(0+128),w
 10380  07A8  00C5               	movwf	(??___fldiv+1)^(0+128)
 10381  07A9  0845               	movf	(??___fldiv+1)^(0+128),w
 10382  07AA  00C3               	movwf	(___fldiv@b^(0+128)+3)
 10383  07AB  084D               	movf	___fldiv@sign^(0+128),w
 10384  07AC  00C4               	movwf	??___fldiv^(0+128)
 10385  07AD  0844               	movf	??___fldiv^(0+128),w
 10386  07AE  04C3               	iorwf	(___fldiv@b^(0+128)+3),f
 10387  07AF  2E48               	goto	l4012
 10388  07B0                     l849:	
 10389  07B0  0008               	return
 10390  07B1                     __end_of___fldiv:	
 10391                           
 10392                           	psect	text39
 10393  1C44                     __ptext39:	
 10394 ;; *************** function _get_humidade *****************
 10395 ;; Defined at:
 10396 ;;		line 95 in file "main.c"
 10397 ;; Parameters:    Size  Location     Type
 10398 ;;		None
 10399 ;; Auto vars:     Size  Location     Type
 10400 ;;  a               2    3[BANK1 ] int 
 10401 ;; Return value:  Size  Location     Type
 10402 ;;                  2    1[BANK1 ] int 
 10403 ;; Registers used:
 10404 ;;		wreg, status,2, status,0, pclath, cstack
 10405 ;; Tracked objects:
 10406 ;;		On entry : 0/0
 10407 ;;		On exit  : 0/0
 10408 ;;		Unchanged: 0/0
 10409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10410 ;;      Params:         0       0       2       0       0
 10411 ;;      Locals:         0       0       2       0       0
 10412 ;;      Temps:          0       0       0       0       0
 10413 ;;      Totals:         0       0       4       0       0
 10414 ;;Total ram usage:        4 bytes
 10415 ;; Hardware stack levels used:    1
 10416 ;; Hardware stack levels required when called:    5
 10417 ;; This function calls:
 10418 ;;		_ADC_Read
 10419 ;; This function is called by:
 10420 ;;		_Aquisicao_Dados
 10421 ;; This function uses a non-reentrant model
 10422 ;;
 10423                           
 10424                           
 10425                           ;psect for function _get_humidade
 10426  1C44                     _get_humidade:	
 10427  1C44                     l4316:	
 10428                           ;incstack = 0
 10429                           ; Regs used in _get_humidade: [wreg+status,2+status,0+pclath+cstack]
 10430                           
 10431                           
 10432                           ;main.c: 97: {;main.c: 98:   if (TMR0IF==1)
 10433  1C44  3001               	movlw	1
 10434  1C45  160A  158A  255B  160A  158A  	fcall	_ADC_Read
 10435  1C4A  1283               	bcf	3,5	;RP0=0, select bank0
 10436  1C4B  1303               	bcf	3,6	;RP1=0, select bank0
 10437  1C4C  083C               	movf	?_ADC_Read+1,w
 10438  1C4D  1683               	bsf	3,5	;RP0=1, select bank1
 10439  1C4E  1303               	bcf	3,6	;RP1=0, select bank1
 10440  1C4F  00A4               	movwf	(get_humidade@a+1)^(0+128)
 10441  1C50  1283               	bcf	3,5	;RP0=0, select bank0
 10442  1C51  1303               	bcf	3,6	;RP1=0, select bank0
 10443  1C52  083B               	movf	?_ADC_Read,w
 10444  1C53  1683               	bsf	3,5	;RP0=1, select bank1
 10445  1C54  1303               	bcf	3,6	;RP1=0, select bank1
 10446  1C55  00A3               	movwf	get_humidade@a^(0+128)
 10447  1C56                     l4318:	
 10448                           
 10449                           ;main.c: 99:   {
 10450  1C56  0824               	movf	(get_humidade@a+1)^(0+128),w
 10451  1C57  00A2               	movwf	(?_get_humidade+1)^(0+128)
 10452  1C58  0823               	movf	get_humidade@a^(0+128),w
 10453  1C59  00A1               	movwf	?_get_humidade^(0+128)
 10454  1C5A                     l137:	
 10455  1C5A  0008               	return
 10456  1C5B                     __end_of_get_humidade:	
 10457                           
 10458                           	psect	text40
 10459  1D5B                     __ptext40:	
 10460 ;; *************** function _ADC_Read *****************
 10461 ;; Defined at:
 10462 ;;		line 15 in file "ADC.c"
 10463 ;; Parameters:    Size  Location     Type
 10464 ;;  channel         1    wreg     unsigned char 
 10465 ;; Auto vars:     Size  Location     Type
 10466 ;;  channel         1    0[BANK1 ] unsigned char 
 10467 ;; Return value:  Size  Location     Type
 10468 ;;                  2   27[BANK0 ] unsigned int 
 10469 ;; Registers used:
 10470 ;;		wreg, status,2, status,0
 10471 ;; Tracked objects:
 10472 ;;		On entry : 0/0
 10473 ;;		On exit  : 0/0
 10474 ;;		Unchanged: 0/0
 10475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10476 ;;      Params:         0       2       0       0       0
 10477 ;;      Locals:         0       0       1       0       0
 10478 ;;      Temps:          0       2       0       0       0
 10479 ;;      Totals:         0       4       1       0       0
 10480 ;;Total ram usage:        5 bytes
 10481 ;; Hardware stack levels used:    1
 10482 ;; Hardware stack levels required when called:    4
 10483 ;; This function calls:
 10484 ;;		Nothing
 10485 ;; This function is called by:
 10486 ;;		_get_temperatura
 10487 ;;		_get_humidade
 10488 ;;		_move_the_fan
 10489 ;; This function uses a non-reentrant model
 10490 ;;
 10491                           
 10492                           
 10493                           ;psect for function _ADC_Read
 10494  1D5B                     _ADC_Read:	
 10495                           
 10496                           ;incstack = 0
 10497                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
 10498                           ;ADC_Read@channel stored from wreg
 10499  1D5B  1683               	bsf	3,5	;RP0=1, select bank1
 10500  1D5C  1303               	bcf	3,6	;RP1=0, select bank1
 10501  1D5D  00A0               	movwf	ADC_Read@channel^(0+128)
 10502  1D5E                     l3868:	
 10503                           
 10504                           ;ADC.c: 15: unsigned int ADC_Read(unsigned char channel);ADC.c: 16: {;ADC.c: 17:   ADCON
      +                          0 &= 0x11000101;
 10505  1D5E  3001               	movlw	1
 10506  1D5F  1283               	bcf	3,5	;RP0=0, select bank0
 10507  1D60  1303               	bcf	3,6	;RP1=0, select bank0
 10508  1D61  00BD               	movwf	??_ADC_Read
 10509  1D62  083D               	movf	??_ADC_Read,w
 10510  1D63  059F               	andwf	31,f	;volatile
 10511                           
 10512                           ;ADC.c: 18:   ADCON0 |= channel<<3;
 10513  1D64  1683               	bsf	3,5	;RP0=1, select bank1
 10514  1D65  1303               	bcf	3,6	;RP1=0, select bank1
 10515  1D66  0820               	movf	ADC_Read@channel^(0+128),w	;volatile
 10516  1D67  1283               	bcf	3,5	;RP0=0, select bank0
 10517  1D68  1303               	bcf	3,6	;RP1=0, select bank0
 10518  1D69  00BD               	movwf	??_ADC_Read
 10519  1D6A  3002               	movlw	2
 10520  1D6B                     u5285:	
 10521  1D6B  1003               	clrc
 10522  1D6C  0DBD               	rlf	??_ADC_Read,f
 10523  1D6D  3EFF               	addlw	-1
 10524  1D6E  1D03               	skipz
 10525  1D6F  2D6B               	goto	u5285
 10526  1D70  1003               	clrc
 10527  1D71  0D3D               	rlf	??_ADC_Read,w
 10528  1D72  00BE               	movwf	??_ADC_Read+1
 10529  1D73  083E               	movf	??_ADC_Read+1,w
 10530  1D74  049F               	iorwf	31,f	;volatile
 10531  1D75                     l3870:	
 10532                           
 10533                           ;ADC.c: 19:   _delay((unsigned long)((2)*(4000000/4000.0)));
 10534  1D75  3003               	movlw	3
 10535  1D76  1283               	bcf	3,5	;RP0=0, select bank0
 10536  1D77  1303               	bcf	3,6	;RP1=0, select bank0
 10537  1D78  00BE               	movwf	??_ADC_Read+1
 10538  1D79  3097               	movlw	151
 10539  1D7A  00BD               	movwf	??_ADC_Read
 10540  1D7B                     u7237:	
 10541  1D7B  0BBD               	decfsz	??_ADC_Read,f
 10542  1D7C  2D7B               	goto	u7237
 10543  1D7D  0BBE               	decfsz	??_ADC_Read+1,f
 10544  1D7E  2D7B               	goto	u7237
 10545  1D7F                     l3872:	
 10546                           
 10547                           ;ADC.c: 20:   GO_nDONE = 1;
 10548  1D7F  1283               	bcf	3,5	;RP0=0, select bank0
 10549  1D80  1303               	bcf	3,6	;RP1=0, select bank0
 10550  1D81  151F               	bsf	31,2	;volatile
 10551  1D82                     l272:	
 10552                           ;ADC.c: 21:   while(GO_nDONE);
 10553                           
 10554  1D82  191F               	btfsc	31,2	;volatile
 10555  1D83  2D85               	goto	u5291
 10556  1D84  2D86               	goto	u5290
 10557  1D85                     u5291:	
 10558  1D85  2D82               	goto	l272
 10559  1D86                     u5290:	
 10560  1D86                     l3874:	
 10561                           
 10562                           ;ADC.c: 22:   return ((ADRESH<<8)+ADRESL);
 10563  1D86  081E               	movf	30,w	;volatile
 10564  1D87  00BC               	movwf	?_ADC_Read+1
 10565  1D88  1683               	bsf	3,5	;RP0=1, select bank1
 10566  1D89  1303               	bcf	3,6	;RP1=0, select bank1
 10567  1D8A  081E               	movf	30,w	;volatile
 10568  1D8B  1283               	bcf	3,5	;RP0=0, select bank0
 10569  1D8C  1303               	bcf	3,6	;RP1=0, select bank0
 10570  1D8D  00BB               	movwf	?_ADC_Read
 10571  1D8E                     l275:	
 10572  1D8E  0008               	return
 10573  1D8F                     __end_of_ADC_Read:	
 10574                           
 10575                           	psect	text41
 10576  1BE5                     __ptext41:	
 10577 ;; *************** function _ADC_Init *****************
 10578 ;; Defined at:
 10579 ;;		line 9 in file "ADC.c"
 10580 ;; Parameters:    Size  Location     Type
 10581 ;;		None
 10582 ;; Auto vars:     Size  Location     Type
 10583 ;;		None
 10584 ;; Return value:  Size  Location     Type
 10585 ;;                  1    wreg      void 
 10586 ;; Registers used:
 10587 ;;		wreg
 10588 ;; Tracked objects:
 10589 ;;		On entry : 0/0
 10590 ;;		On exit  : 0/0
 10591 ;;		Unchanged: 0/0
 10592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10593 ;;      Params:         0       0       0       0       0
 10594 ;;      Locals:         0       0       0       0       0
 10595 ;;      Temps:          0       0       0       0       0
 10596 ;;      Totals:         0       0       0       0       0
 10597 ;;Total ram usage:        0 bytes
 10598 ;; Hardware stack levels used:    1
 10599 ;; Hardware stack levels required when called:    4
 10600 ;; This function calls:
 10601 ;;		Nothing
 10602 ;; This function is called by:
 10603 ;;		_main
 10604 ;; This function uses a non-reentrant model
 10605 ;;
 10606                           
 10607                           
 10608                           ;psect for function _ADC_Init
 10609  1BE5                     _ADC_Init:	
 10610  1BE5                     l4674:	
 10611                           ;incstack = 0
 10612                           ; Regs used in _ADC_Init: [wreg]
 10613                           
 10614                           
 10615                           ;ADC.c: 11:   ADCON0 = 0b01000001;
 10616  1BE5  3041               	movlw	65
 10617  1BE6  1283               	bcf	3,5	;RP0=0, select bank0
 10618  1BE7  1303               	bcf	3,6	;RP1=0, select bank0
 10619  1BE8  009F               	movwf	31	;volatile
 10620                           
 10621                           ;ADC.c: 12:   ADCON1 = 0b11000000;
 10622  1BE9  30C0               	movlw	192
 10623  1BEA  1683               	bsf	3,5	;RP0=1, select bank1
 10624  1BEB  1303               	bcf	3,6	;RP1=0, select bank1
 10625  1BEC  009F               	movwf	31	;volatile
 10626  1BED                     l269:	
 10627  1BED  0008               	return
 10628  1BEE                     __end_of_ADC_Init:	
 10629                           
 10630                           	psect	text42
 10631  142F                     __ptext42:	
 10632 ;; *************** function _Interrupt_Time *****************
 10633 ;; Defined at:
 10634 ;;		line 145 in file "main.c"
 10635 ;; Parameters:    Size  Location     Type
 10636 ;;		None
 10637 ;; Auto vars:     Size  Location     Type
 10638 ;;		None
 10639 ;; Return value:  Size  Location     Type
 10640 ;;                  1    wreg      void 
 10641 ;; Registers used:
 10642 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10643 ;; Tracked objects:
 10644 ;;		On entry : 0/0
 10645 ;;		On exit  : 0/0
 10646 ;;		Unchanged: 0/0
 10647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10648 ;;      Params:         0       0       0       0       0
 10649 ;;      Locals:         0       0       0       0       0
 10650 ;;      Temps:          0       6       0       0       0
 10651 ;;      Totals:         0       6       0       0       0
 10652 ;;Total ram usage:        6 bytes
 10653 ;; Hardware stack levels used:    1
 10654 ;; Hardware stack levels required when called:    3
 10655 ;; This function calls:
 10656 ;;		___awdiv
 10657 ;;		i1_UART_Write_Text
 10658 ;;		i1___wmul
 10659 ;;		i1_print_json
 10660 ;; This function is called by:
 10661 ;;		Interrupt level 1
 10662 ;; This function uses a non-reentrant model
 10663 ;;
 10664                           
 10665                           
 10666                           ;psect for function _Interrupt_Time
 10667  142F                     _Interrupt_Time:	
 10668  142F                     i1l4682:	
 10669                           
 10670                           ;main.c: 147:   while(((to < timeout)||(!timeout))&&(!ret))
 10671  142F  1D0B               	btfss	11,2	;volatile
 10672  1430  2C32               	goto	u703_21
 10673  1431  2C33               	goto	u703_20
 10674  1432                     u703_21:	
 10675  1432  2C8B               	goto	i1l4708
 10676  1433                     u703_20:	
 10677  1433                     i1l4684:	
 10678                           
 10679                           ;main.c: 148:   {;main.c: 149:     for(i=0;i<3;i++)
 10680  1433  3001               	movlw	1
 10681  1434  07CD               	addwf	_count_timer_fan_speed,f
 10682  1435  1803               	skipnc
 10683  1436  0ACE               	incf	_count_timer_fan_speed+1,f
 10684  1437  3000               	movlw	0
 10685  1438  07CE               	addwf	_count_timer_fan_speed+1,f
 10686                           
 10687                           ;main.c: 150:     {
 10688  1439  3001               	movlw	1
 10689  143A  07CB               	addwf	_count_minute,f
 10690  143B  1803               	skipnc
 10691  143C  0ACC               	incf	_count_minute+1,f
 10692  143D  3000               	movlw	0
 10693  143E  07CC               	addwf	_count_minute+1,f
 10694                           
 10695                           ;main.c: 151:       PORTB|=~linha[i];
 10696  143F  30DA               	movlw	218
 10697  1440  0081               	movwf	1	;volatile
 10698  1441                     i1l4686:	
 10699                           
 10700                           ;main.c: 152:       if(!PORTDbits.RD3)
 10701  1441  110B               	bcf	11,2	;volatile
 10702  1442                     i1l4688:	
 10703                           
 10704                           ;main.c: 153:       {
 10705  1442  300A               	movlw	10
 10706  1443  064D               	xorwf	_count_timer_fan_speed,w
 10707  1444  044E               	iorwf	_count_timer_fan_speed+1,w
 10708  1445  1D03               	btfss	3,2
 10709  1446  2C48               	goto	u704_21
 10710  1447  2C49               	goto	u704_20
 10711  1448                     u704_21:	
 10712  1448  2C74               	goto	i1l4700
 10713  1449                     u704_20:	
 10714  1449                     i1l4690:	
 10715                           
 10716                           ;main.c: 154:           _delay((unsigned long)((20)*(4000000/4000.0)));;main.c: 155:    
      +                                 if(!PORTDbits.RD3)
 10717  1449  01CD               	clrf	_count_timer_fan_speed
 10718  144A  01CE               	clrf	_count_timer_fan_speed+1
 10719  144B                     i1l4692:	
 10720                           
 10721                           ;main.c: 156:           {
 10722  144B  080E               	movf	14,w	;volatile
 10723  144C  00B5               	movwf	??_Interrupt_Time
 10724  144D  01B6               	clrf	??_Interrupt_Time+1
 10725  144E  0835               	movf	??_Interrupt_Time,w
 10726  144F  00CF               	movwf	_fan_count
 10727  1450  0836               	movf	??_Interrupt_Time+1,w
 10728  1451  00D0               	movwf	_fan_count+1
 10729  1452                     i1l4694:	
 10730                           
 10731                           ;main.c: 157:               while(!PORTDbits.RD3);
 10732  1452  018E               	clrf	14	;volatile
 10733  1453                     i1l4696:	
 10734                           
 10735                           ;main.c: 158:               ret= 1+i;
 10736  1453  110B               	bcf	11,2	;volatile
 10737  1454                     i1l4698:	
 10738                           
 10739                           ;main.c: 159:               break;
 10740  1454  3007               	movlw	7
 10741  1455  00F0               	movwf	___awdiv@divisor
 10742  1456  3000               	movlw	0
 10743  1457  00F1               	movwf	___awdiv@divisor+1
 10744  1458  0850               	movf	_fan_count+1,w
 10745  1459  00F3               	movwf	___awdiv@dividend+1
 10746  145A  084F               	movf	_fan_count,w
 10747  145B  00F2               	movwf	___awdiv@dividend
 10748  145C  160A  118A  2161  160A  118A  	fcall	___awdiv
 10749  1461  0871               	movf	?___awdiv+1,w
 10750  1462  00FA               	movwf	i1___wmul@multiplier+1
 10751  1463  0870               	movf	?___awdiv,w
 10752  1464  00F9               	movwf	i1___wmul@multiplier
 10753  1465  3058               	movlw	88
 10754  1466  00FB               	movwf	i1___wmul@multiplicand
 10755  1467  3002               	movlw	2
 10756  1468  00FC               	movwf	i1___wmul@multiplicand+1
 10757  1469  160A  158A  24FE  160A  118A  	fcall	i1___wmul
 10758  146E  087A               	movf	?i1___wmul+1,w
 10759  146F  1683               	bsf	3,5	;RP0=1, select bank1
 10760  1470  1303               	bcf	3,6	;RP1=0, select bank1
 10761  1471  00EF               	movwf	(_fan_rpm+1)^(0+128)
 10762  1472  0879               	movf	?i1___wmul,w
 10763  1473  00EE               	movwf	_fan_rpm^(0+128)
 10764  1474                     i1l4700:	
 10765                           
 10766                           ;main.c: 162:       if(!PORTDbits.RD2)
 10767  1474  30F4               	movlw	244
 10768  1475  1283               	bcf	3,5	;RP0=0, select bank0
 10769  1476  064B               	xorwf	_count_minute,w
 10770  1477  1D03               	skipz
 10771  1478  2C7D               	goto	u705_21
 10772  1479  034C               	decf	_count_minute+1,w
 10773  147A  1D03               	btfss	3,2
 10774  147B  2C7D               	goto	u705_21
 10775  147C  2C7E               	goto	u705_20
 10776  147D                     u705_21:	
 10777  147D  2C8B               	goto	i1l4708
 10778  147E                     u705_20:	
 10779  147E                     i1l4702:	
 10780                           
 10781                           ;main.c: 163:       {;main.c: 164:           _delay((unsigned long)((20)*(4000000/4000.0
      +                          )));
 10782  147E  01CB               	clrf	_count_minute
 10783  147F  01CC               	clrf	_count_minute+1
 10784  1480                     i1l4704:	
 10785                           
 10786                           ;main.c: 165:           if(!PORTDbits.RD2)
 10787  1480  0349               	decf	_running,w
 10788  1481  044A               	iorwf	_running+1,w
 10789  1482  1D03               	btfss	3,2
 10790  1483  2C85               	goto	u706_21
 10791  1484  2C86               	goto	u706_20
 10792  1485                     u706_21:	
 10793  1485  2C8B               	goto	i1l4708
 10794  1486                     u706_20:	
 10795  1486                     i1l4706:	
 10796                           
 10797                           ;main.c: 166:           {;main.c: 167:               while(!PORTDbits.RD2);
 10798  1486  160A  158A  2529  160A  118A  	fcall	i1_print_json
 10799  148B                     i1l4708:	
 10800                           
 10801                           ;main.c: 172:       if(!PORTDbits.RD1)
 10802  148B  1C8B               	btfss	11,1	;volatile
 10803  148C  2C8E               	goto	u707_21
 10804  148D  2C8F               	goto	u707_20
 10805  148E                     u707_21:	
 10806  148E  2CC3               	goto	i1l161
 10807  148F                     u707_20:	
 10808  148F                     i1l4710:	
 10809                           
 10810                           ;main.c: 173:       {
 10811  148F  108B               	bcf	11,1	;volatile
 10812  1490                     i1l4712:	
 10813                           
 10814                           ;main.c: 174:           _delay((unsigned long)((20)*(4000000/4000.0)));
 10815  1490  1283               	bcf	3,5	;RP0=0, select bank0
 10816  1491  1303               	bcf	3,6	;RP1=0, select bank0
 10817  1492  0349               	decf	_running,w
 10818  1493  044A               	iorwf	_running+1,w
 10819  1494  1D03               	btfss	3,2
 10820  1495  2C97               	goto	u708_21
 10821  1496  2C98               	goto	u708_20
 10822  1497                     u708_21:	
 10823  1497  2CAD               	goto	i1l4720
 10824  1498                     u708_20:	
 10825  1498                     i1l4714:	
 10826                           
 10827                           ;main.c: 175:           if(!PORTDbits.RD1);main.c: 176:           {
 10828  1498  01C9               	clrf	_running
 10829  1499  01CA               	clrf	_running+1
 10830  149A                     i1l4716:	
 10831                           
 10832                           ;main.c: 177:               while(!PORTDbits.RD1);
 10833  149A  30D5               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
 10834  149B  00F1               	movwf	i1UART_Write_Text@text
 10835  149C  3080               	movlw	128
 10836  149D  00F2               	movwf	i1UART_Write_Text@text+1
 10837  149E  160A  158A  271F  160A  118A  	fcall	i1_UART_Write_Text
 10838  14A3                     i1l4718:	
 10839                           
 10840                           ;main.c: 178:               ret= 7+i;
 10841  14A3  3095               	movlw	(low (((STR_7+16)-__stringbase)| (0+32768)))& (0+255)
 10842  14A4  00F1               	movwf	i1UART_Write_Text@text
 10843  14A5  3080               	movlw	128
 10844  14A6  00F2               	movwf	i1UART_Write_Text@text+1
 10845  14A7  160A  158A  271F  160A  118A  	fcall	i1_UART_Write_Text
 10846                           
 10847                           ;main.c: 179:               break;
 10848  14AC  2CC3               	goto	i1l161
 10849  14AD                     i1l4720:	
 10850                           
 10851                           ;main.c: 180:           }
 10852  14AD  3001               	movlw	1
 10853  14AE  00C9               	movwf	_running
 10854  14AF  3000               	movlw	0
 10855  14B0  00CA               	movwf	_running+1
 10856  14B1                     i1l4722:	
 10857                           
 10858                           ;main.c: 181:       }
 10859  14B1  30E1               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
 10860  14B2  00F1               	movwf	i1UART_Write_Text@text
 10861  14B3  3080               	movlw	128
 10862  14B4  00F2               	movwf	i1UART_Write_Text@text+1
 10863  14B5  160A  158A  271F  160A  118A  	fcall	i1_UART_Write_Text
 10864  14BA                     i1l4724:	
 10865                           
 10866                           ;main.c: 182:       if(!PORTDbits.RD0)
 10867  14BA  3095               	movlw	(low (((STR_7+16)-__stringbase)| (0+32768)))& (0+255)
 10868  14BB  00F1               	movwf	i1UART_Write_Text@text
 10869  14BC  3080               	movlw	128
 10870  14BD  00F2               	movwf	i1UART_Write_Text@text+1
 10871  14BE  160A  158A  271F  160A  118A  	fcall	i1_UART_Write_Text
 10872  14C3                     i1l161:	
 10873  14C3  1283               	bcf	3,5	;RP0=0, select bank0
 10874  14C4  1303               	bcf	3,6	;RP1=0, select bank0
 10875  14C5  083A               	movf	??_Interrupt_Time+5,w
 10876  14C6  00FF               	movwf	btemp+1
 10877  14C7  0839               	movf	??_Interrupt_Time+4,w
 10878  14C8  008A               	movwf	10
 10879  14C9  0838               	movf	??_Interrupt_Time+3,w
 10880  14CA  0084               	movwf	4
 10881  14CB  0E37               	swapf	(??_Interrupt_Time+2)^0,w
 10882  14CC  0083               	movwf	3
 10883  14CD  0EFE               	swapf	btemp,f
 10884  14CE  0E7E               	swapf	btemp,w
 10885  14CF  0009               	retfie
 10886  14D0                     __end_of_Interrupt_Time:	
 10887                           
 10888                           	psect	intentry
 10889  0004                     __pintentry:	
 10890                           ;incstack = 0
 10891 ;; hardware stack exceeded
 10892                           ; Regs used in _Interrupt_Time: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10893                           
 10894  0004                     interrupt_function:	
 10895  007E                     saved_w	set	btemp
 10896  0004  00FE               	movwf	btemp
 10897  0005  0E03               	swapf	3,w
 10898  0006  1283               	bcf	3,5	;RP0=0, select bank0
 10899  0007  1303               	bcf	3,6	;RP1=0, select bank0
 10900  0008  00B7               	movwf	??_Interrupt_Time+2
 10901  0009  0804               	movf	4,w
 10902  000A  00B8               	movwf	??_Interrupt_Time+3
 10903  000B  080A               	movf	10,w
 10904  000C  00B9               	movwf	??_Interrupt_Time+4
 10905  000D  087F               	movf	btemp+1,w
 10906  000E  00BA               	movwf	??_Interrupt_Time+5
 10907  000F  160A  118A  2C2F   	ljmp	_Interrupt_Time
 10908                           
 10909                           	psect	text43
 10910  1D29                     __ptext43:	
 10911 ;; *************** function i1_print_json *****************
 10912 ;; Defined at:
 10913 ;;		line 102 in file "main.c"
 10914 ;; Parameters:    Size  Location     Type
 10915 ;;		None
 10916 ;; Auto vars:     Size  Location     Type
 10917 ;;		None
 10918 ;; Return value:  Size  Location     Type
 10919 ;;                  1    wreg      void 
 10920 ;; Registers used:
 10921 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10922 ;; Tracked objects:
 10923 ;;		On entry : 0/0
 10924 ;;		On exit  : 0/0
 10925 ;;		Unchanged: 0/0
 10926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10927 ;;      Params:         0       0       0       0       0
 10928 ;;      Locals:         0       0       0       0       0
 10929 ;;      Temps:          0       1       0       0       0
 10930 ;;      Totals:         0       1       0       0       0
 10931 ;;Total ram usage:        1 bytes
 10932 ;; Hardware stack levels used:    1
 10933 ;; Hardware stack levels required when called:    2
 10934 ;; This function calls:
 10935 ;;		i1_UART_Write_Text
 10936 ;;		i1_sprintf
 10937 ;; This function is called by:
 10938 ;;		_Interrupt_Time
 10939 ;; This function uses a non-reentrant model
 10940 ;;
 10941                           
 10942                           
 10943                           ;psect for function i1_print_json
 10944  1D29                     i1_print_json:	
 10945  1D29                     i1l4680:	
 10946                           ;incstack = 0
 10947 ;; hardware stack exceeded
 10948                           ; Regs used in i1_print_json: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10949                           
 10950                           
 10951                           ;main.c: 104:     if(count_timer_fan_speed==10)
 10952  1D29  3010               	movlw	(low (_json| (0+256)))& (0+255)
 10953  1D2A  1283               	bcf	3,5	;RP0=0, select bank0
 10954  1D2B  1303               	bcf	3,6	;RP1=0, select bank0
 10955  1D2C  00A0               	movwf	i1sprintf@sp
 10956  1D2D  3001               	movlw	1
 10957  1D2E  00A1               	movwf	i1sprintf@sp+1
 10958  1D2F  300F               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
 10959  1D30  00B4               	movwf	??i1_print_json
 10960  1D31  0834               	movf	??i1_print_json,w
 10961  1D32  00A2               	movwf	i1sprintf@f
 10962  1D33  0840               	movf	_Data_atual+1,w
 10963  1D34  00A4               	movwf	?i1_sprintf+4
 10964  1D35  083F               	movf	_Data_atual,w
 10965  1D36  00A3               	movwf	?i1_sprintf+3
 10966  1D37  0842               	movf	_Data_atual+3,w
 10967  1D38  00A6               	movwf	?i1_sprintf+6
 10968  1D39  0841               	movf	_Data_atual+2,w
 10969  1D3A  00A5               	movwf	?i1_sprintf+5
 10970  1D3B  0844               	movf	_Data_atual+5,w
 10971  1D3C  00A8               	movwf	?i1_sprintf+8
 10972  1D3D  0843               	movf	_Data_atual+4,w
 10973  1D3E  00A7               	movwf	?i1_sprintf+7
 10974  1D3F  0846               	movf	_Data_atual+7,w
 10975  1D40  00AA               	movwf	?i1_sprintf+10
 10976  1D41  0845               	movf	_Data_atual+6,w
 10977  1D42  00A9               	movwf	?i1_sprintf+9
 10978  1D43  120A  158A  2151  160A  158A  	fcall	i1_sprintf
 10979                           
 10980                           ;main.c: 105:     {
 10981  1D48  3010               	movlw	(low (_json| (0+256)))& (0+255)
 10982  1D49  00F1               	movwf	i1UART_Write_Text@text
 10983  1D4A  3001               	movlw	1
 10984  1D4B  00F2               	movwf	i1UART_Write_Text@text+1
 10985  1D4C  160A  158A  271F  160A  158A  	fcall	i1_UART_Write_Text
 10986                           
 10987                           ;main.c: 106:       count_timer_fan_speed=0;
 10988  1D51  3095               	movlw	(low (((STR_7+16)-__stringbase)| (0+32768)))& (0+255)
 10989  1D52  00F1               	movwf	i1UART_Write_Text@text
 10990  1D53  3080               	movlw	128
 10991  1D54  00F2               	movwf	i1UART_Write_Text@text+1
 10992  1D55  160A  158A  271F  160A  158A  	fcall	i1_UART_Write_Text
 10993  1D5A                     i1l140:	
 10994  1D5A  0008               	return
 10995  1D5B                     __end_ofi1_print_json:	
 10996                           
 10997                           	psect	text44
 10998  0951                     __ptext44:	
 10999 ;; *************** function i1_sprintf *****************
 11000 ;; Defined at:
 11001 ;;		line 505 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
 11002 ;; Parameters:    Size  Location     Type
 11003 ;;  sp              2    0[BANK0 ] PTR unsigned char 
 11004 ;;		 -> UART_Write_Decimal@string(10), json(80), 
 11005 ;;  f               1    2[BANK0 ] PTR const unsigned char 
 11006 ;;		 -> STR_20(3), STR_1(74), 
 11007 ;; Auto vars:     Size  Location     Type
 11008 ;;  sprintf         4    0        struct .
 11009 ;;  sprintf         2   17[BANK0 ] unsigned int 
 11010 ;;  sprintf         2    0        PTR const unsigned char 
 11011 ;;  sprintf         2    0        unsigned int 
 11012 ;;  sprintf         1   19[BANK0 ] unsigned char 
 11013 ;;  sprintf         1   16[BANK0 ] char 
 11014 ;;  sprintf         1   15[BANK0 ] unsigned char 
 11015 ;;  sprintf         1   14[BANK0 ] PTR void [1]
 11016 ;;		 -> ?i1_sprintf(2), ?_sprintf(2), 
 11017 ;; Return value:  Size  Location     Type
 11018 ;;                  2    0[BANK0 ] int 
 11019 ;; Registers used:
 11020 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11021 ;; Tracked objects:
 11022 ;;		On entry : 0/0
 11023 ;;		On exit  : 0/0
 11024 ;;		Unchanged: 0/0
 11025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11026 ;;      Params:         0      11       0       0       0
 11027 ;;      Locals:         0       6       0       0       0
 11028 ;;      Temps:          0       3       0       0       0
 11029 ;;      Totals:         0      20       0       0       0
 11030 ;;Total ram usage:       20 bytes
 11031 ;; Hardware stack levels used:    1
 11032 ;; Hardware stack levels required when called:    1
 11033 ;; This function calls:
 11034 ;;		i1___lwdiv
 11035 ;;		i1___lwmod
 11036 ;; This function is called by:
 11037 ;;		i1_print_json
 11038 ;; This function uses a non-reentrant model
 11039 ;;
 11040                           
 11041                           
 11042                           ;psect for function i1_sprintf
 11043  0951                     i1_sprintf:	
 11044  0951                     i1l3130:	
 11045                           ;incstack = 0
 11046 ;; hardware stack exceeded
 11047                           ; Regs used in i1_sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 11048                           
 11049                           
 11050                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 505: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources
      +                          \c90\common\doprnt.c: 506: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\
      +                          common\doprnt.c: 507:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\source
      +                          s\c90\common\doprnt.c: 512:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c90\common\doprnt.c: 521:  signed char prec;;C:\Program Files (x86)\Microchip\xc8\v2
      +                          .10\pic\sources\c90\common\doprnt.c: 525:  unsigned char flag;
 11051  0951  3023               	movlw	(low ((?i1_sprintf| 0+3)))& (0+255)
 11052  0952  1283               	bcf	3,5	;RP0=0, select bank0
 11053  0953  1303               	bcf	3,6	;RP1=0, select bank0
 11054  0954  00AB               	movwf	??i1_sprintf
 11055  0955  082B               	movf	??i1_sprintf,w
 11056  0956  00AE               	movwf	i1sprintf@ap
 11057                           
 11058                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
 11059  0957  2A2D               	goto	i1l3182
 11060  0958                     i1l3132:	
 11061                           
 11062                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 555:   if(c
      +                           != '%')
 11063  0958  3025               	movlw	37
 11064  0959  0633               	xorwf	i1sprintf@c,w
 11065  095A  1903               	btfsc	3,2
 11066  095B  295D               	goto	u429_21
 11067  095C  295E               	goto	u429_20
 11068  095D                     u429_21:	
 11069  095D  296E               	goto	i1l3138
 11070  095E                     u429_20:	
 11071  095E                     i1l3134:	
 11072                           
 11073                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 557:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 558:    ((*sp+
      +                          + = (c)));
 11074  095E  0833               	movf	i1sprintf@c,w
 11075  095F  00AB               	movwf	??i1_sprintf
 11076  0960  0820               	movf	i1sprintf@sp,w
 11077  0961  0084               	movwf	4
 11078  0962  1783               	bsf	3,7
 11079  0963  1C21               	btfss	i1sprintf@sp+1,0
 11080  0964  1383               	bcf	3,7
 11081  0965  082B               	movf	??i1_sprintf,w
 11082  0966  0080               	movwf	0
 11083  0967                     i1l3136:	
 11084  0967  3001               	movlw	1
 11085  0968  07A0               	addwf	i1sprintf@sp,f
 11086  0969  1803               	skipnc
 11087  096A  0AA1               	incf	i1sprintf@sp+1,f
 11088  096B  3000               	movlw	0
 11089  096C  07A1               	addwf	i1sprintf@sp+1,f
 11090                           
 11091                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 559:    con
      +                          tinue;
 11092  096D  2A2D               	goto	i1l3182
 11093  096E                     i1l3138:	
 11094                           
 11095                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 565:   flag
      +                           = 0;
 11096  096E  01AF               	clrf	i1sprintf@flag
 11097  096F                     i1l3142:	
 11098                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 661:   swit
      +                          ch(c = *f++) {
 11099                           
 11100  096F  3001               	movlw	1
 11101  0970  07A2               	addwf	i1sprintf@f,f
 11102  0971  30FF               	movlw	-1
 11103  0972  0722               	addwf	i1sprintf@f,w
 11104  0973  0084               	movwf	4
 11105  0974  120A  158A  200A  120A  158A  	fcall	stringdir
 11106  0979  00B3               	movwf	i1sprintf@c
 11107  097A  00AB               	movwf	??i1_sprintf
 11108  097B  01AC               	clrf	??i1_sprintf+1
 11109                           
 11110                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11111                           ; Switch size 1, requested type "simple"
 11112                           ; Number of cases is 1, Range of values is 0 to 0
 11113                           ; switch strategies available:
 11114                           ; Name         Instructions Cycles
 11115                           ; simple_byte            4     3 (average)
 11116                           ; direct_byte           11     8 (fixed)
 11117                           ; jumptable            260     6 (fixed)
 11118                           ;	Chosen strategy is simple_byte
 11119  097C  082C               	movf	??i1_sprintf+1,w
 11120  097D  3A00               	xorlw	0	; case 0
 11121  097E  1903               	skipnz
 11122  097F  2981               	goto	i1l4934
 11123  0980  2A2D               	goto	i1l3182
 11124  0981                     i1l4934:	
 11125                           
 11126                           ; Switch size 1, requested type "simple"
 11127                           ; Number of cases is 3, Range of values is 0 to 105
 11128                           ; switch strategies available:
 11129                           ; Name         Instructions Cycles
 11130                           ; simple_byte           10     6 (average)
 11131                           ; jumptable            260     6 (fixed)
 11132                           ;	Chosen strategy is simple_byte
 11133  0981  082B               	movf	??i1_sprintf,w
 11134  0982  3A00               	xorlw	0	; case 0
 11135  0983  1903               	skipnz
 11136  0984  2A3F               	goto	i1l3184
 11137  0985  3A64               	xorlw	100	; case 100
 11138  0986  1903               	skipnz
 11139  0987  298C               	goto	i1l3144
 11140  0988  3A0D               	xorlw	13	; case 105
 11141  0989  1903               	skipnz
 11142  098A  298C               	goto	i1l3144
 11143  098B  2A2D               	goto	i1l3182
 11144  098C                     i1l3144:	
 11145                           
 11146                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1279:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1285:     val
      +                           = (unsigned int)(*(int *)__va_arg((*(int **)ap), (int)0));
 11147  098C  082E               	movf	i1sprintf@ap,w
 11148  098D  0084               	movwf	4
 11149  098E  1383               	bcf	3,7	;select IRP bank0
 11150  098F  0800               	movf	0,w
 11151  0990  00B1               	movwf	i1sprintf@val
 11152  0991  0A84               	incf	4,f
 11153  0992  0800               	movf	0,w
 11154  0993  00B2               	movwf	i1sprintf@val+1
 11155  0994                     i1l3146:	
 11156  0994  3002               	movlw	2
 11157  0995  00AB               	movwf	??i1_sprintf
 11158  0996  082B               	movf	??i1_sprintf,w
 11159  0997  07AE               	addwf	i1sprintf@ap,f
 11160  0998                     i1l3148:	
 11161                           
 11162                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1287:    if
      +                          ((int)val < 0) {
 11163  0998  1FB2               	btfss	i1sprintf@val+1,7
 11164  0999  299B               	goto	u430_21
 11165  099A  299C               	goto	u430_20
 11166  099B                     u430_21:	
 11167  099B  29A5               	goto	i1l3154
 11168  099C                     u430_20:	
 11169  099C                     i1l3150:	
 11170                           
 11171                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1288:     f
      +                          lag |= 0x03;
 11172  099C  3003               	movlw	3
 11173  099D  00AB               	movwf	??i1_sprintf
 11174  099E  082B               	movf	??i1_sprintf,w
 11175  099F  04AF               	iorwf	i1sprintf@flag,f
 11176  09A0                     i1l3152:	
 11177                           
 11178                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1289:     v
      +                          al = -val;
 11179  09A0  09B1               	comf	i1sprintf@val,f
 11180  09A1  09B2               	comf	i1sprintf@val+1,f
 11181  09A2  0AB1               	incf	i1sprintf@val,f
 11182  09A3  1903               	skipnz
 11183  09A4  0AB2               	incf	i1sprintf@val+1,f
 11184  09A5                     i1l3154:	
 11185                           
 11186                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1292:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1331:    for(
      +                          c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 11187  09A5  01B3               	clrf	i1sprintf@c
 11188  09A6  0AB3               	incf	i1sprintf@c,f
 11189  09A7                     i1l3160:	
 11190                           
 11191                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1332:     i
      +                          f(val < dpowers[c])
 11192  09A7  0833               	movf	i1sprintf@c,w
 11193  09A8  00AB               	movwf	??i1_sprintf
 11194  09A9  072B               	addwf	??i1_sprintf,w
 11195  09AA  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11196  09AB  0084               	movwf	4
 11197  09AC  120A  158A  200A  120A  158A  	fcall	stringdir
 11198  09B1  00AC               	movwf	??i1_sprintf+1
 11199  09B2  120A  158A  200A  120A  158A  	fcall	stringdir
 11200  09B7  00AD               	movwf	??i1_sprintf+2
 11201  09B8  082D               	movf	??i1_sprintf+2,w
 11202  09B9  0232               	subwf	i1sprintf@val+1,w
 11203  09BA  1D03               	skipz
 11204  09BB  29BE               	goto	u431_25
 11205  09BC  082C               	movf	??i1_sprintf+1,w
 11206  09BD  0231               	subwf	i1sprintf@val,w
 11207  09BE                     u431_25:	
 11208  09BE  1803               	skipnc
 11209  09BF  29C1               	goto	u431_21
 11210  09C0  29C2               	goto	u431_20
 11211  09C1                     u431_21:	
 11212  09C1  29C3               	goto	i1l3164
 11213  09C2                     u431_20:	
 11214  09C2  29CD               	goto	i1l3166
 11215  09C3                     i1l3164:	
 11216  09C3  3001               	movlw	1
 11217  09C4  00AB               	movwf	??i1_sprintf
 11218  09C5  082B               	movf	??i1_sprintf,w
 11219  09C6  07B3               	addwf	i1sprintf@c,f
 11220  09C7  3005               	movlw	5
 11221  09C8  0633               	xorwf	i1sprintf@c,w
 11222  09C9  1D03               	btfss	3,2
 11223  09CA  29CC               	goto	u432_21
 11224  09CB  29CD               	goto	u432_20
 11225  09CC                     u432_21:	
 11226  09CC  29A7               	goto	i1l3160
 11227  09CD                     u432_20:	
 11228  09CD                     i1l3166:	
 11229                           
 11230                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1448:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1464:    if(f
      +                          lag & 0x03)
 11231  09CD  082F               	movf	i1sprintf@flag,w
 11232  09CE  3903               	andlw	3
 11233  09CF  1903               	btfsc	3,2
 11234  09D0  29D2               	goto	u433_21
 11235  09D1  29D3               	goto	u433_20
 11236  09D2                     u433_21:	
 11237  09D2  29E2               	goto	i1l3172
 11238  09D3                     u433_20:	
 11239  09D3                     i1l3168:	
 11240                           
 11241                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1465:     (
      +                          (*sp++ = ('-')));
 11242  09D3  302D               	movlw	45
 11243  09D4  00AB               	movwf	??i1_sprintf
 11244  09D5  0820               	movf	i1sprintf@sp,w
 11245  09D6  0084               	movwf	4
 11246  09D7  1783               	bsf	3,7
 11247  09D8  1C21               	btfss	i1sprintf@sp+1,0
 11248  09D9  1383               	bcf	3,7
 11249  09DA  082B               	movf	??i1_sprintf,w
 11250  09DB  0080               	movwf	0
 11251  09DC                     i1l3170:	
 11252  09DC  3001               	movlw	1
 11253  09DD  07A0               	addwf	i1sprintf@sp,f
 11254  09DE  1803               	skipnc
 11255  09DF  0AA1               	incf	i1sprintf@sp+1,f
 11256  09E0  3000               	movlw	0
 11257  09E1  07A1               	addwf	i1sprintf@sp+1,f
 11258  09E2                     i1l3172:	
 11259                           
 11260                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1495:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1498:   prec 
      +                          = c;
 11261  09E2  0833               	movf	i1sprintf@c,w
 11262  09E3  00AB               	movwf	??i1_sprintf
 11263  09E4  082B               	movf	??i1_sprintf,w
 11264  09E5  00B0               	movwf	i1sprintf@prec
 11265                           
 11266                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1500:   whi
      +                          le(prec--) {
 11267  09E6  2A24               	goto	i1l3180
 11268  09E7                     i1l3174:	
 11269                           
 11270                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1504:    {;
      +                          C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1515:     c 
      +                          = (val / dpowers[(unsigned char)prec]) % 10 + '0';
 11271  09E7  300A               	movlw	10
 11272  09E8  00F8               	movwf	i1___lwmod@divisor
 11273  09E9  3000               	movlw	0
 11274  09EA  00F9               	movwf	i1___lwmod@divisor+1
 11275  09EB  0830               	movf	i1sprintf@prec,w
 11276  09EC  00AB               	movwf	??i1_sprintf
 11277  09ED  072B               	addwf	??i1_sprintf,w
 11278  09EE  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11279  09EF  0084               	movwf	4
 11280  09F0  120A  158A  200A  120A  158A  	fcall	stringdir
 11281  09F5  00F0               	movwf	i1___lwdiv@divisor
 11282  09F6  120A  158A  200A  120A  158A  	fcall	stringdir
 11283  09FB  00F1               	movwf	i1___lwdiv@divisor+1
 11284  09FC  0832               	movf	i1sprintf@val+1,w
 11285  09FD  00F3               	movwf	i1___lwdiv@dividend+1
 11286  09FE  0831               	movf	i1sprintf@val,w
 11287  09FF  00F2               	movwf	i1___lwdiv@dividend
 11288  0A00  160A  118A  2004  120A  158A  	fcall	i1___lwdiv
 11289  0A05  0871               	movf	?i1___lwdiv+1,w
 11290  0A06  00FB               	movwf	i1___lwmod@dividend+1
 11291  0A07  0870               	movf	?i1___lwdiv,w
 11292  0A08  00FA               	movwf	i1___lwmod@dividend
 11293  0A09  160A  158A  266B  120A  158A  	fcall	i1___lwmod
 11294  0A0E  0878               	movf	?i1___lwmod,w
 11295  0A0F  3E30               	addlw	48
 11296  0A10  1283               	bcf	3,5	;RP0=0, select bank0
 11297  0A11  1303               	bcf	3,6	;RP1=0, select bank0
 11298  0A12  00AC               	movwf	??i1_sprintf+1
 11299  0A13  082C               	movf	??i1_sprintf+1,w
 11300  0A14  00B3               	movwf	i1sprintf@c
 11301  0A15                     i1l3176:	
 11302                           
 11303                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1549:    };
      +                          C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1550:    ((*
      +                          sp++ = (c)));
 11304  0A15  0833               	movf	i1sprintf@c,w
 11305  0A16  00AB               	movwf	??i1_sprintf
 11306  0A17  0820               	movf	i1sprintf@sp,w
 11307  0A18  0084               	movwf	4
 11308  0A19  1783               	bsf	3,7
 11309  0A1A  1C21               	btfss	i1sprintf@sp+1,0
 11310  0A1B  1383               	bcf	3,7
 11311  0A1C  082B               	movf	??i1_sprintf,w
 11312  0A1D  0080               	movwf	0
 11313  0A1E                     i1l3178:	
 11314  0A1E  3001               	movlw	1
 11315  0A1F  07A0               	addwf	i1sprintf@sp,f
 11316  0A20  1803               	skipnc
 11317  0A21  0AA1               	incf	i1sprintf@sp+1,f
 11318  0A22  3000               	movlw	0
 11319  0A23  07A1               	addwf	i1sprintf@sp+1,f
 11320  0A24                     i1l3180:	
 11321                           
 11322                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1500:   whi
      +                          le(prec--) {
 11323  0A24  30FF               	movlw	255
 11324  0A25  00AB               	movwf	??i1_sprintf
 11325  0A26  082B               	movf	??i1_sprintf,w
 11326  0A27  07B0               	addwf	i1sprintf@prec,f
 11327  0A28  0A30               	incf	i1sprintf@prec,w
 11328  0A29  1D03               	btfss	3,2
 11329  0A2A  2A2C               	goto	u434_21
 11330  0A2B  2A2D               	goto	u434_20
 11331  0A2C                     u434_21:	
 11332  0A2C  29E7               	goto	i1l3174
 11333  0A2D                     u434_20:	
 11334  0A2D                     i1l3182:	
 11335                           
 11336                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
 11337  0A2D  3001               	movlw	1
 11338  0A2E  07A2               	addwf	i1sprintf@f,f
 11339  0A2F  30FF               	movlw	-1
 11340  0A30  0722               	addwf	i1sprintf@f,w
 11341  0A31  0084               	movwf	4
 11342  0A32  120A  158A  200A  120A  158A  	fcall	stringdir
 11343  0A37  00AB               	movwf	??i1_sprintf
 11344  0A38  082B               	movf	??i1_sprintf,w
 11345  0A39  00B3               	movwf	i1sprintf@c
 11346  0A3A  0833               	movf	i1sprintf@c,w
 11347  0A3B  1D03               	btfss	3,2
 11348  0A3C  2A3E               	goto	u435_21
 11349  0A3D  2A3F               	goto	u435_20
 11350  0A3E                     u435_21:	
 11351  0A3E  2958               	goto	i1l3132
 11352  0A3F                     u435_20:	
 11353  0A3F                     i1l3184:	
 11354                           
 11355                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1564:  *sp 
      +                          = 0;
 11356  0A3F  0820               	movf	i1sprintf@sp,w
 11357  0A40  0084               	movwf	4
 11358  0A41  1783               	bsf	3,7
 11359  0A42  1C21               	btfss	i1sprintf@sp+1,0
 11360  0A43  1383               	bcf	3,7
 11361  0A44  0180               	clrf	0
 11362  0A45                     i1l494:	
 11363  0A45  0008               	return
 11364  0A46                     __end_ofi1_sprintf:	
 11365                           
 11366                           	psect	text45
 11367  1E6B                     __ptext45:	
 11368 ;; *************** function i1___lwmod *****************
 11369 ;; Defined at:
 11370 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
 11371 ;; Parameters:    Size  Location     Type
 11372 ;;  divisor         2    8[COMMON] unsigned int 
 11373 ;;  dividend        2   10[COMMON] unsigned int 
 11374 ;; Auto vars:     Size  Location     Type
 11375 ;;  __lwmod         1   13[COMMON] unsigned char 
 11376 ;; Return value:  Size  Location     Type
 11377 ;;                  2    8[COMMON] unsigned int 
 11378 ;; Registers used:
 11379 ;;		wreg, status,2, status,0
 11380 ;; Tracked objects:
 11381 ;;		On entry : 0/0
 11382 ;;		On exit  : 0/0
 11383 ;;		Unchanged: 0/0
 11384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11385 ;;      Params:         4       0       0       0       0
 11386 ;;      Locals:         1       0       0       0       0
 11387 ;;      Temps:          1       0       0       0       0
 11388 ;;      Totals:         6       0       0       0       0
 11389 ;;Total ram usage:        6 bytes
 11390 ;; Hardware stack levels used:    1
 11391 ;; This function calls:
 11392 ;;		Nothing
 11393 ;; This function is called by:
 11394 ;;		i1_sprintf
 11395 ;; This function uses a non-reentrant model
 11396 ;;
 11397                           
 11398                           
 11399                           ;psect for function i1___lwmod
 11400  1E6B                     i1___lwmod:	
 11401  1E6B                     i1l2958:	
 11402                           ;incstack = 0
 11403 ;; hardware stack exceeded
 11404                           ; Regs used in i1___lwmod: [wreg+status,2+status,0]
 11405                           
 11406  1E6B  0878               	movf	i1___lwmod@divisor,w
 11407  1E6C  0479               	iorwf	i1___lwmod@divisor+1,w
 11408  1E6D  1903               	btfsc	3,2
 11409  1E6E  2E70               	goto	u391_21
 11410  1E6F  2E71               	goto	u391_20
 11411  1E70                     u391_21:	
 11412  1E70  2EA0               	goto	i1l2976
 11413  1E71                     u391_20:	
 11414  1E71                     i1l2960:	
 11415  1E71  01FD               	clrf	i1___lwmod@counter
 11416  1E72  0AFD               	incf	i1___lwmod@counter,f
 11417  1E73  2E7F               	goto	i1l2966
 11418  1E74                     i1l2962:	
 11419  1E74  3001               	movlw	1
 11420  1E75                     u392_25:	
 11421  1E75  1003               	clrc
 11422  1E76  0DF8               	rlf	i1___lwmod@divisor,f
 11423  1E77  0DF9               	rlf	i1___lwmod@divisor+1,f
 11424  1E78  3EFF               	addlw	-1
 11425  1E79  1D03               	skipz
 11426  1E7A  2E75               	goto	u392_25
 11427  1E7B                     i1l2964:	
 11428  1E7B  3001               	movlw	1
 11429  1E7C  00FC               	movwf	??i1___lwmod
 11430  1E7D  087C               	movf	??i1___lwmod,w
 11431  1E7E  07FD               	addwf	i1___lwmod@counter,f
 11432  1E7F                     i1l2966:	
 11433  1E7F  1FF9               	btfss	i1___lwmod@divisor+1,7
 11434  1E80  2E82               	goto	u393_21
 11435  1E81  2E83               	goto	u393_20
 11436  1E82                     u393_21:	
 11437  1E82  2E74               	goto	i1l2962
 11438  1E83                     u393_20:	
 11439  1E83                     i1l2968:	
 11440  1E83  0879               	movf	i1___lwmod@divisor+1,w
 11441  1E84  027B               	subwf	i1___lwmod@dividend+1,w
 11442  1E85  1D03               	skipz
 11443  1E86  2E89               	goto	u394_25
 11444  1E87  0878               	movf	i1___lwmod@divisor,w
 11445  1E88  027A               	subwf	i1___lwmod@dividend,w
 11446  1E89                     u394_25:	
 11447  1E89  1C03               	skipc
 11448  1E8A  2E8C               	goto	u394_21
 11449  1E8B  2E8D               	goto	u394_20
 11450  1E8C                     u394_21:	
 11451  1E8C  2E93               	goto	i1l2972
 11452  1E8D                     u394_20:	
 11453  1E8D                     i1l2970:	
 11454  1E8D  0878               	movf	i1___lwmod@divisor,w
 11455  1E8E  02FA               	subwf	i1___lwmod@dividend,f
 11456  1E8F  0879               	movf	i1___lwmod@divisor+1,w
 11457  1E90  1C03               	skipc
 11458  1E91  03FB               	decf	i1___lwmod@dividend+1,f
 11459  1E92  02FB               	subwf	i1___lwmod@dividend+1,f
 11460  1E93                     i1l2972:	
 11461  1E93  3001               	movlw	1
 11462  1E94                     u395_25:	
 11463  1E94  1003               	clrc
 11464  1E95  0CF9               	rrf	i1___lwmod@divisor+1,f
 11465  1E96  0CF8               	rrf	i1___lwmod@divisor,f
 11466  1E97  3EFF               	addlw	-1
 11467  1E98  1D03               	skipz
 11468  1E99  2E94               	goto	u395_25
 11469  1E9A                     i1l2974:	
 11470  1E9A  3001               	movlw	1
 11471  1E9B  02FD               	subwf	i1___lwmod@counter,f
 11472  1E9C  1D03               	btfss	3,2
 11473  1E9D  2E9F               	goto	u396_21
 11474  1E9E  2EA0               	goto	u396_20
 11475  1E9F                     u396_21:	
 11476  1E9F  2E83               	goto	i1l2968
 11477  1EA0                     u396_20:	
 11478  1EA0                     i1l2976:	
 11479  1EA0  087B               	movf	i1___lwmod@dividend+1,w
 11480  1EA1  00F9               	movwf	?i1___lwmod+1
 11481  1EA2  087A               	movf	i1___lwmod@dividend,w
 11482  1EA3  00F8               	movwf	?i1___lwmod
 11483  1EA4                     i1l780:	
 11484  1EA4  0008               	return
 11485  1EA5                     __end_ofi1___lwmod:	
 11486                           
 11487                           	psect	text46
 11488  1004                     __ptext46:	
 11489 ;; *************** function i1___lwdiv *****************
 11490 ;; Defined at:
 11491 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
 11492 ;; Parameters:    Size  Location     Type
 11493 ;;  divisor         2    0[COMMON] unsigned int 
 11494 ;;  dividend        2    2[COMMON] unsigned int 
 11495 ;; Auto vars:     Size  Location     Type
 11496 ;;  __lwdiv         2    5[COMMON] unsigned int 
 11497 ;;  __lwdiv         1    7[COMMON] unsigned char 
 11498 ;; Return value:  Size  Location     Type
 11499 ;;                  2    0[COMMON] unsigned int 
 11500 ;; Registers used:
 11501 ;;		wreg, status,2, status,0
 11502 ;; Tracked objects:
 11503 ;;		On entry : 0/0
 11504 ;;		On exit  : 0/0
 11505 ;;		Unchanged: 0/0
 11506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11507 ;;      Params:         4       0       0       0       0
 11508 ;;      Locals:         3       0       0       0       0
 11509 ;;      Temps:          1       0       0       0       0
 11510 ;;      Totals:         8       0       0       0       0
 11511 ;;Total ram usage:        8 bytes
 11512 ;; Hardware stack levels used:    1
 11513 ;; This function calls:
 11514 ;;		Nothing
 11515 ;; This function is called by:
 11516 ;;		i1_sprintf
 11517 ;; This function uses a non-reentrant model
 11518 ;;
 11519                           
 11520                           
 11521                           ;psect for function i1___lwdiv
 11522  1004                     i1___lwdiv:	
 11523  1004                     i1l2932:	
 11524                           ;incstack = 0
 11525 ;; hardware stack exceeded
 11526                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
 11527                           
 11528  1004  01F5               	clrf	i1___lwdiv@quotient
 11529  1005  01F6               	clrf	i1___lwdiv@quotient+1
 11530  1006                     i1l2934:	
 11531  1006  0870               	movf	i1___lwdiv@divisor,w
 11532  1007  0471               	iorwf	i1___lwdiv@divisor+1,w
 11533  1008  1903               	btfsc	3,2
 11534  1009  280B               	goto	u384_21
 11535  100A  280C               	goto	u384_20
 11536  100B                     u384_21:	
 11537  100B  2843               	goto	i1l2954
 11538  100C                     u384_20:	
 11539  100C                     i1l2936:	
 11540  100C  01F7               	clrf	i1___lwdiv@counter
 11541  100D  0AF7               	incf	i1___lwdiv@counter,f
 11542  100E  281A               	goto	i1l2942
 11543  100F                     i1l2938:	
 11544  100F  3001               	movlw	1
 11545  1010                     u385_25:	
 11546  1010  1003               	clrc
 11547  1011  0DF0               	rlf	i1___lwdiv@divisor,f
 11548  1012  0DF1               	rlf	i1___lwdiv@divisor+1,f
 11549  1013  3EFF               	addlw	-1
 11550  1014  1D03               	skipz
 11551  1015  2810               	goto	u385_25
 11552  1016                     i1l2940:	
 11553  1016  3001               	movlw	1
 11554  1017  00F4               	movwf	??i1___lwdiv
 11555  1018  0874               	movf	??i1___lwdiv,w
 11556  1019  07F7               	addwf	i1___lwdiv@counter,f
 11557  101A                     i1l2942:	
 11558  101A  1FF1               	btfss	i1___lwdiv@divisor+1,7
 11559  101B  281D               	goto	u386_21
 11560  101C  281E               	goto	u386_20
 11561  101D                     u386_21:	
 11562  101D  280F               	goto	i1l2938
 11563  101E                     u386_20:	
 11564  101E                     i1l2944:	
 11565  101E  3001               	movlw	1
 11566  101F                     u387_25:	
 11567  101F  1003               	clrc
 11568  1020  0DF5               	rlf	i1___lwdiv@quotient,f
 11569  1021  0DF6               	rlf	i1___lwdiv@quotient+1,f
 11570  1022  3EFF               	addlw	-1
 11571  1023  1D03               	skipz
 11572  1024  281F               	goto	u387_25
 11573  1025  0871               	movf	i1___lwdiv@divisor+1,w
 11574  1026  0273               	subwf	i1___lwdiv@dividend+1,w
 11575  1027  1D03               	skipz
 11576  1028  282B               	goto	u388_25
 11577  1029  0870               	movf	i1___lwdiv@divisor,w
 11578  102A  0272               	subwf	i1___lwdiv@dividend,w
 11579  102B                     u388_25:	
 11580  102B  1C03               	skipc
 11581  102C  282E               	goto	u388_21
 11582  102D  282F               	goto	u388_20
 11583  102E                     u388_21:	
 11584  102E  2836               	goto	i1l2950
 11585  102F                     u388_20:	
 11586  102F                     i1l2946:	
 11587  102F  0870               	movf	i1___lwdiv@divisor,w
 11588  1030  02F2               	subwf	i1___lwdiv@dividend,f
 11589  1031  0871               	movf	i1___lwdiv@divisor+1,w
 11590  1032  1C03               	skipc
 11591  1033  03F3               	decf	i1___lwdiv@dividend+1,f
 11592  1034  02F3               	subwf	i1___lwdiv@dividend+1,f
 11593  1035                     i1l2948:	
 11594  1035  1475               	bsf	i1___lwdiv@quotient,0
 11595  1036                     i1l2950:	
 11596  1036  3001               	movlw	1
 11597  1037                     u389_25:	
 11598  1037  1003               	clrc
 11599  1038  0CF1               	rrf	i1___lwdiv@divisor+1,f
 11600  1039  0CF0               	rrf	i1___lwdiv@divisor,f
 11601  103A  3EFF               	addlw	-1
 11602  103B  1D03               	skipz
 11603  103C  2837               	goto	u389_25
 11604  103D                     i1l2952:	
 11605  103D  3001               	movlw	1
 11606  103E  02F7               	subwf	i1___lwdiv@counter,f
 11607  103F  1D03               	btfss	3,2
 11608  1040  2842               	goto	u390_21
 11609  1041  2843               	goto	u390_20
 11610  1042                     u390_21:	
 11611  1042  281E               	goto	i1l2944
 11612  1043                     u390_20:	
 11613  1043                     i1l2954:	
 11614  1043  0876               	movf	i1___lwdiv@quotient+1,w
 11615  1044  00F1               	movwf	?i1___lwdiv+1
 11616  1045  0875               	movf	i1___lwdiv@quotient,w
 11617  1046  00F0               	movwf	?i1___lwdiv
 11618  1047                     i1l770:	
 11619  1047  0008               	return
 11620  1048                     __end_ofi1___lwdiv:	
 11621                           
 11622                           	psect	text47
 11623  1F1F                     __ptext47:	
 11624 ;; *************** function i1_UART_Write_Text *****************
 11625 ;; Defined at:
 11626 ;;		line 42 in file "UART.c"
 11627 ;; Parameters:    Size  Location     Type
 11628 ;;  text            2    1[COMMON] PTR unsigned char 
 11629 ;;		 -> UART_Write_Decimal@string(10), STR_19(2), STR_18(19), STR_17(2), 
 11630 ;;		 -> STR_16(2), STR_15(17), STR_14(2), STR_13(2), 
 11631 ;;		 -> STR_12(17), read_from_EPPROM@data(10), STR_11(2), STR_10(11), 
 11632 ;;		 -> STR_9(2), STR_8(12), STR_7(18), STR_6(16), 
 11633 ;;		 -> STR_5(12), STR_4(2), STR_3(25), read_from_MR@output(8), 
 11634 ;;		 -> STR_2(2), json(80), 
 11635 ;; Auto vars:     Size  Location     Type
 11636 ;;  UART_Write_T    2    6[COMMON] int 
 11637 ;; Return value:  Size  Location     Type
 11638 ;;                  1    wreg      void 
 11639 ;; Registers used:
 11640 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11641 ;; Tracked objects:
 11642 ;;		On entry : 0/0
 11643 ;;		On exit  : 0/0
 11644 ;;		Unchanged: 0/0
 11645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11646 ;;      Params:         2       0       0       0       0
 11647 ;;      Locals:         2       0       0       0       0
 11648 ;;      Temps:          3       0       0       0       0
 11649 ;;      Totals:         7       0       0       0       0
 11650 ;;Total ram usage:        7 bytes
 11651 ;; Hardware stack levels used:    1
 11652 ;; Hardware stack levels required when called:    1
 11653 ;; This function calls:
 11654 ;;		i1_UART_Write
 11655 ;; This function is called by:
 11656 ;;		_Interrupt_Time
 11657 ;;		i1_print_json
 11658 ;; This function uses a non-reentrant model
 11659 ;;
 11660                           
 11661                           
 11662                           ;psect for function i1_UART_Write_Text
 11663  1F1F                     i1_UART_Write_Text:	
 11664  1F1F                     i1l4440:	
 11665                           ;incstack = 0
 11666 ;; hardware stack exceeded
 11667                           ; Regs used in i1_UART_Write_Text: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 11668                           
 11669                           
 11670                           ;UART.c: 42: void UART_Write_Text(char *text);UART.c: 43: {;UART.c: 44:   int i;;UART.c:
      +                           45:   for(i=0;text[i]!='\0';i++)
 11671  1F1F  01F6               	clrf	i1UART_Write_Text@i
 11672  1F20  01F7               	clrf	i1UART_Write_Text@i+1
 11673  1F21  2F44               	goto	i1l4446
 11674  1F22                     i1l4442:	
 11675                           
 11676                           ;UART.c: 46:     UART_Write(text[i]);
 11677  1F22  0876               	movf	i1UART_Write_Text@i,w
 11678  1F23  0771               	addwf	i1UART_Write_Text@text,w
 11679  1F24  00F4               	movwf	??i1_UART_Write_Text+1
 11680  1F25  0872               	movf	i1UART_Write_Text@text+1,w
 11681  1F26  00F3               	movwf	??i1_UART_Write_Text
 11682  1F27  1803               	skipnc
 11683  1F28  0AF3               	incf	??i1_UART_Write_Text,f
 11684  1F29  1FF6               	btfss	i1UART_Write_Text@i,7
 11685  1F2A  2F2C               	goto	u663_20
 11686  1F2B  03F3               	decf	??i1_UART_Write_Text,f
 11687  1F2C                     u663_20:	
 11688  1F2C  0873               	movf	??i1_UART_Write_Text,w
 11689  1F2D  00F5               	movwf	??i1_UART_Write_Text+2
 11690  1F2E  0875               	movf	??i1_UART_Write_Text+2,w
 11691  1F2F  1283               	bcf	3,5	;RP0=0, select bank0
 11692  1F30  1303               	bcf	3,6	;RP1=0, select bank0
 11693  1F31  00FF               	movwf	btemp+1
 11694  1F32  0874               	movf	??i1_UART_Write_Text+1,w
 11695  1F33  0084               	movwf	4
 11696  1F34  120A  158A  2000  160A  158A  	fcall	stringtab
 11697  1F39  160A  158A  240A  160A  158A  	fcall	i1_UART_Write
 11698  1F3E                     i1l4444:	
 11699  1F3E  3001               	movlw	1
 11700  1F3F  07F6               	addwf	i1UART_Write_Text@i,f
 11701  1F40  1803               	skipnc
 11702  1F41  0AF7               	incf	i1UART_Write_Text@i+1,f
 11703  1F42  3000               	movlw	0
 11704  1F43  07F7               	addwf	i1UART_Write_Text@i+1,f
 11705  1F44                     i1l4446:	
 11706  1F44  0876               	movf	i1UART_Write_Text@i,w
 11707  1F45  0771               	addwf	i1UART_Write_Text@text,w
 11708  1F46  00F4               	movwf	??i1_UART_Write_Text+1
 11709  1F47  0872               	movf	i1UART_Write_Text@text+1,w
 11710  1F48  00F3               	movwf	??i1_UART_Write_Text
 11711  1F49  1803               	skipnc
 11712  1F4A  0AF3               	incf	??i1_UART_Write_Text,f
 11713  1F4B  1FF6               	btfss	i1UART_Write_Text@i,7
 11714  1F4C  2F4E               	goto	u664_20
 11715  1F4D  03F3               	decf	??i1_UART_Write_Text,f
 11716  1F4E                     u664_20:	
 11717  1F4E  0873               	movf	??i1_UART_Write_Text,w
 11718  1F4F  00F5               	movwf	??i1_UART_Write_Text+2
 11719  1F50  0875               	movf	??i1_UART_Write_Text+2,w
 11720  1F51  1283               	bcf	3,5	;RP0=0, select bank0
 11721  1F52  1303               	bcf	3,6	;RP1=0, select bank0
 11722  1F53  00FF               	movwf	btemp+1
 11723  1F54  0874               	movf	??i1_UART_Write_Text+1,w
 11724  1F55  0084               	movwf	4
 11725  1F56  120A  158A  2000  160A  158A  	fcall	stringtab
 11726  1F5B  3A00               	xorlw	0
 11727  1F5C  1D03               	skipz
 11728  1F5D  2F5F               	goto	u665_21
 11729  1F5E  2F60               	goto	u665_20
 11730  1F5F                     u665_21:	
 11731  1F5F  2F22               	goto	i1l4442
 11732  1F60                     u665_20:	
 11733  1F60                     i1l321:	
 11734  1F60  0008               	return
 11735  1F61                     __end_ofi1_UART_Write_Text:	
 11736                           
 11737                           	psect	text48
 11738  1C0A                     __ptext48:	
 11739 ;; *************** function i1_UART_Write *****************
 11740 ;; Defined at:
 11741 ;;		line 32 in file "UART.c"
 11742 ;; Parameters:    Size  Location     Type
 11743 ;;  data            1    wreg     unsigned char 
 11744 ;; Auto vars:     Size  Location     Type
 11745 ;;  data            1    0[COMMON] unsigned char 
 11746 ;; Return value:  Size  Location     Type
 11747 ;;                  1    wreg      void 
 11748 ;; Registers used:
 11749 ;;		wreg
 11750 ;; Tracked objects:
 11751 ;;		On entry : 0/0
 11752 ;;		On exit  : 0/0
 11753 ;;		Unchanged: 0/0
 11754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11755 ;;      Params:         0       0       0       0       0
 11756 ;;      Locals:         1       0       0       0       0
 11757 ;;      Temps:          0       0       0       0       0
 11758 ;;      Totals:         1       0       0       0       0
 11759 ;;Total ram usage:        1 bytes
 11760 ;; Hardware stack levels used:    1
 11761 ;; This function calls:
 11762 ;;		Nothing
 11763 ;; This function is called by:
 11764 ;;		i1_UART_Write_Text
 11765 ;; This function uses a non-reentrant model
 11766 ;;
 11767                           
 11768                           
 11769                           ;psect for function i1_UART_Write
 11770  1C0A                     i1_UART_Write:	
 11771                           
 11772                           ;incstack = 0
 11773 ;; hardware stack exceeded
 11774                           ; Regs used in i1_UART_Write: [wreg]
 11775                           ;i1UART_Write@data stored from wreg
 11776  1C0A  00F0               	movwf	i1UART_Write@data
 11777  1C0B                     i1l4294:	
 11778  1C0B                     i1l309:	
 11779                           ;UART.c: 32: void UART_Write(char data);UART.c: 33: {;UART.c: 35:   while(!TRMT);
 11780                           
 11781  1C0B  1683               	bsf	3,5	;RP0=1, select bank1
 11782  1C0C  1303               	bcf	3,6	;RP1=0, select bank1
 11783  1C0D  1C98               	btfss	24,1	;volatile
 11784  1C0E  2C10               	goto	u633_21
 11785  1C0F  2C11               	goto	u633_20
 11786  1C10                     u633_21:	
 11787  1C10  2C0B               	goto	i1l309
 11788  1C11                     u633_20:	
 11789  1C11                     i1l4296:	
 11790                           
 11791                           ;UART.c: 36:   TXREG = data;
 11792  1C11  0870               	movf	i1UART_Write@data,w
 11793  1C12  1283               	bcf	3,5	;RP0=0, select bank0
 11794  1C13  1303               	bcf	3,6	;RP1=0, select bank0
 11795  1C14  0099               	movwf	25	;volatile
 11796  1C15                     i1l312:	
 11797  1C15  0008               	return
 11798  1C16                     __end_ofi1_UART_Write:	
 11799                           
 11800                           	psect	text49
 11801  1CFE                     __ptext49:	
 11802 ;; *************** function i1___wmul *****************
 11803 ;; Defined at:
 11804 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
 11805 ;; Parameters:    Size  Location     Type
 11806 ;;  multiplier      2    9[COMMON] unsigned int 
 11807 ;;  multiplicand    2   11[COMMON] unsigned int 
 11808 ;; Auto vars:     Size  Location     Type
 11809 ;;  __wmul          2    0[BANK0 ] unsigned int 
 11810 ;; Return value:  Size  Location     Type
 11811 ;;                  2    9[COMMON] unsigned int 
 11812 ;; Registers used:
 11813 ;;		wreg, status,2, status,0
 11814 ;; Tracked objects:
 11815 ;;		On entry : 0/0
 11816 ;;		On exit  : 0/0
 11817 ;;		Unchanged: 0/0
 11818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11819 ;;      Params:         4       0       0       0       0
 11820 ;;      Locals:         0       2       0       0       0
 11821 ;;      Temps:          0       0       0       0       0
 11822 ;;      Totals:         4       2       0       0       0
 11823 ;;Total ram usage:        6 bytes
 11824 ;; Hardware stack levels used:    1
 11825 ;; This function calls:
 11826 ;;		Nothing
 11827 ;; This function is called by:
 11828 ;;		_Interrupt_Time
 11829 ;; This function uses a non-reentrant model
 11830 ;;
 11831                           
 11832                           
 11833                           ;psect for function i1___wmul
 11834  1CFE                     i1___wmul:	
 11835  1CFE                     i1l3470:	
 11836                           ;incstack = 0
 11837                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
 11838                           
 11839  1CFE  1283               	bcf	3,5	;RP0=0, select bank0
 11840  1CFF  1303               	bcf	3,6	;RP1=0, select bank0
 11841  1D00  01A0               	clrf	i1___wmul@product
 11842  1D01  01A1               	clrf	i1___wmul@product+1
 11843  1D02                     i1l3472:	
 11844  1D02  1C79               	btfss	i1___wmul@multiplier,0
 11845  1D03  2D05               	goto	u483_21
 11846  1D04  2D06               	goto	u483_20
 11847  1D05                     u483_21:	
 11848  1D05  2D0E               	goto	i1l498
 11849  1D06                     u483_20:	
 11850  1D06                     i1l3474:	
 11851  1D06  087B               	movf	i1___wmul@multiplicand,w
 11852  1D07  1283               	bcf	3,5	;RP0=0, select bank0
 11853  1D08  1303               	bcf	3,6	;RP1=0, select bank0
 11854  1D09  07A0               	addwf	i1___wmul@product,f
 11855  1D0A  1803               	skipnc
 11856  1D0B  0AA1               	incf	i1___wmul@product+1,f
 11857  1D0C  087C               	movf	i1___wmul@multiplicand+1,w
 11858  1D0D  07A1               	addwf	i1___wmul@product+1,f
 11859  1D0E                     i1l498:	
 11860  1D0E  3001               	movlw	1
 11861  1D0F                     u484_25:	
 11862  1D0F  1003               	clrc
 11863  1D10  0DFB               	rlf	i1___wmul@multiplicand,f
 11864  1D11  0DFC               	rlf	i1___wmul@multiplicand+1,f
 11865  1D12  3EFF               	addlw	-1
 11866  1D13  1D03               	skipz
 11867  1D14  2D0F               	goto	u484_25
 11868  1D15                     i1l3476:	
 11869  1D15  3001               	movlw	1
 11870  1D16                     u485_25:	
 11871  1D16  1003               	clrc
 11872  1D17  0CFA               	rrf	i1___wmul@multiplier+1,f
 11873  1D18  0CF9               	rrf	i1___wmul@multiplier,f
 11874  1D19  3EFF               	addlw	-1
 11875  1D1A  1D03               	skipz
 11876  1D1B  2D16               	goto	u485_25
 11877  1D1C                     i1l3478:	
 11878  1D1C  0879               	movf	i1___wmul@multiplier,w
 11879  1D1D  047A               	iorwf	i1___wmul@multiplier+1,w
 11880  1D1E  1D03               	btfss	3,2
 11881  1D1F  2D21               	goto	u486_21
 11882  1D20  2D22               	goto	u486_20
 11883  1D21                     u486_21:	
 11884  1D21  2D02               	goto	i1l3472
 11885  1D22                     u486_20:	
 11886  1D22                     i1l3480:	
 11887  1D22  1283               	bcf	3,5	;RP0=0, select bank0
 11888  1D23  1303               	bcf	3,6	;RP1=0, select bank0
 11889  1D24  0821               	movf	i1___wmul@product+1,w
 11890  1D25  00FA               	movwf	?i1___wmul+1
 11891  1D26  0820               	movf	i1___wmul@product,w
 11892  1D27  00F9               	movwf	?i1___wmul
 11893  1D28                     i1l500:	
 11894  1D28  0008               	return
 11895  1D29                     __end_ofi1___wmul:	
 11896                           
 11897                           	psect	text50
 11898  1161                     __ptext50:	
 11899 ;; *************** function ___awdiv *****************
 11900 ;; Defined at:
 11901 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
 11902 ;; Parameters:    Size  Location     Type
 11903 ;;  divisor         2    0[COMMON] int 
 11904 ;;  dividend        2    2[COMMON] int 
 11905 ;; Auto vars:     Size  Location     Type
 11906 ;;  quotient        2    7[COMMON] int 
 11907 ;;  sign            1    6[COMMON] unsigned char 
 11908 ;;  counter         1    5[COMMON] unsigned char 
 11909 ;; Return value:  Size  Location     Type
 11910 ;;                  2    0[COMMON] int 
 11911 ;; Registers used:
 11912 ;;		wreg, status,2, status,0
 11913 ;; Tracked objects:
 11914 ;;		On entry : 0/0
 11915 ;;		On exit  : 0/0
 11916 ;;		Unchanged: 0/0
 11917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11918 ;;      Params:         4       0       0       0       0
 11919 ;;      Locals:         4       0       0       0       0
 11920 ;;      Temps:          1       0       0       0       0
 11921 ;;      Totals:         9       0       0       0       0
 11922 ;;Total ram usage:        9 bytes
 11923 ;; Hardware stack levels used:    1
 11924 ;; This function calls:
 11925 ;;		Nothing
 11926 ;; This function is called by:
 11927 ;;		_Interrupt_Time
 11928 ;; This function uses a non-reentrant model
 11929 ;;
 11930                           
 11931                           
 11932                           ;psect for function ___awdiv
 11933  1161                     ___awdiv:	
 11934  1161                     i1l3424:	
 11935                           ;incstack = 0
 11936                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 11937                           
 11938  1161  01F6               	clrf	___awdiv@sign
 11939  1162                     i1l3426:	
 11940  1162  1FF1               	btfss	___awdiv@divisor+1,7
 11941  1163  2965               	goto	u473_21
 11942  1164  2966               	goto	u473_20
 11943  1165                     u473_21:	
 11944  1165  296D               	goto	i1l3432
 11945  1166                     u473_20:	
 11946  1166                     i1l3428:	
 11947  1166  09F0               	comf	___awdiv@divisor,f
 11948  1167  09F1               	comf	___awdiv@divisor+1,f
 11949  1168  0AF0               	incf	___awdiv@divisor,f
 11950  1169  1903               	skipnz
 11951  116A  0AF1               	incf	___awdiv@divisor+1,f
 11952  116B                     i1l3430:	
 11953  116B  01F6               	clrf	___awdiv@sign
 11954  116C  0AF6               	incf	___awdiv@sign,f
 11955  116D                     i1l3432:	
 11956  116D  1FF3               	btfss	___awdiv@dividend+1,7
 11957  116E  2970               	goto	u474_21
 11958  116F  2971               	goto	u474_20
 11959  1170                     u474_21:	
 11960  1170  297A               	goto	i1l3438
 11961  1171                     u474_20:	
 11962  1171                     i1l3434:	
 11963  1171  09F2               	comf	___awdiv@dividend,f
 11964  1172  09F3               	comf	___awdiv@dividend+1,f
 11965  1173  0AF2               	incf	___awdiv@dividend,f
 11966  1174  1903               	skipnz
 11967  1175  0AF3               	incf	___awdiv@dividend+1,f
 11968  1176                     i1l3436:	
 11969  1176  3001               	movlw	1
 11970  1177  00F4               	movwf	??___awdiv
 11971  1178  0874               	movf	??___awdiv,w
 11972  1179  06F6               	xorwf	___awdiv@sign,f
 11973  117A                     i1l3438:	
 11974  117A  01F7               	clrf	___awdiv@quotient
 11975  117B  01F8               	clrf	___awdiv@quotient+1
 11976  117C                     i1l3440:	
 11977  117C  0870               	movf	___awdiv@divisor,w
 11978  117D  0471               	iorwf	___awdiv@divisor+1,w
 11979  117E  1903               	btfsc	3,2
 11980  117F  2981               	goto	u475_21
 11981  1180  2982               	goto	u475_20
 11982  1181                     u475_21:	
 11983  1181  29B9               	goto	i1l3460
 11984  1182                     u475_20:	
 11985  1182                     i1l3442:	
 11986  1182  01F5               	clrf	___awdiv@counter
 11987  1183  0AF5               	incf	___awdiv@counter,f
 11988  1184  2990               	goto	i1l3448
 11989  1185                     i1l3444:	
 11990  1185  3001               	movlw	1
 11991  1186                     u476_25:	
 11992  1186  1003               	clrc
 11993  1187  0DF0               	rlf	___awdiv@divisor,f
 11994  1188  0DF1               	rlf	___awdiv@divisor+1,f
 11995  1189  3EFF               	addlw	-1
 11996  118A  1D03               	skipz
 11997  118B  2986               	goto	u476_25
 11998  118C                     i1l3446:	
 11999  118C  3001               	movlw	1
 12000  118D  00F4               	movwf	??___awdiv
 12001  118E  0874               	movf	??___awdiv,w
 12002  118F  07F5               	addwf	___awdiv@counter,f
 12003  1190                     i1l3448:	
 12004  1190  1FF1               	btfss	___awdiv@divisor+1,7
 12005  1191  2993               	goto	u477_21
 12006  1192  2994               	goto	u477_20
 12007  1193                     u477_21:	
 12008  1193  2985               	goto	i1l3444
 12009  1194                     u477_20:	
 12010  1194                     i1l3450:	
 12011  1194  3001               	movlw	1
 12012  1195                     u478_25:	
 12013  1195  1003               	clrc
 12014  1196  0DF7               	rlf	___awdiv@quotient,f
 12015  1197  0DF8               	rlf	___awdiv@quotient+1,f
 12016  1198  3EFF               	addlw	-1
 12017  1199  1D03               	skipz
 12018  119A  2995               	goto	u478_25
 12019  119B  0871               	movf	___awdiv@divisor+1,w
 12020  119C  0273               	subwf	___awdiv@dividend+1,w
 12021  119D  1D03               	skipz
 12022  119E  29A1               	goto	u479_25
 12023  119F  0870               	movf	___awdiv@divisor,w
 12024  11A0  0272               	subwf	___awdiv@dividend,w
 12025  11A1                     u479_25:	
 12026  11A1  1C03               	skipc
 12027  11A2  29A4               	goto	u479_21
 12028  11A3  29A5               	goto	u479_20
 12029  11A4                     u479_21:	
 12030  11A4  29AC               	goto	i1l3456
 12031  11A5                     u479_20:	
 12032  11A5                     i1l3452:	
 12033  11A5  0870               	movf	___awdiv@divisor,w
 12034  11A6  02F2               	subwf	___awdiv@dividend,f
 12035  11A7  0871               	movf	___awdiv@divisor+1,w
 12036  11A8  1C03               	skipc
 12037  11A9  03F3               	decf	___awdiv@dividend+1,f
 12038  11AA  02F3               	subwf	___awdiv@dividend+1,f
 12039  11AB                     i1l3454:	
 12040  11AB  1477               	bsf	___awdiv@quotient,0
 12041  11AC                     i1l3456:	
 12042  11AC  3001               	movlw	1
 12043  11AD                     u480_25:	
 12044  11AD  1003               	clrc
 12045  11AE  0CF1               	rrf	___awdiv@divisor+1,f
 12046  11AF  0CF0               	rrf	___awdiv@divisor,f
 12047  11B0  3EFF               	addlw	-1
 12048  11B1  1D03               	skipz
 12049  11B2  29AD               	goto	u480_25
 12050  11B3                     i1l3458:	
 12051  11B3  3001               	movlw	1
 12052  11B4  02F5               	subwf	___awdiv@counter,f
 12053  11B5  1D03               	btfss	3,2
 12054  11B6  29B8               	goto	u481_21
 12055  11B7  29B9               	goto	u481_20
 12056  11B8                     u481_21:	
 12057  11B8  2994               	goto	i1l3450
 12058  11B9                     u481_20:	
 12059  11B9                     i1l3460:	
 12060  11B9  0876               	movf	___awdiv@sign,w
 12061  11BA  1903               	btfsc	3,2
 12062  11BB  29BD               	goto	u482_21
 12063  11BC  29BE               	goto	u482_20
 12064  11BD                     u482_21:	
 12065  11BD  29C3               	goto	i1l3464
 12066  11BE                     u482_20:	
 12067  11BE                     i1l3462:	
 12068  11BE  09F7               	comf	___awdiv@quotient,f
 12069  11BF  09F8               	comf	___awdiv@quotient+1,f
 12070  11C0  0AF7               	incf	___awdiv@quotient,f
 12071  11C1  1903               	skipnz
 12072  11C2  0AF8               	incf	___awdiv@quotient+1,f
 12073  11C3                     i1l3464:	
 12074  11C3  0878               	movf	___awdiv@quotient+1,w
 12075  11C4  00F1               	movwf	?___awdiv+1
 12076  11C5  0877               	movf	___awdiv@quotient,w
 12077  11C6  00F0               	movwf	?___awdiv
 12078  11C7                     i1l651:	
 12079  11C7  0008               	return
 12080  11C8                     __end_of___awdiv:	
 12081  007E                     btemp	set	126	;btemp
 12082  007E                     wtemp0	set	126


Data Sizes:
    Strings     224
    Constant    14
    Data        34
    BSS         104
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     31      53
    BANK1            80     78      80
    BANK3            96     53      87
    BANK2            96     15      95

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 30
		 -> write_to_EPPROM@text1(BANK1[30]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 30
		 -> write_to_EPPROM@text1(BANK1[30]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 74
		 -> STR_20(CODE[3]), STR_1(CODE[74]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 80
		 -> UART_Write_Decimal@string(BANK1[10]), json(BANK2[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    UART_Read_Text@Output	PTR unsigned char  size(1) Largest target is 8
		 -> read_from_MR@output(BANK1[8]), 

    UART_Write_Text@text	PTR unsigned char  size(2) Largest target is 80
		 -> UART_Write_Decimal@string(BANK1[10]), STR_19(CODE[2]), STR_18(CODE[19]), STR_17(CODE[2]), 
		 -> STR_16(CODE[2]), STR_15(CODE[17]), STR_14(CODE[2]), STR_13(CODE[2]), 
		 -> STR_12(CODE[17]), read_from_EPPROM@data(BANK1[10]), STR_11(CODE[2]), STR_10(CODE[11]), 
		 -> STR_9(CODE[2]), STR_8(CODE[12]), STR_7(CODE[18]), STR_6(CODE[16]), 
		 -> STR_5(CODE[12]), STR_4(CODE[2]), STR_3(CODE[25]), read_from_MR@output(BANK1[8]), 
		 -> STR_2(CODE[2]), json(BANK2[80]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _Interrupt_Time in COMMON

    i1_sprintf->i1___lwmod
    i1___lwmod->i1___lwdiv
    i1_UART_Write_Text->i1_UART_Write
    i1___wmul->___awdiv

Critical Paths under _main in BANK0

    _main->___wmul
    _main->_teclado
    _write_to_EPPROM->_strlen
    _read_from_MR->_UART_Read_Text
    _read_from_MR->___wmul
    _read_from_EPPROM->_I2C_Read
    _move_the_fan->_ADC_Read
    _sprintf->___lwdiv
    ___lwmod->___lwdiv
    _UART_Write_Text->_UART_Write
    _UART_Init->___aldiv
    _PWM_Initialize->___aldiv
    _I2C_init->___lldiv
    ___lldiv->___lmul
    _get_temperatura->_ADC_Read
    ___xxtofl->___aldiv
    ___flmul->__Umul8_16
    ___fldiv->__Umul8_16
    _get_humidade->_ADC_Read

Critical Paths under _Interrupt_Time in BANK0

    _Interrupt_Time->i1_print_json
    i1_print_json->i1_sprintf

Critical Paths under _main in BANK1

    _write_to_EPPROM->_strlen
    _read_from_MR->_UART_Write_Decimal
    _UART_Write_Decimal->_sprintf
    _read_from_EPPROM->_UART_Write_Text
    _PWM_Duty->___fltol
    _alarm->_print_json
    _print_json->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _UART_Init->___aldiv
    _PWM_Initialize->___aldiv
    _I2C_init->___lldiv
    ___lldiv->___lmul
    _get_temperatura->___fltol
    ___xxtofl->___aldiv
    ___fltol->___flmul
    ___flmul->___fldiv
    ___fldiv->___xxtofl
    _get_humidade->_ADC_Read

Critical Paths under _Interrupt_Time in BANK1

    None.

Critical Paths under _main in BANK3

    _main->_Aquisicao_Dados
    _move_the_fan->_PWM_Duty
    _PWM_Duty->___flmul
    _Aquisicao_Dados->_get_temperatura
    _get_temperatura->___flmul
    ___fltol->___flmul

Critical Paths under _Interrupt_Time in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Interrupt_Time in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                29    29      0   43251
                                             39 BANK3     14    14      0
                                              0 BANK2     15    15      0
                           _ADC_Init
                    _Aquisicao_Dados
                           _I2C_init
                     _PWM_Initialize
                    _UART_Data_Ready
                          _UART_Init
                         _UART_Write
                    _UART_Write_Text
                             ___wmul
                        _alarm_check
                       _move_the_fan
                   _read_from_EPPROM
                       _read_from_MR
                            _teclado
                    _write_to_EPPROM
 ---------------------------------------------------------------------------------
 (1) _write_to_EPPROM                                     38    38      0     910
                                              2 BANK1     38    38      0
                          _I2C_Begin
                            _I2C_End
                          _I2C_Write
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               5     3      2     166
                                             27 BANK0      3     1      2
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _teclado                                              9     7      2     622
                                             27 BANK0      4     2      2
                                              0 BANK1      5     5      0
 ---------------------------------------------------------------------------------
 (1) _read_from_MR                                        30    24      6   12123
                                             43 BANK1     30    24      6
                     _UART_Read_Text
                 _UART_Write_Decimal
                    _UART_Write_Text
                             ___wmul
                         _print_json
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1326
                                             27 BANK0      4     0      4
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (2) _UART_Write_Decimal                                  13    11      2    4033
                                             30 BANK1     13    11      2
                    _UART_Write_Text
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _UART_Read_Text                                       9     7      2     259
                                             27 BANK0      4     2      2
                                              0 BANK1      5     5      0
                          _UART_Read
 ---------------------------------------------------------------------------------
 (3) _UART_Read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_from_EPPROM                                    12    12      0    2777
                                              5 BANK1     12    12      0
                          _I2C_Begin
                            _I2C_End
                           _I2C_Read
                          _I2C_Write
                    _UART_Write_Text
 ---------------------------------------------------------------------------------
 (2) _I2C_Write                                            2     0      2     571
                                             27 BANK0      2     0      2
                           _I2C_Hold
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             4     2      2     131
                                             27 BANK0      4     2      2
                           _I2C_Hold
 ---------------------------------------------------------------------------------
 (2) _I2C_End                                              0     0      0       0
                           _I2C_Hold
 ---------------------------------------------------------------------------------
 (2) _I2C_Begin                                            0     0      0       0
                           _I2C_Hold
 ---------------------------------------------------------------------------------
 (3) _I2C_Hold                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _move_the_fan                                         2     2      0    8286
                                             19 BANK3      2     2      0
                           _ADC_Read
                           _PWM_Duty
 ---------------------------------------------------------------------------------
 (2) _PWM_Duty                                             6     4      2    8221
                                             13 BANK3      6     4      2
                            ___aldiv
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _alarm_check                                          9     3      6    4013
                                             31 BANK1      9     3      6
                              _alarm
 ---------------------------------------------------------------------------------
 (2) _alarm                                                0     0      0    3790
                         _print_json
 ---------------------------------------------------------------------------------
 (2) _print_json                                           1     1      0    3790
                                             30 BANK1      1     1      0
                    _UART_Write_Text
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             28    17     11    1789
                                             10 BANK1     20     9     11
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     412
                                              4 BANK1      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     421
                                             27 BANK0      4     0      4
                                              0 BANK1      4     4      0
 ---------------------------------------------------------------------------------
 (3) _UART_Write_Text                                      7     5      2    2001
                                             28 BANK0      2     0      2
                                              0 BANK1      5     5      0
                         _UART_Write
 ---------------------------------------------------------------------------------
 (4) _UART_Write                                           1     1      0      31
                                             27 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           18    14      4    1478
                                             28 BANK0      2     2      0
                                             14 BANK1     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (1) _UART_Data_Ready                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Initialize                                       4     4      0    1165
                                             14 BANK1      4     4      0
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             15     7      8    1165
                                             27 BANK0      1     1      0
                                              0 BANK1     14     6      8
 ---------------------------------------------------------------------------------
 (1) _I2C_init                                             8     4      4     858
                                             25 BANK1      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     316
                                             27 BANK0      1     1      0
                                              0 BANK1     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     421
                                             28 BANK0      1     1      0
                                             12 BANK1     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Aquisicao_Dados                                     20    12      8    7111
                                             19 BANK3     20    12      8
                       _get_humidade
                    _get_temperatura
 ---------------------------------------------------------------------------------
 (2) _get_temperatura                                      6     4      2    6938
                                             13 BANK3      6     4      2
                           _ADC_Read
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     746
                                             14 BANK1     14    10      4
                            ___aldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             11     7      4     517
                                             67 BANK1     11     7      4
                            ___aldiv (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    3533
                                             54 BANK1     13     5      8
                                              0 BANK3     13    13      0
                          __Umul8_16
                            ___aldiv (ARG)
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     980
                                             27 BANK0      4     2      2
                                              0 BANK1      5     5      0
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             26    18      8    2043
                                             28 BANK1     26    18      8
                          __Umul8_16 (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _get_humidade                                         4     2      2      65
                                              1 BANK1      4     2      2
                           _ADC_Read
 ---------------------------------------------------------------------------------
 (2) _ADC_Read                                             5     3      2      31
                                             27 BANK0      4     2      2
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _Interrupt_Time                                       6     6      0    2267
                                             21 BANK0      6     6      0
                            ___awdiv
                  i1_UART_Write_Text
                           i1___wmul
                       i1_print_json
 ---------------------------------------------------------------------------------
 (7) i1_print_json                                         1     1      0    1300
                                             20 BANK0      1     1      0
                  i1_UART_Write_Text
                          i1_sprintf
 ---------------------------------------------------------------------------------
 (8) i1_sprintf                                           28    17     11     929
                                              0 BANK0     20     9     11
                          i1___lwdiv
                          i1___lwmod
 ---------------------------------------------------------------------------------
 (9) i1___lwmod                                            6     2      4     211
                                              8 COMMON     6     2      4
                          i1___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (9) i1___lwdiv                                            8     4      4     214
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (8) i1_UART_Write_Text                                    7     5      2     371
                                              1 COMMON     7     5      2
                       i1_UART_Write
 ---------------------------------------------------------------------------------
 (9) i1_UART_Write                                         1     1      0      31
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) i1___wmul                                             6     2      4     144
                                              9 COMMON     4     0      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _Aquisicao_Dados
     _get_humidade
       _ADC_Read
     _get_temperatura
       _ADC_Read
       ___fldiv
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           ___aldiv (ARG)
       ___flmul
         __Umul8_16
         ___aldiv (ARG)
         ___fldiv (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             ___aldiv (ARG)
         ___xxtofl (ARG)
           ___aldiv (ARG)
       ___fltol
         ___aldiv (ARG)
         ___fldiv (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             ___aldiv (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___aldiv (ARG)
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               ___aldiv (ARG)
           ___xxtofl (ARG)
             ___aldiv (ARG)
         ___xxtofl (ARG)
           ___aldiv (ARG)
       ___xxtofl
         ___aldiv (ARG)
   _I2C_init
     ___lldiv
       ___lmul (ARG)
     ___lmul
   _PWM_Initialize
     ___aldiv
   _UART_Data_Ready
   _UART_Init
     ___aldiv
   _UART_Write
   _UART_Write_Text
     _UART_Write
   ___wmul
   _alarm_check
     _alarm
       _print_json
         _UART_Write_Text
           _UART_Write
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
   _move_the_fan
     _ADC_Read
     _PWM_Duty
       ___aldiv
       ___fldiv
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           ___aldiv (ARG)
       ___flmul
         __Umul8_16
         ___aldiv (ARG)
         ___fldiv (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             ___aldiv (ARG)
         ___xxtofl (ARG)
           ___aldiv (ARG)
       ___fltol
         ___aldiv (ARG)
         ___fldiv (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             ___aldiv (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___aldiv (ARG)
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               ___aldiv (ARG)
           ___xxtofl (ARG)
             ___aldiv (ARG)
         ___xxtofl (ARG)
           ___aldiv (ARG)
       ___xxtofl
         ___aldiv (ARG)
   _read_from_EPPROM
     _I2C_Begin
       _I2C_Hold
     _I2C_End
       _I2C_Hold
     _I2C_Read
       _I2C_Hold
     _I2C_Write
       _I2C_Hold
     _UART_Write_Text
       _UART_Write
   _read_from_MR
     _UART_Read_Text
       _UART_Read
     _UART_Write_Decimal
       _UART_Write_Text
         _UART_Write
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
     _UART_Write_Text
       _UART_Write
     ___wmul
     _print_json
       _UART_Write_Text
         _UART_Write
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
   _teclado
   _write_to_EPPROM
     _I2C_Begin
       _I2C_Hold
     _I2C_End
       _I2C_Hold
     _I2C_Write
       _I2C_Hold
     _strlen

 _Interrupt_Time (ROOT)
   ___awdiv
   i1_UART_Write_Text
     i1_UART_Write
   i1___wmul
     ___awdiv (ARG)
   i1_print_json
     i1_UART_Write_Text
       i1_UART_Write
     i1_sprintf
       i1___lwdiv
       i1___lwmod
         i1___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60     35      57       9       90.6%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      F      5F      11       99.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     4E      50       7      100.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1F      35       5       66.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0     149      12        0.0%
ABS                  0      0     149       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat May 30 22:39:27 2020

         __size_of_I2C_Begin 0009             ??_Interrupt_Time 0035  __size_of_UART_Write_Decimal 001F  
               ___fldiv@aexp 00D5                 ___fldiv@bexp 00D4                            pc 0002  
               ___fldiv@sign 00CD      __size_of_PWM_Initialize 004F                  __CFG_CP$OFF 0000  
         __size_of_I2C_Write 000A                 ___awdiv@sign 0076                           fsr 0004  
        ___wmul@multiplicand 003D             i1___wmul@product 0020          __Umul8_16@word_mpld 00A2  
                        l200 1C76                          l203 1F1E                          l131 1714  
                        l211 13AD                          l140 109D                          l134 123C  
                        l222 1E6A                          l214 0950                          l127 07FF  
                        l312 1C30                          l144 0C62                          l137 1C5A  
                        l321 1160                          l306 17FF                          l330 1BDC  
                        l170 0CA5                          l324 1BD4                          l500 1E31  
                        l180 0CEF                          l172 0C95                          l309 1C26  
                        l229 142E                          l182 0CDF                          l166 0D42  
                        l327 1BD5                          l175 0CCA                          l239 0E17  
                        l272 1D82                          l512 1FFF                          l336 1DC3  
                        l248 0FC6                          l177 0CBA                          l249 0FE9  
                        l275 1D8E                          l339 1CB3                          l187 0D04  
                        l372 1C22                          l269 1BED                          l381 1C09  
                        l197 0D80                          l534 12B4                          l366 1FAF  
                        l375 1BF6                          l384 1CD8                          l378 1BFF  
                        l563 14E4                          l573 1580                          l494 0B4C  
                        l770 10FC                          l498 1E10                          l691 131B  
                        l931 15EA                          l684 1330                          l780 1EE0  
                        l925 15A5                          l950 1DE2                          l694 1330  
                        l871 07A4                          l863 0722                          l847 0630  
                        l927 163C                          l952 1DFA                          l849 07B0  
                        l938 1606                          l946 1CFD                          l939 1612  
                        l869 0794                          l893 0507                          l887 05D3  
                        l899 05B5                          _GIE 005F                          _PR2 0092  
                        _PEN 048A                 __CFG_CPD$OFF 0000                          _SEN 0488  
       __end_ofi1_print_json 1D5B        _count_timer_fan_speed 004D              __end_of_I2C_End 1C00  
                        fsr0 0004                          indf 0000                 __CFG_FOSC$HS 0000  
               ___flmul@aexp 0191                 ___flmul@bexp 0196                 ___flmul@sign 0190  
               ___flmul@temp 019B                 ___flmul@prod 0197                 __CFG_LVP$OFF 0000  
               ___fltol@exp1 00ED                         l4000 061D                         l4010 0644  
                       l4002 0625                         l4100 079A                         l4012 0648  
                       l4004 0626                         l4102 079E                         l4030 0689  
                       l4022 065F                         l4006 0628                         l4110 0051  
                       l4104 07A0                         l4040 06A7                         l4032 068B  
                       l4024 0671                         l4008 0638                         l4016 0651  
                       l4200 04BF                         l4120 0074                         l4112 005A  
                       l4034 0690                         l4042 06B0                         l4050 06D5  
                       l4026 0679                         l4018 0656                         l4210 04DC  
                       l4202 04C0                         l4130 0097                         l4122 0079  
                       l4114 0064                         l4060 06F2                         l4052 06DB  
                       l4044 06C2                         l4036 06A2                         l4028 0681  
                       l4220 0513                         l4212 04E0                         l4204 04CF  
                       l4140 00B6                         l4132 00A1                         l4124 0083  
                       l4116 006A                         l4300 1648                         l4070 0707  
                       l4062 06F3                         l4054 06E3                         l4046 06C3  
                       l4038 06A6                         l4230 056D                         l4222 0521  
                       l4214 0502                         l4206 04D7                         l4150 00D9  
                       l4142 00C0                         l4134 00A7                         l4126 0086  
                       l4118 006D                         l4310 11DA                         l4302 16F9  
                       l4080 072C                         l4072 070B                         l4064 06FC  
                       l4056 06E5                         l4048 06D1                         l4240 05A5  
                       l4232 0578                         l4224 0525                         l4208 04DB  
                       l4160 0156                         l4144 00C3                         l4136 00AA  
                       l4128 0090                         l4312 1238                         l4304 1703  
                       l4090 076A                         l4082 073A                         l4074 071F  
                       l4058 06EE                         l4066 0702                         l4242 05A9  
                       l4234 0587                         l4226 055A                         l4218 050E  
                       l4170 0241                         l4162 0186                         l4154 00E4  
                       l4146 00CD                         l4138 00B1                         l4250 1584  
                       l4410 1FE4                         l4402 1FB0                         l4306 1704  
                       l4322 1D92                         l4330 1C95                         l4316 1C44  
                       l4092 0778                         l4084 073E                         l4068 0706  
                       l4244 05AA                         l4236 0591                         l4228 0560  
                       l4180 030A                         l4172 025B                         l4164 01D2  
                       l4156 0100                         l4148 00D4                         l4252 1589  
                       l4308 11C8                         l4420 1252                         l4412 1FF7  
                       l4404 1FBA                         l4324 1D95                         l4500 0C4D  
                       l4332 1CDC                         l4318 1C56                         l4094 0787  
                       l4086 0757                         l4078 0727                         l4246 05BD  
                       l4238 0593                         l4190 043B                         l4182 033F  
                       l4174 0290                         l4166 0202                         l4158 011D  
                       l4270 15D3                         l4262 15B6                         l4254 158D  
                       l4430 129C                         l4422 1267                         l4406 1FBE  
                       l4342 1BEE                         l4350 1BF7                         l4326 1DA9  
                       l4510 0C68                         l4334 1CE5                         l4096 078B  
                       l4088 075D                         l4192 0483                         l4184 0390  
                       l4176 02AC                         l4168 0232                         l4280 160A  
                       l4272 15E1                         l4264 15BB                         l4256 159D  
                       l4432 129D                         l4424 126B                         l4416 123D  
                       l4408 1FD5                         l3800 0A89                         l4344 1BF3  
                       l4352 1BFC                         l4360 1CC4                         l4328 1DB1  
                       l4520 0C80                         l4512 0C71                         l4336 1CED  
                       l4600 135D                         l4098 0793                         l4194 0492  
                       l4186 03AC                         l4178 02E1                         l4290 1634  
                       l4282 1614                         l4274 15F1                         l4266 15C8  
                       l4258 15AD                         l4434 12A6                         l4426 127A  
                       l4418 124F                         l4450 07F5                         l3802 0A8D  
                       l4370 1E3A                         l4362 1CC9                         l4354 1CB4  
                       l4346 1C00                         l4530 0CA9                         l4522 0C84  
                       l4338 1CF5                         l4610 1398                         l4602 1362  
                       l4196 04AA                         l4188 03FD                         l4284 162A  
                       l4276 15FC                         l4268 15CF                         l4428 128E  
                       l4436 12AC                         l3900 14F3                         l4460 07FC  
                       l4452 07F8                         l3732 1C26                         l3740 10AA  
                       l3820 0AC2                         l3804 0A91                         l4380 1E59  
                       l4372 1E41                         l4620 13CE                         l4364 1CD7  
                       l4356 1CB9                         l4348 1C05                         l4540 0CD9  
                       l4532 0CB4                         l4524 0C8F                         l4508 0C63  
                       l4612 13A8                         l4604 136D                         l4198 04B9  
                       l4286 162F                         l4278 1600                         l3910 1523  
                       l3902 14FB                         l4454 07F9                         l3734 1C2C  
                       l3750 10D7                         l3742 10AF                         l3830 0B1C  
                       l3822 0AC8                         l3814 0A9C                         l3806 0A95  
                       l4382 1E60                         l4374 1E48                         l4630 1422  
                       l4622 13E6                         l4358 1CC1                         l4614 0901  
                       l4390 1DFF                         l4470 0B60                         l4462 0B4D  
                       l4518 0C72                         l4606 1378                         l4288 1633  
                       l3920 1559                         l3912 1527                         l3904 1503  
                       l4456 07FA                         l4448 07B1                         l4640 1776  
                       l3752 10DD                         l3744 10B6                         l3736 109E  
                       l3832 0B25                         l3824 0AD1                         l3808 0A9A  
                       l4384 1E66                         l4376 1E52                         l4368 1E32  
                       l4624 13FE                         l4616 0945                         l4392 1E04  
                       l4480 0B84                         l4472 0B6B                         l4464 0B4D  
                       l4552 0D08                         l4544 0CE3                         l4536 0CBE  
                       l4560 0D2F                         l4528 0C99                         l4608 1390  
                       l4800 0E08                         l3922 1562                         l3914 1536  
                       l3906 150B                         l4458 07FB                         l4650 17F1  
                       l4642 177F                         l3850 112E                         l3754 10E0  
                       l3746 10BC                         l3738 10A2                         l3770 1EBB  
                       l3762 1EA5                         l3834 0B2B                         l3826 0AD7  
                       l3818 0AB8                         l4386 1E68                         l4378 1E54  
                       l4634 1429                         l4626 1404                         l4618 13AE  
                       l4298 163D                         l4394 1E18                         l4490 0C29  
                       l4482 0C02                         l4474 0B73                         l4466 0B59  
                       l4570 0D72                         l4562 0D54                         l4546 0CF3  
                       l4554 0D14                         l4538 0CCE                         l4810 0E32  
                       l4802 0E14                         l4730 0DAA                         l3860 1DDC  
                       l3940 12E0                         l3932 12B5                         l3916 154A  
                       l3908 150E                         l3924 1568                         l4660 17FC  
                       l4652 17F2                         l4644 17E0                         l3852 1136  
                       l3756 10E8                         l3748 10C2                         l3772 1EBF  
                       l3764 1EAD                         l3780 1EDC                         l3828 0ADC  
                       l3836 0B34                         l4628 140A                         l4580 1C5B  
                       l4396 1E1F                         l4388 1DFB                         l4492 0C34  
                       l4484 0C0B                         l4476 0B83                         l4468 0B5C  
                       l4572 0D78                         l4564 0D5C                         l4556 0D23  
                       l4548 0CFE                         l4812 0E33                         l4804 0E1A  
                       l4820 0E59                         l4740 0DB8                         l4732 0DAB  
                       l3870 1D75                         l3862 1DEB                         l3854 1DC7  
                       l3942 12E1                         l3934 12C2                         l4590 1F09  
                       l4670 1F6C                         l3926 156D                         l3918 1558  
                       l4654 17F5                         l4646 17E3                         l4638 1715  
                       l3846 10FD                         l3758 10F0                         l3774 1EC9  
                       l3766 1EB0                         l3838 0B46                         l3790 0A5C  
                       l4582 1C6D                         l4398 1E25                         l4494 0C3B  
                       l4486 0C17                         l4574 0D79                         l4566 0D63  
                       l4558 0D29                         l4822 0E66                         l4814 0E3B  
                       l4806 0E1C                         l4830 0F46                         l4750 0DBD  
                       l4742 0DB9                         l4734 0DAC                         l4726 0D81  
                       l3872 1D7F                         l3864 1DF0                         l3856 1DC9  
                       l3944 12E9                         l4584 1EE1                         l4672 1FAE  
                       l4664 1F61                         l3928 1578                         l4656 17F8  
                       l4648 17ED                         l3848 1102                         l3776 1ECF  
                       l3768 1EB7                         l3792 0A63                         l3784 0A46  
                       l3880 1BD5                         l4496 0C46                         l4488 0C22  
                       l4576 0D7D                         l4568 0D6A                         l4840 0F64  
                       l4832 0F51                         l4824 0EFA                         l4816 0E41  
                       l4808 0E2F                         l4760 0DC8                         l4752 0DBE  
                       l4744 0DBA                         l4736 0DB0                         l4728 0DA9  
                       l4674 1BE5                         l3874 1D86                         l3970 05DB  
                       l3858 1DD8                         l3962 1310                         l3954 12F7  
                       l3946 12EB                         l3938 12CB                         l4586 1EF2  
                       l4666 1F65                         l4658 17F9                         l3778 1ED6  
                       l3786 0A4D                         l3890 1C1E                         l3882 1BDB  
                       l4930 0C57                         l4594 1331                         l4850 0F95  
                       l4842 0F65                         l4834 0F56                         l4826 0F03  
                       l4818 0E51                         l4770 0DD7                         l4762 0DCA  
                       l4754 0DC2                         l4746 0DBB                         l4738 0DB4  
                       l3868 1D5E                         l3980 05F0                         l3972 05E1  
                       l3964 1320                         l3948 12EF                         l3956 1309  
                       l4588 1EFD                         l4668 1F69                         l3892 14D0  
                       l4676 1BCF                         l4932 0A76                         l3796 0A64  
                       l3788 0A53                         l4596 1349                         l4852 0FE1  
                       l4844 0F69                         l4836 0F5B                         l4828 0F25  
                       l4780 0DDD                         l4772 0DD9                         l4764 0DCD  
                       l4756 0DC3                         l4748 0DBC                         l3990 0608  
                       l3982 05F8                         l3974 05E5                         l3966 1325  
                       l3894 14D3                         l3798 0A81                         l3878 1048  
                       l3886 1C16                         l4598 135B                         l4854 0FE7  
                       l4846 0F86                         l4838 0F61                         l4790 0DEB  
                       l4782 0DDE                         l4774 0DDA                         l4766 0DCF  
                       l4758 0DC7                         l3992 060E                         l3984 05F9  
                       l3976 05E6                         l3968 05D4                         l3896 14D7  
                       l3888 1C16                         l4856 0FEA                         l4848 0F8B  
                       l4792 0DEF                         l4784 0DDF                         l4776 0DDB  
                       l4768 0DD3                         l3994 0612                         l3978 05EB  
                       l3986 05FB                         l3898 14E8                         l4858 0FF4  
                       l4794 0DF5                         l4786 0DE9                         l4778 0DDC  
                       l3996 0613                         l3988 0603                         l4796 0DF9  
                       l4788 0DEB                         l3998 0618                         l4798 0DFD  
                       STR_1 081E                         STR_2 08A4                         STR_3 0868  
                       STR_4 08A4                         STR_5 08D8                         STR_6 08C8  
                       STR_7 0894                         STR_8 08E4                         STR_9 08A4  
                       _BRGH 04C2                         _T0IF 005A                         _CREN 00C4  
                       u5010 1C2C                         u5011 1C2B                         u5020 10AA  
                       u5021 10A9                         u5110 1EBF                         u5111 1EBE  
                       u5040 10C2                         u5120 1EC9                         u5200 0B34  
                       u6001 03C7                         u5041 10C1                         u5121 1EC8  
                       u5105 1EB1                         u5201 0B33                         u6010 040F  
                       u6002 03D2                         u5210 0B46                         u6003 03DD  
                       u5035 10B0                         u5211 0B45                         u6100 04E0  
                       u5220 1116                         u5060 10D7                         u5140 1EDC  
                       u5300 1BDB                         u6101 04DF                         u6021 0421  
                       u5061 10D6                         u5141 1EDB                         u5125 1EC5  
                       u5301 1BDA                         u6110 0502                         u6030 0457  
                       u6022 042C                         u5230 1148                         u5150 0A53  
                       u5310 1C1E                         u6111 0501                         u6023 0437  
                       u6015 040A                         u5055 10C5                         u5135 1ED0  
                       u5151 0A52                         u5311 1C1D                         u6120 050D  
                       u6200 158D                         u5240 1160                         u5080 10F0  
                       u5160 0A91                         u5320 1C22                         u6121 050C  
                       u6041 0469                         u6201 158C                         u7001 17BA  
                       u5241 115F                         u5081 10EF                         u5065 10D3  
                       u5161 0A90                         u5321 1C21                         u5250 1DDC  
                       u6130 0513                         u6042 0474                         u6210 15AD  
                       u5410 1568                         u5330 14D7                         u7010 17ED  
                       u7002 17BB                         u5090 1EAD                         u5170 0AB7  
                       u5251 1DDB                         u6131 0512                         u6043 047F  
                       u6035 0452                         u6211 15AC                         u5411 1567  
                       u5331 14D6                         u7011 17EC                         u7003 17C0  
                       u5075 10E2                         u5091 1EAC                         u5171 0AB6  
                       _PEIE 005E                         u6140 0525                         u6300 161F  
                       u7020 1F7A                         u5420 156D                         u5340 14E8  
                       u7004 17C1                         u5180 0AC2                         u7100 0E66  
                       u6141 0524                         u5421 156C                         u5405 155A  
                       u5341 14E7                         u7005 17C6                         u5181 0AC1  
                       u7101 0E65                         _INTE 005C                         u5270 1DF0  
                       u6150 0542                         u6070 04BF                         u5510 1320  
                       u5430 12C2                         u6310 162F                         u6230 15CE  
                       u5350 150B                         u7006 17C7                         u5190 0AC8  
                       u7110 0F03                         _INTF 0059                         u5271 1DEF  
                       u6071 04BE                         u6055 0487                         u5511 131F  
                       u5431 12C1                         u6311 162E                         u6231 15CD  
                       u5351 150A                         u5191 0AC7                         u5175 0AB3  
                       u7111 0F02                         u5600 0656                         u6160 056D  
                       u5520 1325                         u5440 12D9                         u6320 1633  
                       u6400 1CD4                         u7120 0F51                         u5601 0655  
                       u5265 1DE3                         u6161 056C                         u6065 04AE  
                       u5521 1324                         u5505 1312                         u6321 1632  
                       u6305 161A                         u6225 15C0                         u7025 1F75  
                       u6401 1CD0                         u7121 0F50                         u7105 0E62  
                       u5290 1D86                         u5610 0690                         u5530 05E5  
                       u6170 0587                         u6090 04DB                         u5450 12EF  
                       u6250 15F0                         u5370 1527                         u7130 0F78  
                       u5291 1D85                         u5611 068F                         u5531 05E4  
                       u6171 0586                         u6155 053D                         u6091 04DA  
                       u5451 12EE                         u6251 15EF                         u5371 1526  
                       u5700 06F2                         u5540 05EB                         u6180 05A9  
                       u5460 12F6                         u6420 1E3A                         u6340 1648  
                       u6500 1E25                         u7140 0F95                         _RCEN 048B  
                       _RCIF 0065                         u5285 1D6B                         u5701 06F1  
                       u5541 05EA                         u6181 05A8                         u6165 0569  
                       u6085 04C4                         u5461 12F5                         u5445 12D4  
                       u6245 15E2                         u5365 1512                         u6421 1E39  
                       u6341 1647                         u6501 1E24                         u7141 0F94  
                       u5550 05F0                         u6270 1600                         u6190 1589  
                       u6510 1FBE                         u5390 154A                         u6430 1E41  
                       u6350 16A1                         u6414 1CD7                         u7150 0FE7  
                       u5551 05EF                         u6175 0583                         u6271 15FF  
                       u6191 1588                         u6511 1FBD                         u5391 1549  
                       u6431 1E40                         u7207 0CD4                         u7151 0FE6  
                       u5800 0787                         u5720 0706                         u5640 06A6  
                       u5560 0612                         u5480 1308                         u6280 1606  
                       u6600 128E                         u6440 1E48                         u6360 1700  
                       u7160 0FFC                         u5801 0786                         u5721 0705  
                       u5641 06A5                         u5625 0692                         u5561 0611  
                       u5481 1307                         u6281 1605                         u6265 15F5  
                       u6601 128D                         u6521 1FC7                         u5385 152B  
                       u6441 1E47                         u6361 16FC                         u7217 0CF9  
                       u7161 0FFB                         u5810 079E                         u5730 070B  
                       u5570 0618                         u5490 130F                         u6290 160A  
                       u6522 1FCE                         u6450 1E52                         u7090 0E3B  
                       u5811 079D                         u5731 070A                         u5715 06F5  
                       u5635 069B                         u5571 0617                         u5491 130E  
                       u5475 12F8                         u6291 1609                         u6523 1FD5  
                       u5395 1546                         u6451 1E51                         u6355 169C  
                       u7227 0D35                         u7091 0E3A                         u5740 071F  
                       u5660 06C2                         u5580 061D                         u5820 006A  
                       u6620 12AC                         u6460 1E66                         u6380 1DC3  
                       u6700 0C95                         u7237 1D7B                         u5805 0783  
                       u5741 071E                         u5661 06C1                         u5581 061C  
                       u5901 016C                         u5821 0069                         u6621 12AB  
                       u6605 128A                         u6461 1E65                         u6381 1DC2  
                       u6701 0C94                         u5750 0726                         u5670 06DB  
                       u5590 0638                         u5902 0177                         u5830 0074  
                       u6550 1FF7                         u6374 1703                         u6470 1E04  
                       u6710 0C99                         u6390 1CF5                         u5751 0725  
                       u5671 06DA                         u5655 06A9                         u5591 0637  
                       u5911 019C                         u5903 0182                         u5831 0073  
                       u6615 129E                         u6551 1FF6                         u6535 1FD9  
                       u6455 1E4E                         u6471 1E03                         u6711 0C98  
                       u6391 1CF4                         u5760 072C                         u5680 06E3  
                       u5912 01A7                         u5840 0079                         u6560 124F  
                       u6800 0D08                         u6720 0CA9                         u5761 072B  
                       u5681 06E2                         u5665 06BE                         u5921 01E8  
                       u5913 01B2                         u5841 0078                         u6561 124E  
                       u6545 1FE5                         u6385 1DBF                         u6801 0D07  
                       u6721 0CA8                         u7177 0FF0                         u5770 073E  
                       u5922 01F3                         u5850 00A7                         u6810 0D2F  
                       u6730 0CBA                         u5771 073D                         u5931 0218  
                       u5923 01FE                         u5851 00A6                         u6811 0D2E  
                       u6731 0CB9                         u7187 0C8A                         u5780 074D  
                       u5932 0223                         u5860 00B1                         u6580 126B  
                       u6660 07CF                         u6900 13CE                         u6820 0D54  
                       u6740 0CBE                         u5933 022E                         u5861 00B0  
                       u6581 126A                         u6901 13CD                         u6485 1E12  
                       u6821 0D53                         u6741 0CBD                         u7197 0CAF  
                       u5790 076A                         u5870 00B6                         u6670 07D8  
                       u6910 13E6                         u6830 0D5C                         u6750 0CCE  
                       u5791 0769                         u5695 06E7                         u5951 0276  
                       u5871 00B5                         u6575 1256                         u6911 13E5  
                       u6495 1E19                         u6831 0D5B                         u6751 0CCD  
                       u5952 0281                         u5880 00D4                         u6920 13FE  
                       u6680 0B73                         u6840 0D63                         u6760 0CDF  
                       u5785 0748                         u5961 02C7                         u5953 028C  
                       u5945 0236                         u5881 00D3                         u6665 07CA  
                       u6921 13FD                         u6905 13CA                         u6681 0B72  
                       u6841 0D62                         u6825 0D50                         u6761 0CDE  
                       u5962 02D2                         u5890 00D9                         u6930 1422  
                       u6850 0D6A                         u6770 0CE3                         u6690 0C84  
                       u5795 0766                         u5963 02DD                         u5891 00D8  
                       u6595 126F                         u6675 07D3                         u6931 1421  
                       u6915 13E2                         u6851 0D69                         u6771 0CE2  
                       u6691 0C83                         u6940 1725                         u6860 0D78  
                       u6780 0CF3                         u5981 0325                         u6925 13FA  
                       u6861 0D77                         u6781 0CF2                         u5982 0330  
                       u6870 1F11                         u6950 173E                         u6790 0D04  
                       u5991 0376                         u5983 033B                         u5975 02E5  
                       u6935 141E                         u6791 0D03                         u5992 0381  
                       u6880 133B                         u5993 038C                         u6961 1750  
                       u6945 1720                         u6970 177F                         u6962 1751  
                       u6890 13A8                         u6971 177E                         u6963 1756  
                       u6955 1739                         u6891 13A7                         u6980 178F  
                       u6964 1757                         u6965 175C                         u6990 17A8  
                       u6966 175D                         u6895 13A4                         u6985 178A  
                       u6995 17A3                         _TMR0 0001                         _SPEN 00C7  
                       _TRMT 04C1                         _TXEN 04C5                         _SYNC 04C4  
                 _Data_atual 003F                 __CFG_WRT$OFF 0000                         _main 0D81  
                       _json 0110             __end_of_I2C_Hold 1C23             __end_of_I2C_Read 1CD9  
                       btemp 007E             __end_of_ADC_Init 1BEE             __end_of_ADC_Read 1D8F  
      UART_Write_Decimal@Dec 00BE             __end_of_I2C_init 1FB0                         start 0012  
            ___fldiv@new_exp 00CE               ??_get_humidade 003F      __end_of_UART_Write_Text 1161  
              ___fltol@sign1 00EC              __end_of___aldiv 1581                        ?_main 0070  
                      _ACKEN 048C                        _ACKDT 048D                        _CCP1X 00BD  
            __end_of___fldiv 07B1                        _CCP1Y 00BC              __end_of___awdiv 11C8  
                      STR_10 08F0                        STR_11 08A4                        STR_20 08FB  
                      STR_12 08B7                        STR_13 08A4                        STR_14 08A4  
                      STR_15 08A6                        STR_16 08A4                        STR_17 08A4  
              __CFG_WDTE$OFF 0000                        STR_18 0881                        STR_19 08A4  
            __end_of___flmul 05D4              __end_of___fltol 1331              __end_of___lldiv 12B5  
            ___awdiv@divisor 0070                        _T1CON 0010              __end_of___lwdiv 10FD  
                      i1l140 1D5A                        i1l312 1C15                        i1l321 1F60  
                      i1l161 14C3                        i1l500 1D28                        i1l309 1C0B  
            __end_of___lwmod 1EE1                        i1l651 11C7                        i1l494 0A45  
                      i1l498 1D0E                        i1l770 1047                        i1l780 1EA4  
            ___awdiv@counter 0075                        _RCREG 001A         UART_Read_Text@Output 00A2  
                      _TMR1L 000E                        _SPBRG 0099                        _PORTB 0006  
                      _PORTD 0008                        _TRISA 0085                        _TRISB 0086  
                      _TRISD 0088                        _TXREG 0019             ?_get_temperatura 019D  
        ___lmul@multiplicand 00A4                  ?_UART_Write 0070           __size_of_UART_Init 00EB  
         __size_of_UART_Read 0008         UART_Read_Text@length 003B           i1___lwmod@dividend 007A  
                      _alarm 1E32                 main@password 0160            __end_of_I2C_Begin 1BF7  
            __end_of_dpowers 081A              __end_of_teclado 0D81            __end_of_I2C_Write 1C0A  
             __CFG_BOREN$OFF 0000                        pclath 000A             __end_of_PWM_Duty 1715  
           __end_ofi1___wmul 1D29         __size_of_alarm_check 0081                        status 0003  
        i1___wmul@multiplier 0079                        wtemp0 007E              __end_of_sprintf 0B4D  
   __size_of_Aquisicao_Dados 003E           __size_ofi1___lwdiv 0044           __size_ofi1___lwmod 003A  
            __initialization 0015                 __end_of_main 1000                get_humidade@a 00A3  
                  ??_I2C_End 003B                   i1sprintf@c 0033                   i1sprintf@f 0022  
                     ??_main 01B7           __size_ofi1_sprintf 00F5           i1UART_Write_Text@i 0076  
  write_to_EPPROM@epro_count 00C6                       ?_alarm 0070                       _ADCON0 001F  
                     _ADCON1 009F                       _CCP1M2 00BA                       _CCP1M3 00BB  
                     _ADRESH 001E                       _ADRESL 009E                       _CCPR1L 0015  
           ___awdiv@dividend 0072                       i1l3130 0951                       i1l3132 0958  
                     i1l3150 099C                       i1l3142 096F                       i1l3134 095E  
                     i1l3160 09A7                       i1l3152 09A0                       i1l3144 098C  
                     i1l3136 0967                       i1l3170 09DC                       i1l3154 09A5  
                     i1l3146 0994                       i1l3138 096E                       i1l3180 0A24  
                     i1l3172 09E2                       i1l3164 09C3                       i1l3148 0998  
                     i1l3430 116B                       i1l3174 09E7                       i1l3166 09CD  
                     i1l3182 0A2D                       i1l3440 117C                       i1l3432 116D  
                     i1l3424 1161                       i1l3176 0A15                       i1l3168 09D3  
                     i1l3184 0A3F                       i1l3450 1194                       i1l3442 1182  
                     i1l3434 1171                       i1l3426 1162                       i1l3178 0A1E  
                     i1l3452 11A5                       i1l3444 1185                       i1l3460 11B9  
                     i1l3436 1176                       i1l3428 1166                       i1l3462 11BE  
                     i1l3454 11AB                       i1l3446 118C                       i1l3438 117A  
                     i1l3470 1CFE                       i1l3464 11C3                       i1l3456 11AC  
                     i1l3448 1190                       i1l3480 1D22                       i1l3472 1D02  
                     i1l4440 1F1F                       i1l3458 11B3                       i1l3474 1D06  
                     i1l4442 1F22                       _T1SYNC 0082                       i1l3476 1D15  
                     i1l4444 1F3E                       i1l2940 1016                       i1l2932 1004  
                     i1l4700 1474                       i1l3478 1D1C                       i1l4294 1C0B  
                     i1l4446 1F44                       i1l2950 1036                       i1l2942 101A  
                     i1l2934 1006                       i1l4710 148F                       i1l4702 147E  
                     i1l4296 1C11                       i1l2952 103D                       i1l2944 101E  
                     i1l2936 100C                       i1l2960 1E71                       i1l4720 14AD  
                     i1l4712 1490                       i1l4704 1480                       i1l2946 102F  
                     i1l2938 100F                       i1l2954 1043                       i1l2970 1E8D  
                     i1l2962 1E74                       i1l4722 14B1                       i1l4714 1498  
                     i1l4706 1486                       i1l2948 1035                       i1l2972 1E93  
                     i1l2964 1E7B                       i1l4724 14BA                       i1l4716 149A  
                     i1l4708 148B                       i1l2974 1E9A                       i1l2966 1E7F  
                     i1l2958 1E6B                       i1l4718 14A3                       i1l2968 1E83  
                     i1l2976 1EA0                       i1l4680 1D29                       i1l4690 1449  
                     i1l4682 142F                       i1l4692 144B                       i1l4684 1433  
                     i1l4934 0981                       i1l4694 1452                       i1l4686 1441  
                     i1l4696 1453                       i1l4688 1442                       i1l4698 1454  
                     u430_20 099C                       u430_21 099B                       u431_20 09C2  
                     u431_21 09C1                       u431_25 09BE                       u432_20 09CD  
                     u432_21 09CC                       u433_20 09D3                       u433_21 09D2  
                     u434_20 0A2D                       u434_21 0A2C                       u435_20 0A3F  
                     u435_21 0A3E                       u429_20 095E                       u429_21 095D  
                     u390_20 1043                       u390_21 1042                       u391_20 1E71  
                     u703_20 1433                       u391_21 1E70                       u703_21 1432  
                     u384_20 100C                       u704_20 1449                       u384_21 100B  
                     u704_21 1448                       u480_25 11AD                       u392_25 1E75  
                     u481_20 11B9                       u473_20 1166                       u633_20 1C11  
                     u393_20 1E83                       u705_20 147E                       u481_21 11B8  
                     u473_21 1165                       u633_21 1C10                       u393_21 1E82  
                     u705_21 147D                       u385_25 1010                       u482_20 11BE  
                     u474_20 1171                       u386_20 101E                       u394_20 1E8D  
                     u706_20 1486                       u482_21 11BD                       u474_21 1170  
                     u386_21 101D                       u394_21 1E8C                       u706_21 1485  
                     u394_25 1E89                       u475_20 1182                       u483_20 1D06  
                     u707_20 148F                       u475_21 1181                       u483_21 1D05  
                     u707_21 148E                       u387_25 101F                       u395_25 1E94  
                     u388_20 102F                       u396_20 1EA0                       u708_20 1498  
                     u388_21 102E                       u396_21 1E9F                       u708_21 1497  
                     u476_25 1186                       u484_25 1D0F                       u388_25 102B  
                     u477_20 1194                       u477_21 1193                       u485_25 1D16  
                     u389_25 1037                       u486_20 1D22                       u486_21 1D21  
                     u478_25 1195                       u479_20 11A5                       u663_20 1F2C  
                     u479_21 11A4                       u479_25 11A1                       u664_20 1F4E  
                     u665_20 1F60                       u665_21 1F5F                       _TMR0IE 005D  
                     _TMR0IF 005A                       _TMR1CS 0081                       _TMR1ON 0080  
                     _TMR2ON 0092                       _SSPADD 0093                       _TRISC2 043A  
                     _TRISC3 043B                       _TRISC4 043C                       _TRISC6 043E  
                     _TRISC7 043F                       _SSPCON 0014                       _SSPBUF 0013  
           __end_of___xxtofl 163D                i1sprintf@flag 002F     __size_of_write_to_EPPROM 007D  
              i1sprintf@prec 0030               __CFG_PWRTE$OFF 0000        alarm_check@calibracao 00BF  
          __end_of_UART_Init 1800                ?_read_from_MR 00CB            __end_of_UART_Read 1BDD  
                     ___lmul 1FB0          __size_of_UART_Write 000E                    ??___aldiv 003B  
                     ___wmul 1DFB                    ??___fldiv 00C4                    ??___awdiv 0074  
                  ??___flmul 00DE               _PWM_Initialize 07B1             ?_UART_Write_Text 003C  
                  ??___fltol 00E7                    ??___lldiv 003C                    ??___lwdiv 00A0  
                  ??___lwmod 00A8        __size_ofi1_print_json 0032              ADC_Read@channel 00A0  
     read_from_MR@calibracao 00CB      __size_of_UART_Read_Text 0035             ___awdiv@quotient 0077  
                     _strlen 1CD9            ?_read_from_EPPROM 0070            __end_ofi1___lwdiv 1048  
          __end_ofi1___lwmod 1EA5                    ?_I2C_Hold 0070                    ?_I2C_Read 003B  
         __size_of__Umul8_16 0037                    ?_ADC_Init 0070                    ?_ADC_Read 003B  
                  ??_teclado 003D                       saved_w 007E                    ?_I2C_init 00B9  
         ??_read_from_EPPROM 00A5         __end_of_get_humidade 1C5B                 PWM_Duty@duty 019D  
                  ??_sprintf 00B5                 ___xxtofl@arg 00B8                 ___xxtofl@exp 00B7  
               ___xxtofl@val 00AE      __end_of__initialization 004D            __end_ofi1_sprintf 0A46  
                 ___fltol@f1 00E3                 i1_print_json 1D29               ??_read_from_MR 00D1  
     __end_of_PWM_Initialize 0800                ?i1_UART_Write 0070               __pcstackCOMMON 0070  
             main@calibracao 0169            ??_Aquisicao_Dados 01AB                 __pidataBANK0 1000  
               __pidataBANK3 1C77                __end_of_alarm 1E6B                    ?_PWM_Duty 019D  
                  ?i1___wmul 0079             alarm_check@magic 00C6                   ??_I2C_Hold 003B  
                 ??_I2C_Read 003D                   ??_ADC_Init 003B                   ??_ADC_Read 003D  
                i1sprintf@ap 002E                  i1sprintf@sp 0020                   ??_I2C_init 00BD  
                    ??_alarm 003F                   __pbssBANK0 003F                   __pbssBANK1 00EE  
                 __pbssBANK2 0110                   __pbssBANK3 01E3        i1UART_Write_Text@text 0071  
   __size_of_UART_Data_Ready 0006   __end_of_UART_Write_Decimal 1CB4            __end_of__Umul8_16 1DFB  
             ??i1_UART_Write 0070              ?_PWM_Initialize 0070                   __pmaintext 0D81  
                    ?___lmul 00A0                      ?___wmul 003B            ??_write_to_EPPROM 00A2  
                 __pintentry 0004                      _CCP1CON 0017                      _I2C_End 1BF7  
             ___lmul@product 00A8                   ??_PWM_Duty 019F                   ??i1___wmul 007D  
                    ?_strlen 003B                      _T2CKPS0 0090                      _T2CKPS1 0091  
                    _T1OSCEN 0083                    ?___xxtofl 00AE                 ??_UART_Write 003B  
                    _SSPCON2 0091                      _SSPSTAT 0094                   __stringtab 0800  
                  _I2C_Begin 1BEE                ?_move_the_fan 0070                    _I2C_Write 1C00  
             main@pass_count 0166                      ___aldiv 14D0                      ___fldiv 05D4  
                    ___awdiv 1161              __size_of___lmul 0050                      ___flmul 0051  
write_to_EPPROM@count_string 00C4                      ___fltol 12B5                      ___lldiv 123D  
            __size_of___wmul 0037           __end_of_UART_Write 1C31                      ___lwdiv 109E  
                    ___lwmod 1EA5               _UART_Read_Text 1D8F                      _fan_rpm 00EE  
                    __ptext1 1331                      __ptext2 1CD9                      __ptext3 0C63  
                    __ptext4 0B4D                      __ptext5 1DFB                      __ptext6 1C95  
                    __ptext7 1D8F                      __ptext8 1BD5                      __ptext9 0901  
      __size_of_get_humidade 0017              __size_of_strlen 0025                      _dpowers 0810  
          i1___lwdiv@divisor 0070            i1___lwdiv@counter 0077                   ??___xxtofl 00B2  
    __size_of_Interrupt_Time 00A1             ___aldiv@dividend 00A4                      _teclado 0C63  
       __end_of_read_from_MR 0C63                      main@abc 0168                ??_alarm_check 00C5  
                    _sprintf 0A46                      clrloop0 1BDE                      _running 0049  
       end_of_initialization 004D     __size_of_get_temperatura 0075                   ?_I2C_Begin 0070  
             ??_move_the_fan 003F         __end_ofteclado@linha 081E                   ?_I2C_Write 003B  
            ___lldiv@divisor 00AC              ___lldiv@counter 00B8           read_from_MR@output 00DF  
               _get_humidade 1C44       __end_of_UART_Read_Text 1DC4             ___aldiv@quotient 00AA  
          ??_UART_Data_Ready 003B        i1___wmul@multiplicand 007B                      strlen@s 00A0  
                  _UART_Init 1715                    _UART_Read 1BD5                    _PORTBbits 0006  
                  _PORTCbits 0007                    _PORTDbits 0008               UART_Write@data 003B  
                 _print_json 1048                ___xxtofl@sign 00B6     UART_Write_Decimal@string 00C1  
                  _TRISBbits 0086                    _TRISCbits 0087                    _TRISDbits 0088  
       __end_ofi1_UART_Write 1C16            __size_of_I2C_Hold 000D            __size_of_I2C_Read 0025  
                ___fldiv@grs 00D0                  ___fldiv@rem 00C9            __size_of_ADC_Init 0009  
          __size_of_ADC_Read 0034                    i1___lwdiv 1004                    i1___lwmod 1E6B  
          __size_of_I2C_init 004F              _Aquisicao_Dados 1EE1                  ___flmul@grs 0192  
  __size_of_read_from_EPPROM 0050          __end_of_alarm_check 142F             get_temperatura@a 019F  
           get_temperatura@b 01A1                    i1_sprintf 0951              ?_UART_Read_Text 003B  
        UART_Read_Text@i_462 00A3               __end_of___lmul 2000               __end_of___wmul 1E32  
          i1_UART_Write_Text 1F1F                   ?_UART_Init 00AE                   ?_UART_Read 0070  
          i1___lwmod@divisor 0078            i1___lwmod@counter 007D           ?i1_UART_Write_Text 0071  
   __size_of_UART_Write_Text 0064               __end_of_strlen 1CFE          start_initialization 0015  
          __size_of_PWM_Duty 00D8            __size_ofi1___wmul 002B          ??i1_UART_Write_Text 0073  
                 ?i1___lwdiv 0070                   ?i1___lwmod 0078                 _count_minute 004B  
                ??_I2C_Begin 003B              _write_to_EPPROM 1331             ??_PWM_Initialize 00AE  
                ??_I2C_Write 003D                 i1sprintf@val 0031            ??_get_temperatura 003F  
                 ?i1_sprintf 0020                     ??___lmul 003B    __end_ofi1_UART_Write_Text 1F61  
                   ??___wmul 003F                   init_fetch0 1C31                    __Umul8_16 1DC4  
                __pdataBANK0 0051                  __pdataBANK3 01C5                     ?_I2C_End 0070  
         _UART_Write_Decimal 1C95                     ??_strlen 003D        __size_of_read_from_MR 0116  
       __end_of_move_the_fan 1C77                  ?_print_json 0070               _Interrupt_Time 142F  
                  ___fldiv@a 00BC                    ___fldiv@b 00C0                    ___flmul@a 00DA  
                  ___flmul@b 00D6                    ___latbits 0002                __pcstackBANK0 0020  
              __pcstackBANK1 00A0                __pcstackBANK2 0160                __pcstackBANK3 0190  
    __end_of_Aquisicao_Dados 1F1F         read_from_EPPROM@data 00A7          ?_UART_Write_Decimal 00BE  
          __size_of___xxtofl 00BC                  _alarm_check 13AE                  sprintf@flag 00B9  
                sprintf@prec 00BA                    _fan_count 004F             ___lwdiv@dividend 003D  
      read_from_MR@int_input 00E7                  I2C_Read@ack 003B         ??_UART_Write_Decimal 00C0  
               _read_from_MR 0B4D                     ?___aldiv 00A0                     ?___fldiv 00BC  
                   ?___awdiv 0070                   teclado@ret 00A3                   teclado@tmp 00A0  
                   ?___flmul 00D6                     ?___fltol 00E3             main@password_int 0164  
                   ?___lldiv 00AC                   ?__Umul8_16 003B                     ?___lwdiv 003B  
                   ?___lwmod 00A4                  ??_UART_Init 00B2                  ??_UART_Read 003B  
     __end_of_Interrupt_Time 14D0                    __pstrings 0800        __size_ofi1_UART_Write 000C  
               teclado@linha 081A                     _I2C_Hold 1C16                     _I2C_Read 1CB4  
                   _ADC_Init 1BE5                     _ADC_Read 1D5B                     ?_teclado 003B  
                   _I2C_init 1F61      __end_of_write_to_EPPROM 13AE             ___lwdiv@quotient 00A2  
             __size_of_alarm 0039                  ??i1___lwdiv 0074                  ??i1___lwmod 007C  
              move_the_fan@a 01A3                     ?_sprintf 00AA                   UART_Init@x 003C  
          ??_UART_Write_Text 00A0              ___aldiv@divisor 00A0            interrupt_function 0004  
            ___aldiv@counter 00A8               ___wmul@product 00A0              _UART_Data_Ready 1BCF  
           _read_from_EPPROM 0901                    clear_ram0 1BDD          __size_of_print_json 0056  
                   _GO_nDONE 00FA                  ??i1_sprintf 002B                 i1_UART_Write 1C0A  
                  main@F1074 01E3   __size_ofi1_UART_Write_Text 0042            UART_Init@baudrate 00AE  
           __size_of_I2C_End 0009              ?_Interrupt_Time 0070                  __stringbase 080F  
                   _PWM_Duty 163D            ___wmul@multiplier 003B                     i1___wmul 1CFE  
                   _PWM_freq 0051             ?_Aquisicao_Dados 01A3            ___lmul@multiplier 00A0  
             teclado@timeout 003B          Aquisicao_Dados@aqui 01AF             i1UART_Write@data 0070  
           ??_UART_Read_Text 003D                ?i1_print_json 0070                I2C_Write@data 003B  
                ??__Umul8_16 003D        __size_of_move_the_fan 001C             __size_of___aldiv 00B1  
           __size_of___fldiv 01DD             __size_of___awdiv 0067             __size_of___flmul 0583  
           __size_of___fltol 007C             __size_of___lldiv 0078             __size_of___lwdiv 005F  
           __size_of___lwmod 003C           __end_of__stringtab 0810                   sprintf@val 00BB  
                   ___xxtofl 1581              ___lwdiv@divisor 003B             __size_of_teclado 011E  
           ?_write_to_EPPROM 0070              ___lwdiv@counter 00A1                    teclado@to 00A1  
                   __ptext10 1C00                     __ptext11 1CB4                     __ptext20 0A46  
                   __ptext12 1BF7                     __ptext21 1EA5                     __ptext13 1BEE  
                   __ptext30 1FB0                     __ptext22 109E                     __ptext14 1C16  
                   __ptext31 123D                     __ptext23 10FD                     __ptext15 1C5B  
                   __ptext40 1D5B                     __ptext32 1EE1                     __ptext24 1C23  
                   __ptext16 163D                     __ptext41 1BE5                     __ptext33 11C8  
                   __ptext25 1715                     __ptext17 13AE                     __ptext50 1161  
                   __ptext42 142F                     __ptext34 1581                     __ptext26 1BCF  
                   __ptext18 1E32                     __ptext43 1D29                     __ptext35 12B5  
                   __ptext27 07B1                     __ptext19 1048                     __ptext44 0951  
                   __ptext36 0051                     __ptext28 14D0                     __ptext45 1E6B  
                   __ptext37 1DC4                     __ptext29 1F61                     __ptext46 1004  
                   __ptext38 05D4                     __ptext47 1F1F                     __ptext39 1C44  
                   __ptext48 1C0A                     __ptext49 1CFE      __end_of_UART_Data_Ready 1BD5  
            _get_temperatura 11C8             __size_of_sprintf 0107           i1___lwdiv@dividend 0072  
        UART_Write_Text@text 003C                __size_of_main 027F               ??i1_print_json 0034  
               _move_the_fan 1C5B                   _LAST_ALARM 0047           i1___lwdiv@quotient 0075  
               ??_print_json 00BE         write_to_EPPROM@F1063 01C5                     init_ram0 1C35  
               ?_alarm_check 00BF                     intlevel1 0000                    sprintf@ap 00B8  
                  sprintf@sp 00AA                     teclado@i 00A4             ___lwmod@dividend 00A6  
           ___lldiv@dividend 00B0         write_to_EPPROM@text1 00A6                    stringcode 080A  
         __end_of_print_json 109E                I2C_init@feq_K 00B9       __Umul8_16@multiplicand 003B  
   __end_of_read_from_EPPROM 0951              _UART_Write_Text 10FD                   _OPTION_REG 0081  
                   sprintf@c 00BD                     sprintf@f 00AC             ___lldiv@quotient 00B4  
            ___lwmod@divisor 00A4      __end_of_get_temperatura 123D                     strlen@cp 00A1  
            ___lwmod@counter 00A9                     stringdir 080A                     stringtab 0800  
               ___aldiv@sign 00A9                   _UART_Write 1C23             ?_UART_Data_Ready 0070  
           UART_Write_Text@i 00A3         __Umul8_16@multiplier 00A4            __Umul8_16@product 00A0  
              ?_get_humidade 00A1  
